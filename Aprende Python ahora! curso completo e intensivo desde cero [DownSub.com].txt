tienes que aprender python y lo tienes

que aprender Ahora si quieres trabajar

con Inteligencia artificial

microcontroladores gestionar archivos

automatizar tareas o crear aplicaciones

web tienes que aprender python y lo

tienes que aprender ahora y ni siquiera

hemos hablado de los salarios developer

180 mil dólares al año negociables y

trabajando desde casa ingeniero con

conocimientos en python pagan desde 150

mil dólares trabajando en las bancas

esto quiere decir posibilidad de

relocación 100% Sr e en cero desde

150.000 dólares al año puedes trabajar

en la oficina o remoto y te regalan

además cinco días extra de vacaciones al

año pero adivina tienes que saber python

techlit Data and insights desde 150.000

y lo Adivinaste python el punto está

súper Claro si quieres trabajar en ti y

Quieres ganar dinero tienes que aprender

python y lo tienes que aprender ahora

pero qué es python python es un lenguaje

de alto nivel y multipropósito este lo

utilizan empresas como Google Microsoft

y Netflix y según la encuesta de stack

overflow developer del año 2022 python

es el lenguaje preferido para aprender a

programar y no los culpo ya que es súper

fácil de aprender Entonces estás listo

para aprender python

[Música]

y no te preocupes por los requisitos de

este curso está diseñado para que

empieces desde cero y yo te voy a

enseñar todo lo que necesitas saber en

cuanto a python para que así te puedas

transformar en un programador que a las

empresas les encantará contratar

Entonces ya que sabes que no hay

requisitos vamos a ver el temario de

este curso lo primero es una

introducción desde instalar las

herramientas que necesitas hasta la

explicación de cómo se ejecuta el código

en python también veremos los tipos

básicos veremos también control de flujo

funciones tipos avanzados veremos

también las clases con por supuesto

programación orientada a objetos y esto

también va a incluir la herencia también

veremos las excepciones módulos

librerías nativas el índice de paquetes

de python o También conocido como pib

acá vas a aprender a gestionar tus

dependencias y también vas a aprender a

publicar tus propios módulos veremos

también las librerías más populares me

quedé sin espacio es mucho contenido

continuaremos al lado vamos a ver

también una introducción a yango aquí

nosotros vamos a construir una

aplicación con Django también vamos a

ver Machine learning y todo esto por

supuesto que acompañado de ejercicios

para que nosotros podamos practicar lo

aprendido las primeras cinco horas las

vas a poder encontrar acá en YouTube

estas cinco horas tienen absolutamente

todo lo necesario para que puedas

empezar con python si te gusta este

curso y quieres profundizar más para

convertirte en un experto en python

puedes adquirir mi curso completo en la

descripción de este video y qué

necesitas para tomar este curso

necesitas un computador check necesitas

también una conexión a internet y si

estás viendo Este vídeo check y también

tienes que Reproducir Hola bits mientras

estás viendo este curso Pero cómo se

reproduce Hola bits vas a Spotify

pinchas acá en Buscar acá arriba

escribes Hola Beats Y pinchas en este

botón de Play y listo de esta manera

apoyas al Canal y aprovechas de

concentrarte más mientras estudias

[Música]

lo primero que tenemos que hacer es

ingresar a la web de python esta es

python punto o r g y lo que tenemos que

hacer nosotros es venir justamente a

esta pestaña de navegación que dice

Download aquí nosotros vamos a ver las

versiones que tenemos disponibles de

python para poder instalar en este caso

me está mostrando la versión de python

3.11.1 Independiente de la versión que

les aparezca acá el contenido de este

curso les va a servir siempre y cuando

nos mantengamos dentro de la versión 3

de python en el caso que ustedes tengan

alguna versión antigua de Windows les va

a indicar que python 3.9 no puede ser

ejecutado en la versión de Windows 7 o

en versiones anteriores Y en el caso que

ustedes se encuentren en otro sistema

operativo Como por ejemplo podría ser

Mako s ustedes lo que hacen es que

pinchar acá o pinchan en otras

plataformas y esto lo que hará será

mostrarle las instrucciones y el

instalador dependiendo de la plataforma

en la cual ustedes estén ejecutando

python así que nosotros lo que vamos a

hacer es pinchar acá donde dice python

3.11.1 vamos a esperar a que esto se

descargue eso fue muy rápido vamos a

pinchar acá donde dice Show in folder y

le voy a dar doble click a esto para

poder instalar python 3.11.1 algo

importante si ustedes están con Windows

11 lo más probable es que ya venga

instalada una versión de python dentro

de Windows si esto llegas a ser así les

va a mostrar esta opción de upgrade Now

si no fuese así Sencillamente les va a

mostrar la opción de instalar y algo

sumamente importante cuando ustedes

estén instalando python en Windows les

va a mostrar una pequeña opción acá que

va a decir algo como Paz o agregar

python al path esa opción selección

selecciónenla si es que no la

seleccionan python no les va a funcionar

Y no van a poder ejecutar el contenido

de este curso seleccionenla Así que

ustedes Sencillamente pinchan acá y le

dan aquí a Yes esperamos a que termine

de instalar luego de que se haya

instalado nos va a mostrar esta pequeña

opción acá de disable paz lento limit

esto nos va a permitir que todas las

aplicaciones que nosotros corramos en

python se ejecuten de manera correcta

Así que vamos a seleccionarlo le vamos a

indicar Yes y luego de eso podemos

pinchar aquí en Close ahora podemos

cerrar nuestro explorador y también

podemos cerrar nuestro explorador web

ahora lo que quiero que hagan es que

pinchen acá en este icono de buscar y

aquí lo que van a hacer es escribir cmd

que esta es la forma corta de escribir

command o terminal de línea de comandos

en este caso vamos a pinchar acá y

quiero que escriban lo siguiente python

presionan enter y aquí les debería

Mostrar exactamente qué versión ustedes

tienen instalada en este caso Yo tengo

la 3.11.1 y ahora para que nosotros

podamos salir de acá lo que tenemos que

hacer es mantener presionada la tecla de

control presionamos Z y luego

presionamos enter y esto nos va a

devolver nuevamente a la línea de

comandos y Listo ya hemos instalado

python en el caso de maco s o Linux esto

es mucho más sencillo nosotros lo que

tenemos que hacer en el caso de Mac

presionamos Comando espacio y en nuestro

lanzador de aplicaciones vamos a

describir terminal aquí nosotros

presionamos enter y aquí en pequeñito

vamos a escribir python voy a agrandar

Eso sí un poco la letra y luego descrito

python tenemos que agregar el número 3

al final y ahora presionamos enter la

razón por la cual nosotros tenemos que

agregar el número 3 es que maco s y

Linux ya vienen con python 2 instalado y

python 2 es una versión más antigua de

python que esta fue mantenida hasta el

año 2020 en este caso nosotros vamos a

utilizar python 3 Así es que una vez

escrito python 3 presionamos enter y

esto lo que va a hacer es que nos va a

arrojar aquí nuevamente al de python y

si no sabes qué es lo que acabo de decir

lo que dije fue repell y repell

significa read igual de evaluar print y

la l es por Loop o sea esto vendría

siendo un Loop que está constantemente

leyendo evaluando e imprimiendo todo lo

que nosotros escribimos acá ahora lo que

podemos hacer es Sencillamente salir de

acá para poder salir del repell lo que

nosotros tenemos que hacer es mantener

presiona control y presionamos la tecla

d y eso lo que hará será dejarnos

nuevamente en la línea de comandos ahora

podemos pasar a escribir nuestro primer

programa en python

[Música]

vamos a indagar un poco más con el

repell de python en el caso de los

usuarios de Mac tienen que escribir

python 3 y si son usuarios de Windows

tienen que escribir solamente python

dentro de la terminal que Nosotros

acabamos de ver esa que apareció cuando

nosotros buscamos cmd y en el caso de

los usuarios de Mac esa que apareció

cuando nosotros buscamos terminal Así es

que escribimos python o python 3 y

presionamos enter y aquí nosotros vamos

a ver el repell de python El repell Es

una herramienta que nosotros podemos

utilizar para poder comunicarnos con el

intérprete de python en este caso yo les

estoy diciendo repell y repell viene de

read Y vald eso es la e la p es por ring

y la l es por Loop En otras palabras es

algo que está constantemente leyendo

evaluando e imprimiendo en pantalla lo

que nosotros le estamos entregando o el

resultado de las operaciones que

nosotros le estamos entregando eso es el

repell y el repell se encarga de

comunicarse con el intérprete ahora

nosotros vamos a empezar a jugar un poco

con el repel para eso vamos a venir acá

y vamos a empezar a colocar operaciones

básicas vamos a escribir Dos más Dos y

fíjense que acá yo estoy colocando un

espacio entre medio del 2 y del símbolo

de más estoy haciendo Exactamente lo

mismo luego del símbolo de más y del 2

Esto es para que sea más fácil de leer

lo que yo estoy escribiendo y ahora una

vez de que escribimos 2 + 2 presionamos

enter y esto como pueden ver acá me está

devolviendo 4 en este caso el resultado

de la operación de 2 + 2 vamos a ver más

operaciones vamos a ver que podemos

también restar 3 - 1 este nos entrega

dos también podemos multiplicar eso

nosotros lo hacemos con el asterisco Así

es que escribimos dos asterisco y el

número que queremos multiplicar en este

caso Yo quiero que sea 4 nos devuelve 8

y también podemos dividir voy a colocar

16 dividido el dividido se utiliza con

el Slash hacia adelante se realiza con

el Slash hacia adelante y aquí yo lo que

voy a hacer Es que voy a escribir cuatro

y Por ende el resultado va a ser el de 4

en este momento me está mostrando 4.0

pero no se preocupen por eso nosotros lo

vamos a ver más adelante en la siguiente

sección ahora vamos a también otras

operaciones que nosotros podemos

realizar en python vamos a colocar en

este caso un 2 seguido del símbolo mayor

que y vamos a colocar el número uno y

esto como pueden ver me está devolviendo

true esto es un boolean y vamos a ver

esto un poco más en profundidad más

adelante en una siguiente sección así

que no se preocupe tampoco por esto

Ahora vamos a ver qué es lo que ocurre

si yo coloco dos Es mayor que 5 presiono

enter Y en este caso me va a devolver

false que este también es un boolean

como les decía Ya lo vamos a ver en un

futuro ahora qué es lo que ocurriría si

yo coloco por ejemplo 5 + y no colocó

absolutamente nada más Solamente acá yo

presiono enter y me voy a dar cuenta que

aquí me está mostrando un error voy a

presionar un par de veces enter para que

me muestre mejor el mensaje y aquí me

está indicando el error file estándar

input línea 1 me está indicando 5 + y

aquí me está mostrando un pequeño carete

aquí lo que me está queriendo decir es

que justamente Aquí es donde se

encuentra el error y el error que yo

estoy recibiendo es el de sintax error o

sintaxis inválida vamos a ver más de los

errores en una siguiente lección por

ahora no se preocupen Pero lo que sí

tienen que ver en este caso es que con

python nosotros podemos realizar

operaciones Matemáticas y también

nosotros podemos cometer errores y en

este caso los errores el intérprete de

python se va a encargar de comunicarnos

a nosotros cuando Nosotros hemos

cometido un error ahora qué es lo que

ocurre cuando nosotros queremos

construir una aplicación de verdad en

este caso nosotros no vamos a utilizar

el repeler no esto nosotros no lo vamos

a utilizar esto se utiliza cuando

nosotros queremos practicar con el

lenguaje Y de pronto queremos hacer una

evaluación rápida para veces que estamos

escribiendo nuestro código bien pero ese

no es el caso cuando nosotros vamos a

construir una aplicación de verdad Para

eso nosotros vamos a necesitar un editor

de código con el cual nosotros vamos a

crear archivos que van a tener una

extensión punto p y así que en nuestro

siguiente vídeo vamos a ver el editor de

código que nosotros necesitamos Y si

alguna de las últimas cosas que te dije

no te hizo sentido No te preocupes cada

una de estas cosas va a tener su vídeo

dedicado en el futuro

[Música]

cada vez que nosotros escribimos código

por lo general tenemos solamente dos

opciones para poder escribirlo la

primera vendría siendo con un editor de

texto o editor de código y la segunda

opción vendría siendo con un ID ide

significa integrated development

environment esto quiere decir que un ide

va a tener más herramientas que un

editor de texto en este caso va a tener

herramientas como autocompletado

devaging y también testing o

herramientas para poder ejecutar

nuestros test autocompletado como bien

indica el nombre es una herramienta que

a medida que nosotros vamos escribiendo

esta nos va a ir sugiriendo distintas

opciones para que nosotros podamos

terminar de escribir y así nosotros

podemos programar más rápido y no es

necesario que nosotros nos acordemos de

absolutamente todas las opciones que

tiene un lenguaje de programación quiere

decir depuración esto quiere decir van a

ser herramientas que nos van a ayudar a

nosotros a poder encontrar los errores

que tiene nuestro código y testing

vendría siendo una herramienta que nos

va a permitir a nosotros poder ejecutar

nuestra suite de Test dentro de nuestro

ide el ide más conocido a nivel mundial

actualmente es pay charm y En

comparación con un ide un editor de

texto No necesariamente va a tener todas

estas funcionalidades sin embargo estas

igual se pueden ir agregando como

extensiones en este caso existe el

editor de texto BS code el cual vendría

siendo el editor de texto más popular en

la actualidad también existe Sublime

text entre muchos otros en este curso

nosotros vamos a utilizar BS code porque

este derechamente es el más popular por

lo que probablemente va a ser el que sea

más fácil de aprender para ti si no

sabes utilizar BS code puedes ir a mi

canal de YouTube y ver el vídeo que

tengo yo de aprende de ese code ahora en

este yo te enseño de manera

completamente gratuita a utilizar este

editor de texto BS code y te enseño en

menos de una hora Ahora que ya hemos

visto esto podemos ir ahora a descargar

nuestro editor de texto BS code tú

puedes utilizar el que tú quieras pero

como nosotros vamos a utilizar en este

curso BS code yo te recomiendo que

utilices vscode para que te sea más

fácil seguir con este curso Así que abre

tu explorador web favorito y escribe vs

code aquí tienes que pinchar donde dice

Download pinchas ahí y aquí te va a

entregar distintas opciones dependiendo

de tu sistema operativo aquí tenemos

opciones para Windows Tenemos también

para Linux y si es que bajamos un

poquito más También tenemos una opción

para Mac Us Así es que descárgalo

instálalo esto es muy fácil de instalar

es Sencillamente siguiente siguiente

siguiente y cuando termines de

instalarlo nos veremos en el siguiente

video

[Música]

ahora ya con vs code abierto lo que

vamos a hacer es que vamos a ir al menú

de arriba a donde dice archivo o file y

aquí nosotros vamos a pinchar donde dice

Open pinchamos acá y ahora lo que

tenemos que hacer es crear una carpeta

donde nosotros queramos aquí puede ser

en el escritorio puede ser en una

carpeta dentro de sus documentos donde

ustedes quieran pero tienen que

acordarse de donde ustedes guardaron

esta carpeta Así que yo lo que voy a

hacer es que me voy a venir aquí a donde

dice workspace y aquí yo voy a crear una

carpeta que se va a llamar curso guión

py y voy a presionar enter Luego de eso

voy a pinchar en el botón donde dice

Open pincho acá y en el caso de que vs

code no lo haya hecho por mí yo voy a

venir a pinchar acá en este icono que se

encuentra acá Así que pincho en él pero

como ya se ha encontrado abierto Yo

Sencillamente voy a volver a pinchar en

él esto que parece acá se le conoce como

el Explorer o el explorador de archivos

y este nosotros lo vamos a utilizar para

poder ir navegando dentro de los

proyectos que nosotros creemos en python

ahora lo que voy a hacer Es que voy a

pinchar aquí en esta x que y aquí

justamente en esta parte donde dice

curso guión py voy a pinchar en este

botón que este es para poder crear un

nuevo archivo pincho en él y voy a

colocarle

intro.pey y presiono enter ahora voy a

volver a pinchar acá en este logo para

cerrar el explorador de archivos

perfecto y ahora nosotros vamos a

escribir nuestro primer programa en

python y lo que vamos a hacer es que

vamos a utilizar una función que se

llama print las funciones en python

vendrían siendo como las instrucciones

que vienen predeterminadas en alguna

consola en algún control remoto o

incluso las que se encuentran dentro de

las cocinas ya sean eléctricas o sean a

gas pensemos un poco ahora en la cocina

cada vez que nosotros queremos encender

la cocina vamos a tener que

necesariamente girar la perilla un poco

para que ésta empiece a liberar un poco

de gas en el caso de que sea una

eléctrica nosotros tenemos que indicar

cuál va a ser la potencia que nosotros

queremos imagínense que cada una de

estas perillas vendría siendo una

función integrada dentro de nuestra

cocina de la misma manera cuando

nosotros estamos trabajando con una

consola estas consolas van a tener un

botón para arriba para abajo izquierda

derecha y también un botón para encender

y apagar la consola cada uno de estos

botones piensen que son funciones

integradas que se encuentran dentro de

nuestra consola y que finalmente después

la consola va a terminar utilizando para

las tareas que ellos quieran hacer

pensemos en otro ejemplo de función

cuando nosotros tenemos en la radio de

un auto estos van a tener funciones para

poder subir y Bajar el volumen también

como para poder adelantar la estación o

para poder pasarse a una estación

anterior en este caso cada una de estas

acciones vendría siendo una función que

tiene integrada la radio en el caso de

los lenguajes de programación es exacta

Exactamente lo mismo aquí nosotros

estamos viendo una función que se llama

print Y en este caso Esta es una función

que viene incluida dentro del lenguaje

de python y esta nos va a servir para

poder imprimir en la terminal datos que

nosotros queramos vamos a ver cómo

nosotros podemos hacer eso mismo

justamente acá donde dice print vamos a

hacer lo siguiente vamos a escribir Abre

paréntesis redondos y vamos a ver que

inmediatamente ve ese code lo que hizo

fue escribir por nosotros inmediatamente

el cierre paréntesis redondos estoy

diciendo redondos porque acá en python

también podemos utilizar los paréntesis

de corchetes y también los paréntesis de

llaves ahora ya que hicimos esto Esta

función nosotros cuando abrimos y

cerramos paréntesis le estamos diciendo

que la estamos ejecutando si nosotros no

colocamos este abre y cierra paréntesis

la función necesariamente no se va a

ejecutar vamos a tener que sí o sí

colocar este abre y cierra paréntesis

para que la función de print funcione

ahora ya que sabemos cómo se llama lo

que haremos ahora será colocar

justamente dentro de los paréntesis

redondos entre medio del paréntesis

redondo de izquierda y el de derecha

vamos a colocar dos comillas dobles para

eso Sencillamente escribimos las

comillas dobles una vez y vs code lo que

hará será completar la siguiente comilla

doble ahora lo que vamos a hacer es que

vamos a escribir dentro de estas

comillas dobles Hola mundo y vamos a

colocar un símbolo de exclamación y

ahora nosotros vamos a guardar para

poder guardar si es que estamos en Mac

os vamos a tener que presionar la tecla

de comando y luego presionamos s y en el

caso de Windows tenemos que mantener

presionada la tecla de control y luego

presionamos s y si se fijaron justamente

acá aparecía un circulito y cuando

nosotros guardamos Este cambio a una x

Esta es la manera que tiene BS code para

indicarnos a nosotros cuando algo fue

guardado vamos a cambiar esto nuevamente

voy a eliminar el símbolo de exclamación

y ahora podemos ver cómo este circulito

ha vuelto a aparecer voy a volver a

colocar el símbolo de exclamación y voy

a volver nuevamente a guardar ahora lo

que yo quiero hacer es abrir la terminal

integrada que viene dentro de BS code

Por qué Porque nosotros vamos a utilizar

la línea de comandos para poder ejecutar

el programa que Nosotros acabamos de

escribir Para poder abrir la terminal

integrada nosotros lo podemos hacer de

dos formas la primera es que nosotros

nos vayamos aquí a nuestra pestaña de

View y aquí nosotros seleccionamos

terminal pero la verdad es que esa es la

forma fome de hacerlo yo les voy a

mostrar la forma divertida Y en este

caso es utilizando un atajo de teclado

para eso nosotros lo que vamos a hacer

es mantenemos presionada la tecla de

control y presionamos la tecla de bactic

y bactic es la tecla que se encuentra

justamente a la izquierda del número 1

en nuestros teclados y eso lo que va a

hacer que nos va a abrir esta terminal

integrada que nosotros estamos viendo

acá ahora lo que nosotros tenemos que

hacer es ejecutar el programa que

Nosotros acabamos de escribir Para eso

aquí mismo dentro de nuestra misma

terminal integrada vamos a escribir

python en el caso de Windows y en el

caso de maco s nosotros vamos a

describir python 3 y luego de eso

tenemos que escribir el nombre del

archivo que nosotros creamos si no

recordamos el nombre del archivo este se

encuentra acá en este caso es

intro.pey así que escribimos intro punto

py y presionamos enter y aquí nosotros

podemos ver cómo nuestro programa se

está ejecutando de manera correcta aquí

nosotros estamos imprimiendo el String

de Hola mundo que es un String Ya lo

vamos a ver por ahora vamos a hacer que

este programa sea un poco más

interesante Así que lo que vamos a hacer

ahora es que vamos a cerrar nuestra

terminal integrada para eso vamos a

utilizar el mismo atajo de antes

mantenemos presionado control y

presionamos bactic y ahora lo que vamos

a hacer es que vamos a agregar

nuevamente un print y vamos a colocar

ahora en lugar de Hola mundo vamos a

escribir el weta y vamos a describir el

hueta el hueta es un insecto endémico de

Nueva Zelanda Y es de los insectos más

pesados que se encuentran en el mundo y

lo que vamos a hacer es que justamente

después de nuestras comillas dobles

vamos a colocar un espacio muy

importante el espacio vamos a colocar un

asterisco y luego de eso vamos a colocar

cuatro y ahora volvemos a guardar

nuevamente con nuestro Tajo de teclado

de comando s o control S ahora vamos a

volver a abrir nuestra terminal

integrada y lo que vamos a hacer es que

vamos a presionar la flecha de hacia

arriba y eso lo que va a hacer es que

nos va a mostrar nuevamente la última

línea que nosotros ejecutamos dentro de

nuestra terminal que en este caso era

python 3 con intro.pe y así es que ahora

lo que vamos a hacer es que vamos a

presionar enter y aquí ya vemos algo

Bastante interesante vemos primero que

se está imprimiendo Hola mundo y luego

se está imprimiendo el hueta 4 veces

esto nos está indicando dos cosas La

primera es que los programas que

nosotros escribimos en python se van a

ejecutar desde arriba hacia abajo eso es

lo primero y lo más importante y lo es

que nosotros podemos utilizar el

operador de asterisco seguido de un

número para poder multiplicar la

cantidad de veces que nosotros queremos

que algo aparezca impreso en este caso

nosotros estamos agarrando nuestra

palabra nuestra frase del hueeta y

estamos haciendo Que aparezca cuatro

veces aquí nosotros tenemos el web al

weta y luego de esto ya podemos

continuar instalándole extensiones ABS

code estas extensiones nos van a ayudar

a nosotros para que podamos escribir

nuestro código en python de una manera

bastante más sencilla transformando

nuestro BS code casi que en un ide

[Música]

ahora veremos Cómo podemos transformar

nuestro vsco en un potente entorno de

desarrollo integrado o como nosotros

habíamos dicho antes un ID o ID o

integrated environment la herramienta

que nosotros vamos a instalar ahora es

una extensión de python eso nosotros lo

vamos a instalar accediendo aquí a esta

parte ahora esta herramienta que se

llama python nos va a permitir a

nosotros poder transformar vs code en un

ide como les había mencionado

anteriormente Y esto lo que hará será

entregarnos herramientas como linting y

linting lo que hará será tomar nuestro

código y ver si es que puede encontrar

algún potencial error dentro de nuestro

código solamente por como este se

encuentra escrito Además de eso nos va a

entregar herramientas de autocompletado

y la herramienta de autocompletado hace

exactamente lo que dice ésta nos va

sugiriendo texto a medida que nosotros

vayamos escribiendo de manera que

nosotros no tengamos que escribir la

instrucción completa Además nos entrega

herramientas para poder hacer devagi y

esta herramienta de deepaking se basa en

que nosotros podamos buscar y encontrar

errores dentro de nuestro código Además

nos entrega herramientas de code

formateting o También conocido como

formativo de código y esto lo que hace

es que contribuye con que nuestro código

sea más fácil de leer en un futuro

ustedes cuando estén comenzando con

otros desarrolladores siempre va a

existir la conversación de que un código

es más fácil de leer que otro code

formatin nos va a ayudar a que nuestro

código que nosotros escribamos sea un

poco más legible y también se vea más

bonito también nos entrega herramientas

de unitesting que de esta manera

nosotros podemos escribir pruebas

automatizadas para asegurarnos que

nuestro código está siempre funcionando

y también no se entrega code snippets y

los code snippets son pequeños atajos

que nosotros podemos escribir en vez de

ese code los cuales después van a ser

expandidos en versiones de código más

completas esto es básicamente son

herramientas de magia negra que nosotros

vamos a ir aprendiendo a utilizar en un

futuro ahora Esto no se lo memoricen los

vamos a ir viendo en detalle más

adelante Así que ahora nosotros nos

tenemos que ir a las extensiones para

eso yo voy a pinchar acá porque no me

alcanza Mostrar todas mis extensiones y

vamos a pinchar acá donde extensiones

ahora si es que ustedes no les muestra

project manager no se preocupen Esta es

una extensión que ustedes van a poder

instalar después Sencillamente pinchan

acá en extensión como pueden ver el

icono de extensión es este que aparece

acá que vendría siendo como unos

bloquecitos que se van colocando uno

encima de otro ahora lo que nosotros

tenemos que hacer es instalar la

extensión que se llama python así que

escribimos acá arriba pyt h o n y aquí

lo que tenemos que hacer es instalar la

extensión de python pero tenemos que

asegurarnos que esta diga Microsoft

porque podría ser que exista otro

proveedor que también haya escrito una

extensión que también se llame python

así que nosotros tenemos que

cerciorarnos que diga Microsoft aquí

nosotros pinchamos en install perfecto

terminó la instalación Así que nos vamos

a devolver a nuestro explorador y vamos

a pinchar nuevamente aquí en nuestro

archivo de intro.pey y aquí nos está

mostrando que este archivo por supuesto

es un archivo con extensión de tipo

python aquí nosotros también tenemos la

versión de python que en este caso

estamos utilizando la 3.11.1 si es que

ustedes no les aparece eso ustedes lo

único que tienen que hacer es que

pinchar acá y seleccionan la versión que

ustedes quieran utilizar que en este

caso es la versión 3.11.1 si a ustedes

por alguna razón no les llega a aparecer

un popup acá para poder instalar una

nueva extensión que necesitamos No se

preocupen nosotros lo vamos a ver ahora

pero si les aparece ustedes pueden

pinchar ahí para poder instalarla y

activarla y la extensión que nosotros

necesitamos en este caso se llama pilint

así que nos vamos a devolver acá y vamos

a escribir acá vamos a borrar python y

vamos a dejar escrito pay y escribimos

link y aquí tenemos que hacer

exactamente lo mismo tenemos que

instalar la cual fue creada por

Microsoft así que nosotros pinchamos acá

en install como les había dicho antes

pilint es un linter que en este caso nos

va a ayudar a nosotros para que el

código que nosotros escribamos pueda

encontrar potenciales errores solamente

por la forma en la cual nosotros lo

estamos escribiendo y en este caso

vendría siendo dentro de los linters más

populares que se utilizan en python y ya

que se instaló de manera correcta

podemos pasar a la siguiente lección y

en la siguiente lección yo les voy a

mostrar Cómo funciona el inter

[Música]

de vuelta a nuestro archivo de

intro.py nosotros ahora podemos ver que

la función de print ahora se encuentra

subrayada con un tenue color azul para

ti podría estar subrayada en otro color

Acuérdate de ese color porque lo que

quiere hacer es mostrarnos alertas No

necesariamente errores pero sí alertas

ahora estas alertas son producidas por

el inter que Nosotros acabamos de

instalar si es que nosotros llegamos y

colocamos el mouse acá encima nos va a

mostrar un montón de texto y si bajamos

hasta el final nos debería Mostrar Aquí

está final New Line missing que vendría

siendo Cuál es el error que nos está

mostrando o en este caso la advertencia

esto es más que nada por un tema de

formateo de código ahora si nosotros

vemos acá no nos está entregando

absolutamente ninguna posible solución

para poder solucionar este problema

Sencillamente nos va a indicar acá que

nos falta una línea final ahora como nos

dice que nos falta una línea final esto

es sumamente fácil de solucionar

Sencillamente presionamos enter

justamente al final guardamos y ahora

podemos ver que esto ha desaparecido

desapareció esa línea subrayada que

estaba subrayando print ahora podemos

cerrar esto y vamos a colocar el mouse

encima del print anterior y vamos a ver

qué es lo que nos muestra vamos a bajar

y aquí nos está mostrando que nos falta

dog String missing model docking ping y

aquí nos está mostrando un código ahora

podría ser que estos errores nosotros

los veamos y no tengamos absolutamente

ninguna idea de A qué es lo que se

refiere nosotros perfectamente ahora lo

que podemos hacer es tomar este código

que aparece acá que es el de c0114 este

lo podemos copiar y luego lo podemos ir

a buscar al explorador para ver qué es

lo que nos arroja vamos a hacer eso

vamos a abrir Chrome y vamos a buscar

acá dentro

c0114 para ver qué es lo que éste nos

devuelve vamos a pinchar aquí dentro del

primer link y aquí nos está indicando

que nos falta agregar un String en este

caso el error que tenemos nosotros antes

es que tenemos el código que nosotros

habíamos escrito pero sin un String

anterior como podemos ver aquí la única

diferencia entre el código bueno y el

código malo es esta línea que aparece

acá Así que lo que vamos a hacer es que

vamos a copiar esto vamos a cerrar el

explorador y nos vamos a devolver a

nuestro archivo y lo vamos a agregar

como primera línea ahora vamos a guardar

y vemos que esta advertencia ha

desaparecido ahora vamos a aprovechar de

ver esta funcionalidad cuando nosotros

estamos utilizando las tres comillas

dobles para poder definir una palabra o

una frase en este caso nosotros la vamos

a poder utilizar para poder definir

palabras o frases que tengan múltiples

líneas en este caso tenemos System

module pero yo no quiero que se llame

System module yo lo voy a cambiar por

Introducción a python y voy a guardar

esto por supuesto que también lo podemos

dejar en una sola línea y de esta manera

Nosotros hemos eliminado los warnings

que aparecían antes ahora lo que voy a

hacer para ir probando mi lintern voy a

ir escribiendo por ejemplo voy a

escribir print y voy a colocar un

espacio y ahora voy a colocar Lalala

como podemos ver ahora Lalala me lo está

subrayando en rojo y si acá vemos bien

Qué es lo que está ocurriendo nos está

indicando que Lalala no se encuentra

definido Incluso si nosotros colocamos

los paréntesis redondos este nos va a

arrojando un error acá nos va a seguir

indicando que Lalala no se encuentra

definido y además ahora tenemos

nuevamente el problema que tenemos que

agregar una línea justamente al final

del archivo por ahora voy a eliminar

esto y ahora lo que voy a hacer Es que

voy a tratar de escribir tres más y lo

voy a dejar Sencillamente ahí ahora si

es que yo guardo y coloco el mouse acá

encima me va a indicar que está

esperando una expresión que en este caso

tengo una sintaxis inválida Esto es lo

útil del inter nosotros no tenemos que

esperar a correr nuestro código para

poder ver potenciales errores nosotros

los podemos ver inmediatamente a medida

que nosotros estamos escribiendo código

Así que esto ahora nosotros lo podemos

cerrar y ahora lo último que nos falta

por ver son las opciones del inter en

nuestra paleta de comandos la paleta de

comandos vendría siendo como un lugar

central donde nosotros podemos ejecutar

todos los comandos que nosotros queramos

pero ahora Nosotros los vamos a utilizar

solamente para poder ver las distintas

opciones que nos entrega el inter para

poder acceder a este nosotros tenemos

que presionar shift Comando p o en el

caso de Windows es shift control p y

nosotros escribimos link y aquí nos va a

empezar a Mostrar todas las opciones

asociadas al inter en este caso tenemos

seleccionar el inter Tenemos también

reiniciar el servidor y múltiples

opciones más yo me voy a venir aquí a

donde dice Select linter y aquí nosotros

podemos tener la opción de Deshabilitar

el inter o también podemos utilizar

otros lentes que actualmente existen y

que tú podrías perfectamente utilizar lo

importante de esto es que cada inter va

a mostrar los errores de una manera

distinta y no va a ser extraño que de

pronto cuando tú te encuentres

trabajando con otros desarrolladores que

algunos se encuentre utilizando por

ejemplo fake 8 o prospecto Style Y en

este caso el más utilizado y el más

descargado también es pilin que vendría

siendo el de Microsoft que es el que

también se está utilizando por defecto

con la extensión de python Así que en

este caso no es necesario que nosotros

hagamos nada Incluso cuando aquí nos

está mostrando Non se encuentra

utilizando de todas maneras yo

Sencillamente voy a presionar escape

ahora vamos a ver una última

funcionalidad que tiene el inter en este

caso yo voy a colocar aquí nuevamente un

tres más no voy a colocar absolutamente

nada más y voy a guardar aquí nosotros

deberíamos tener los dos problemas uno

que es que nos falta una nueva línea y

además que aquí nosotros tenemos una

expresión inválida si nosotros

quisiéramos ver absolutamente todos los

problemas que se encuentran dentro de

nuestro código basta con que nosotros

nos vayamos aquí abajo a la izquierda

donde aparece esta crucecita acompañada

de un dos y ese símbolo de advertencia

acompañado de un cero nosotros podemos

pinchar acá y aquí nos va a mostrar

todos los potenciales errores que tiene

nuestra aplicación incluso antes de

ejecutarla aquí nos está indicando que

está esperando una expresión en la línea

5 columna 5 que vendría siendo

justamente acá coloquemos un tres a

desapareció nuestro problema pero

todavía nos queda otro y es que tenemos

una sintaxis inválida en la línea 5 yo

Sencillamente voy a eliminar todo esto

voy a guardar y ahora podemos ver que no

tenemos absolutamente ningún problema de

esta manera como nosotros podemos

utilizar el inter y además también

podemos utilizar la ventana de problems

que se encuentra dentro de BS code si es

que tú por alguna razón no quieres venir

acá y te quieres aprender el atajo de

teclado en este caso tienes que ir

arriba donde dice View y pinchas acá

donde dice problems el atajo es shift

Comando m y en Microsoft Windows es

shift control m o también lo que tú

puedes hacer es abres tu terminal

integrada y sencillamente pinchas acá

donde dice problems y ahora podemos

continuar con nuestro siguiente video

[Música]

Ahora les voy a enseñar a hacer que su

código en python se vea sensual para eso

nosotros vamos a venir acá nuevamente a

BS code y lo que vamos a hacer es para

mantenernos un poco más ordenados vamos

a crear un nuevo archivo que se va a

llamar formato punto py y esto lo vamos

a dejar justamente al lado de intro.pey

y aquí lo que vamos a hacer es lo

siguiente vamos a describir la variable

Chanchito igual y vamos a colocar feliz

como una palabra o frase como nosotros

habíamos visto antes ahora lo que

nosotros estamos haciendo acá es crear

una variable nosotros vamos a ver esto

más en profundidad en nuestra siguiente

sección lo que quiero que veamos ahora

es el formateo de esta existe por

convención que nosotros cuando

escribimos una variable y también le

estamos asignando un valor es que tiene

que existir un espacio acá y también un

espacio acá de manera que esto se vea un

poco más legible sin embargo este tipo

de reglas puede ser que tú no te las

sepas de memoria por qué porque estás

recién empezando con python O podría ser

que también estás recién empezando a

programar Así es que si yo dejo este

código este código podría ser

considerado feo afortuna existe una

herramienta que nos va a ayudar a

nosotros a poder formatear nuestro

código cada vez que nosotros queramos

para que este se vea un poco más

elegante para eso nosotros tenemos que

abrir la paleta de comandos la paleta de

comandos Recuerden que es con control

shift p o también puede ser con shirt

Comando p en el caso de Windows o en el

caso de Mac y aquí lo que nosotros

tenemos que hacer es escribir formato y

tenemos que buscar esta opción que dice

format document y aquí nosotros vamos a

pinchar aquí nos va a mostrar algo y

este algo es formatear 8 y not install

install el formateador autoped 8 es el

encargado de utilizar la convención de

pep-8 que la vamos a ver en un segundo

para poder formatear nuestro código

según p8 que vamos a verlo más adelante

esta convención que aparece acá arriba

es fea y no Debería ser considerado como

un código elegante un código legible

afortunadamente nosotros podemos

instalar este formateador para que nos

ayude a formatear nuestro código Así que

lo que nosotros tenemos que hacer es

pinchar acá donde dice yes para poder

instalar esta herramienta y luego de que

se instaló yo lo que voy a hacer Es que

voy a cerrar mi terminal integrada

pinchando en esta x y ahora lo que voy a

hacer es que nuevamente voy a abrir la

paleta de comandos y voy a escribir

nuevamente format y voy a ejecutar El

Comando de forma documento y ahora

podemos ver que casi que por arte de

magia nos ha agregado un espacio en

blanco Acá y también nos agregó un

espacio en blanco Acá ahora vamos a

hacer exactamente lo mismo pero vamos a

definir otras variables vamos a definir

una que se va a llamar a esta Va a ser

igual a 12 y vamos a definir otra que se

va a llamar b y esta Va a ser igual a 13

algunos desarrolladores les gusta hacer

esto definiendo las variables y

colocando los símbolos de igual

justamente alineados esto según Pet 8

opec age está considerado feo Así es que

si es que nosotros ejecutamos nuevamente

la paleta de comandos y volvemos a

ejecutar nuestro Comando de forma

document vamos a ver cómo estas

variables se vuelven a formatear de una

manera que Pepe ate lo considera

elegante o bonito ahora puede ser que

nosotros no queramos estar

constantemente ejecutando la paleta de

comandos y estar escribiendo fortnite y

luego presionando enter para que este

formateo se constantemente

afortunadamente existe una alternativa

que nosotros podemos realizar para poder

configurar nuestro código cuando

nosotros guardamos para eso lo que vamos

a hacer es pinchar aquí en este

engranaje para poder ir a la

configuración y vamos a pinchar acá

donde dice settings y acá donde dice

Search settings vamos a buscar format on

save y fíjense como lo estoy escribiendo

ahora luego de haber buscado formato on

save lo que tengo que hacer es pinchar

justamente acá en esta cajita voy a

pinchar ahora lo que voy a hacer es

cerrar esta pestaña de settings me voy a

devolver aquí a forma punto pip y voy a

cambiar un poco los espacios voy a

volver a guardar y cuando guardo

presionando el comando de control S o

Comando s vemos cómo se vuelve a

formatear nuevamente el código pero de

la manera que es considerada Correcta

Por Pet 8 o Peppa Ahora sí vamos a ver

qué es Pepe abrimos nuestro explorador

web y aquí en Google o en nuestro

buscador preferido tenemos que escribir

python pepes y tenemos que venir a esta

web que dice peps. python.org y

pinchamos en link que aparece acá

pinchamos acá y lo que vamos a hacer es

que vamos a deslizarnos un poco hacia

abajo y vamos a buscar esta que dice 8 y

aquí nos va a mostrar Style guide for

python code Y esta es la convención o la

guía de estilos que se utiliza la más

común por lo menos para poder escribir

código en python y nosotros podemos

introducirla por supuesto un poco más si

es que nosotros pinchamos en esta Y

empezamos a ver toda la documentación

que ésta nos indica nos va a empezar a

entregar un poco más detalles que no se

preocupen Esto se lo voy a ir enseñando

yo a medida que vamos avanzando en el

curso Pero lo importante es que ustedes

tienen que saber Es que la convención

para poder formatear el código de manera

correcta se llama pep8 y por si no lo

sabías Pep significa python en handsment

propausas o traduciendo esto al español

las propuestas de mejoras para python

[Música]

Ahora les voy a mostrar un atajo de Cómo

podemos ejecutar el código en python

pero de una manera más sencilla hasta el

momento la forma que nosotros hemos

tenido para poder ejecutar en nuestro

código en python ha sido abriendo

nuestra terminal integrada y aquí

nosotros escribimos python en el caso de

Windows es solamente python y en el caso

de Mac os es python 3 espacio seguido

del nombre del archivo que en este caso

es intro.pe Y si nosotros presionamos

enter aquí nosotros vamos a poder ver el

String de Hola mundo y el hueta repetido

cuatro veces sin embargo existe una

forma mucho mucho más sencilla de poder

ejecutar código y esa es presionando

este botón de acá arriba de ahora en

adelante ya no vamos a hacer más

diferenciación entre maco s o Windows o

Linux ya que todo lo que nosotros vamos

a hacer es ejecutar el código que

nosotros escribamos presionando en este

botón desde acá ahora lo que nosotros

tenemos que hacer es cerrar nuestra

terminal integrada y ahora sí nosotros

podemos pinchar en este pequeño botón de

Play que si escribimos bien aquí nos

está diciendo Run python file pinchamos

y ahora nosotros podemos ver cómo nos

abrió la terminal nos está indicando acá

Cuál es el comando que utilizó dónde lo

encontró en este caso yo lo estoy

sacando desde up home python 3.11 y

seguido de eso me está indicando el

archivo que está ejecutando Y de dónde

lo Está sacando en el caso que ustedes

quieran utilizar otra versión de python

para poder ejecutar estos mismos

archivos ustedes Sencillamente pinchan

acá cambian la versión de python por

ejemplo a esta la de 3.9.13 y vuelven a

pinchar acá y aquí vamos a ver cómo

cambio la versión de python antes era

3.11 y después pasó a ser solamente

python 3 ahora lo que vamos a hacer es

devolvernos a utilizar python 3.11.1 por

defecto y ya está de ahora en adelante

Cada vez que nosotros queramos ejecutar

código en python pinchamos acá y listo

[Música]

vamos a hablar ahora un poco sobre las

implementaciones que existen en python

Entonces qué son las implementaciones

vamos a partir primero definiendo algo

básico vamos a hacer aquí un scroll

hacia abajo y vamos a hacer lo siguiente

lo primero Nosotros sabemos lo que son

los lenguajes de programación en este

caso nosotros tenemos un lenguaje de

programación que se llama python pero lo

que tú no sabes es que el lenguaje de

programación en verdad es un set de

reglas que debe cumplir el lenguaje para

poder ser considerado como tal ojo con

esto set de reglas vamos a expandir en

esto un poco más python finalmente es un

lenguaje de alto nivel esto quiere decir

que es un lenguaje que nosotros podemos

entender cuando leemos el código pero

Este lenguaje no es el lenguaje que

entienden las máquinas o en este caso tu

computador tu computador entiende Lo que

es un lenguaje de máquina y un lenguaje

de máquina derechamente son ceros y unos

o lenguaje binario Entonces qué es el

lenguaje de programación el lenguaje de

programación es un set de reglas que nos

permiten a nosotros poder escribir en un

lenguaje de alto nivel algo que nosotros

podamos entender Pero esto no quiere

decir que sea el lenguaje que finalmente

va a terminar interpretando máquina

vamos a eliminar todo esto Entonces como

nosotros podemos tomar código escrito en

python Y pasarlo finalmente a lenguaje

de máquina para eso existen las

implementaciones de python por supuesto

la implementaciones de un lenguaje de

programación es cuando desarrolladores

se juntan y finalmente terminan

escribiendo una aplicación o un programa

que toma el código que nosotros

escribimos en este caso en python y lo

transforma a un lenguaje de máquina el

problema con los lenguajes de máquina es

que cada lenguaje de máquina es distinto

y este va a depender del sistema

operativo y también del Hardware físico

del Hardware físico vendría siendo el

procesador la marca del procesador y el

modelo del procesador Qué quiere decir

esto que nosotros si no estuviésemos

utilizando un lenguaje de alto nivel

tendríamos que empezar a escribir código

para cada uno de estos procesadores con

sus sistemas operativos afortunadamente

existen implementaciones de python que

nos permiten a nosotros poder tomar el

código que nosotros escribimos en python

y transformarlo al lenguaje de máquina

Entonces qué implementa existen que

realizan exactamente esta traducción de

código ya sea de lenguaje de alto nivel

a lenguaje de máquina el que nosotros

descargamos se llama c python Y por qué

se llama cyton porque este se encuentra

escrito en C también existe otra

implementación que se llama paipay que

esta es una implementación de python

escrita en python También tenemos ya

también existe Iron python Iron python

se encuentra escrito en C sharp y Jason

se encuentra escrito en Java también

existe otra implementación que se llama

Brighton y bryson es un intérprete que

nos permite a nosotros poder ejecutar

código en python pero en el explorador

web esto quiere decir nosotros

escribimos código en python se lo

pasamos al explorador web y este es

capaz de interpretarlo ya que utiliza un

traductor de código donde va a tomar

este código en python y lo va a

transformar a código javascript y aquí

viene la pregunta por qué nosotros no

podemos utilizar solamente una porque no

podemos utilizar solamente ese python y

la razón es esta separación nos permite

utilizar código escrito en cyzone que se

encuentra acá Este nos permite utilizar

código escrito en Java También tenemos a

Iron python que nos permite a nosotros

utilizar código escrito en c sharp pero

si tú que te encuentras viendo este

curso no tienes la necesidad de utilizar

ya sea librerías escrita en Java o

librerías escritas en sharp

definitivamente deberías estar

utilizando ese python ahora cuál es la

ventaja de cyzone sobre las otras

implementaciones sepa iPhone es la

implementación oficial de python esto

quiere decir que todas las nuevas

funcionalidades de python van a llegar

primero a python Y luego el resto de las

implementaciones va a empezar a agregar

todas estas funcionalidades ahora cómo

se ejecuta nuestro código escrito en

python dentro de las máquinas ya sea en

los servidores o también dentro de

nuestro mismo computador supongamos El

ejemplo de Java en el caso de Java este

código Debería ser traducido

directamente a lenguaje de máquina sin

embargo los creadores de Java dijeron

que esto Sencillamente era una mala idea

porque significa que nosotros tendríamos

que escribir código dependiendo de la

plataforma en la cual nosotros nos

encontremos ejecutando el código Así es

que lo que hizo Java fue que nosotros en

vez de transformar el código

directamente al lenguaje de máquina

mediante el uso del compilador lo vamos

a transformar en bytecode Y luego qué es

lo que hacemos con nosotros se lo vamos

a pasar a la jbm la jdm es el nombre

corto de Java virtual Machine y

finalmente la llave virtual Machine va a

ser la encargada de transformar el

código transformado a bitecode a

lenguaje de máquina ahora Y por qué se

hace esto Esto se hace para que el

código que nosotros escribamos sea

siempre el mismo y no tenga que ir

cambiando dependiendo del sistema

operativo o el procesador que nosotros

estemos utilizando y el proceso vendría

siendo nosotros escribimos código

escrito en Java este pasa a través del

compilador el compilador lo transforma

bike code luego del by code pasa a la

llave virtual Machine o la jbm y esta se

encarga de transformar nuestro programa

en lenguaje de máquina existen muchos

lenguajes de programación que

implementaron exactamente esta misma

estrategia ya que simplifica el

desarrollo para los desarrolladores que

están utilizando por ejemplo Java Y en

este caso python no se queda atrás lo

que hace python es exactamente lo mismo

que Java así que nosotros en lugar de

tener ya va acá aquí nosotros tenemos

python python cuando utiliza el

compilador transforma el código a

bytecode y de bytecode este se pasa a en

lugar de la jdm se pasa a la pbm que

vendría siendo python virtual Machine

vamos a cambiar esto por python virtual

Machine y este finalmente es

transformado a lenguaje de máquina ahora

esto es importante no es necesario que

te memorices absolutamente todo esto que

yo te acabo de explicar pero sí lo que

importa es que tú aprendas la forma en

Cómo se ejecuta el código escrito en

python y también Cuáles son las

implementaciones que nosotros estamos

utilizando cuando estamos escribiendo

códigos keton python y por eso es

importante porque ahora tú ya sabes que

puedes escribir código en python y

ejecutarlo derechamente en el explorador

web o incluso utilizar librerías que

fueron escritas para otros lenguajes

como te decía Lo importante es que

entiendas más o menos cómo funciona y no

que te memorices esto y ahora sí ya que

vimos Cómo se ejecuta el código escrito

en python podemos pasar a nuestra

siguiente sección donde vamos a ver los

conceptos básicos del lenguaje

[Música]

en este vídeo yo les voy a enseñar Qué

son las variables y Cómo podemos

utilizarlas las variables son un

concepto básico que se utilizan en

absolutamente todos los lenguajes de

programación las variables no solo las

van a ver en python sino que también en

cualquier otro lenguaje de programación

que ustedes deseen aprender vamos a

definir una hora a eso sí antes de

continuar vamos a ordenarnos un poco y

vamos a crear una carpeta la carpeta se

va a llamar tipos y dentro de esta vamos

a crear un archivo que se va a llamar

variables punto p y para crear las

carpetas utilizan este icono y para

crear los archivos nuevamente vuelven a

ocupar este icono tienen que asegurarse

eso sí de que la carpeta se encuentra

seleccionada Al momento de crear el

archivo sino lo va a crear junto al

mismo nivel que format e intro pero sí

que eso llegas a pasar ustedes

Sencillamente lo que hacen es que

arrastrar el archivo y lo colocan encima

de la carpeta Y eso lo que hará será

mover el archivo recién creado dentro de

la carpeta ahora sí vamos a variables y

vamos a cerrar intro y formato vamos a

aprovechar de cambiar el nombre de este

archivo y para poder cambiar los nombres

Sencillamente le dan clic derecho y

pinchan aquí en remain y vamos a

anteponer 01 guión enter Y esto es para

que nuestras clases queden mejor

divididas ahora sí ya que nos

encontramos Dentro de este archivo de

variables vamos a cerrar el explorador y

vamos a definir nuestra primera variable

esta se va a llamar nombre guión bajo

curso presionamos espacio igual espacio

comillas dobles y aquí escribimos python

y vamos a colocar antes Ultimate python

Ahora aquí Nosotros acabamos de definir

una variable la cual se llama nombre

guión bajo curso fíjense en ese guión

bajo que yo acabo de colocar en este

caso este guión bajo se utiliza para que

nosotros podamos crear variables que

tengan más de una sola palabra dentro

del nombre de la variable en este caso

nosotros tenemos dos palabras tenemos

nombre y también tenemos curso esto para

poder indicar que estamos creando una

variable que se llama nombre curso ahora

nosotros no podemos llegar y crear una

variable con un espacio entre medio eso

es lo que va a hacer es que nos va a

arrojar un error en la sintaxis Así que

lo que vamos a hacer es eliminar ese

espacio que se encuentra en blanco y

vamos a colocar un guión bajo algo

también importante los nombres de las

variables no pueden comenzar con números

sino que éstas siempre tienen que

comenzar con una letra del abecedario

pero esta sí pueden contener números

después de las letras nosotros podríamos

crear una variable que sea n1 y esta

vendría siendo por ejemplo el número uno

pero esto lo vamos a dejar para más

adelante ahora qué es lo que son las

variables supongamos que nosotros

tenemos la memoria RAM y la memoria RAM

nosotros la vamos a representar como una

red de pescar o como un gato o Tic Tac

toe muy grande ahora cuando nosotros

creamos una variable que en este caso se

llama nombre de curso esto lo que está

haciendo por debajo python es que está

asignando un espacio en memoria

supongamos este que se encuentra acá

Este espacio que se encuentra acá se lo

está asignando al valor de Ultimate

python entonces después cuando nosotros

hagamos referencia a la variable de

nombre curso en verdad lo que nosotros

vamos a estar haciendo es hacer

referencia a este espacio en la memoria

RAM que Nosotros acabamos de asignar

finalmente cuando nosotros creamos una

variable estamos asignando un espacio de

la memoria RAM al valor que nosotros le

estamos asignando a esta variable Por

ende si es que nosotros ahora imprimimos

nuestra variable eso lo hacemos con

print y luego colocamos el nombre de la

variable fíjense cuando yo estoy

escribiendo el nombre de la variable BS

code me está sugiriendo con el nombre de

la variable que en este caso es nombre

curso Así que yo Sencillamente puedo

pinchar ahí o derechamente voy a borrar

un poco más aquí yo voy a mantener

presionado la tecla de control y

presiono espacio y sencillamente puedo

presionar enter y me va a terminar de

completar el nombre de la variable esto

nos va a servir para absolutamente todo

en un futuro Así es que es importante

recordarlo en fin vamos a guardar ahora

y lo que vamos a hacer es que vamos a

pinchar aquí en este botón para poder

ejecutar nuestro código y vamos a ver

qué es lo que éste nos devuelve y aquí

nosotros vemos que nos está arrojando el

String de Ultimate python Entonces como

les estaba mencionando antes finalmente

lo que hace el nombre de la variable es

asignar un espacio dentro de la memoria

física del computador o del servidor en

este caso del computador con el cual tú

estás escribiendo Este programa para

poder eventualmente dentro de nuestro

código en un futuro Acceder al valor que

nosotros estamos entregando a esa

variable ahora de qué maneras También

nosotros podemos crear las variables

como antes les había mencionado nosotros

no podemos iniciarla con un número por

ejemplo en este caso yo lo voy a indicar

que uno es igual a dos no podemos hacer

eso tampoco podemos indicar número

seguido de una letra tampoco podemos

hacer eso incluso con que esto sea muy

largo tampoco se puede hacer lo que sí

podemos hacer es indicarle un nombre por

ejemplo yo lo que voy a hacer Es que voy

a crear nombre este va a ser nombre uno

y le voy a indicar que esto se llama

Ultimate python voy a aprovechar de

copiar el valor que tiene esta variable

asignado también le podemos asignar todo

con absolutamente mayúsculas nombre

curso también lo podemos hacer con

mayúsculas y minúsculas intercaladas

Pero por favor no hagan esto traten de

mantener su código lo más legible

posible en este caso yo le sugeriría

utilizar la primera alternativa y otra

forma en la cual nosotros también

podemos nombrar nuestras variables es

colocando la primera letra en mayúscula

en este caso nosotros tenemos nombre

curso y Esto va a ser igual a Ultimate

python en este caso Yo estoy utilizando

la palabra de nombre curso excepto acá

que estoy utilizando nombre para poder

asignarle el valor de la frase o el

texto Ultimate python Pero todas estas

variables que nosotros hemos creado son

todas absolutamente distintas Yo podría

perfectamente empezar a cambiar el valor

de esto en vez de decir Ultimate python

voy a decir hola la siguiente la voy a

cambiar por mundo la siguiente por

Chanchito y continuamos con feliz vamos

a guardar y vamos a aprovechar de

colocar más valores Dentro de este print

si nosotros queremos imprimir más cosas

dentro de esta función de print lo que

tenemos que hacer es Sencillamente

agregarlos separados por coma Así que yo

acá coloco una coma aquí coloco nombre

uno nombre curso voy a pinchar acá para

rellenarlo y voy a dejarlo hasta ahí

ahora voy a guardar y voy a volver a

ejecutar mi archivo de variables punto

py y aquí nosotros vemos como imprimido

Ultimate python Hola y mundo que vendría

siendo exactamente estas tres variables

que yo estoy imprimiendo con la función

nativa de print además de crear

variables a las cuales Nosotros le

podemos asignar texto Nosotros le

podemos también asignar otras cosas como

por ejemplo vamos a crear una variable

de alumnos y esta va a tener el valor de

5000 después de esto nosotros vamos a

crear otra variable que va a tener el

valor de puntaje y hasta le vamos a

indicar que tiene el valor de

9.9 el primer valor el de 5000 que se

encuentra asignado a la variable de

alumnos se conoce como integer o también

en español como número entero y número

entero significa que no tiene decimales

y el siguiente valor el de 9.9 se conoce

como un float y cuando un número es un

Flow significa que este tiene un decimal

como en este caso lo tenemos acá que es

el decimal de coma nueve Vamos a

continuar con lo siguiente vamos a

preguntar por si es que este curso se

encuentra publicado o no y vamos a

indicar que este curso sí se encuentra

publicado en este caso yo estoy

asignando el valor de true y algo muy

importante esta en este caso tiene la

primera letra La de T de true la tiene

en mayúscula si nosotros quisiéramos

asignársela pero con la t minúscula esto

no nos va a funcionar de la misma manera

que si nosotros escribimos todo con

mayúscula no para que funcione el valor

booleano o boolean tenemos que

escribirlo con la t mayúscula y el resto

todo con minúscula los dos valores que

puede tener publicado pueden ser true y

también puede ser false y en este caso

true y false vendrían siendo como sí o

no al igual que en el español de esta

manera nosotros podemos hacer cosas como

por ejemplo asignarle más privilegios a

un usuario o preguntar si es que un

curso se encuentra publicado o no para

de esta manera poder

mostrárselo a un usuario Finalmente y de

esta manera Nosotros hemos visto los

valores básicos que puede tener una

variable y también en qué consiste una

variable pasemos a nuestro siguiente

video

[Música]

en este vídeo les voy a enseñar a cerca

de los strings en python Así es que nos

venimos aquí a nuestro editor y para

mantenernos ordenados vamos a crear un

nuevo archivo el cual se va a llamar

strings.b y presionamos enter vamos a

cerrar nuestro archivo de variables y

ahora comenzamos cuando nosotros

queremos definir un String o una

variable que contenga el valor de un

String nosotros tenemos que colocar el

nombre de la variable que en este caso

va a ser el nombre del curso y el nombre

del curso nosotros vamos a indicarlo con

comillas dobles o también podemos

utilizar comillas simples en este caso

yo voy a utilizar comillas dobles y aquí

yo tengo que colocar el nombre del curso

que es Ultimate python ahora si nosotros

quisiéramos crear un String o un texto

que sea mucho más grande que el nombre

del curso Como por ejemplo podría ser la

descripción del curso en ese caso

nosotros lo podemos hacer utilizando las

triple doble comillas Así es Escuchaste

bien las triple doble comillas vamos a

anotar acá descripción y un bajo curso y

va a ser igual a comillas dobles lo

vuelvo a presionar y vuelvo a

presionarlo una vez más y aquí lo que ha

hecho BS code ha sido autocompletar con

seis comillas dobles y dejo el cursor

justamente acá al medio ahora lo que

vamos a hacer es presionar enter para

separar esto en varias líneas presiono

nuevamente enter y aquí yo puedo empezar

a escribir el texto que quiero que

contenga la descripción del curso aquí

yo voy a notar Ultimate python este

curso contempla todos los detalles que

necesitas aprender para encontrar un

trabajo como programador y vamos a

guardar ahora si es que nosotros

imprimimos estas dos variables vamos a

hacerlo con print Y acá adentro

utilizando nuevamente Abre paréntesis

vamos a escribir acá nombre curso y

después de esto descripción curso y por

supuesto que estas variables nosotros

las tenemos que colocar separadas por

una coma vamos a guardar nuevamente con

nuestro Tajo de teclado y presionamos

aquí para ejecutar nuestro código y aquí

nosotros vemos que nos está mostrando

Ultimate python que vendría siendo la

primera variable la de nombre de curso y

después está imprimiendo la descripción

del vamos a cerrar esto y vamos a

aprovechar también de cerrar nuestro

explorador ahora vamos a ver una función

que viene incluida dentro del lenguaje

de programación python la cual es la

función de lent y la función de len a

nosotros nos permite poder obtener la

longitud que tiene un String en

particular para nosotros poder llamar a

esta función tenemos que hacerlo

Exactamente igual que con print y que

con cualquier otra función que nosotros

llamemos en python eso nosotros lo

hacemos con un Abre paréntesis redondo y

dentro de esto tenemos que indicarle

Cuál es el String del cual nosotros

queremos obtener su longitud y en este

caso es nombre guión bajo curso y ahora

guardamos ahora por supuesto lo que yo

quiero hacer es poder imprimir el valor

que me va a entregar la función del end

cuando yo le paso el argumento de nombre

curso Ahora yo acabo de decir algo

extraño argumento Qué es argumento bueno

los argumentos son los valores que

nosotros le pasamos a una función en

este caso nombre curso es el argumento

de nuestra función led para poder

imprimir el valor justamente antes del

end escribir print y vamos a seleccionar

absolutamente todo y aquí nosotros vamos

a escribir el Abre paréntesis redondo

cuando nosotros sacamos eso nos vamos a

dar cuenta que vs code por arte de magia

colocó el paréntesis redondo a la

izquierda y también lo colocó al final

justamente acá en la derecha ahora

nosotros podemos guardar vamos a

ejecutar nuestro código y aquí nosotros

vemos que tenemos el valor de 15 que

vendría siendo la cantidad de caracteres

que tiene Ultimate python vamos a cerrar

acá y vamos a continuar ahora sí que

nosotros quisiéramos acceder a algún

carácter en particular nosotros lo

podemos hacer utilizando la notación de

paréntesis cuadrados Así es que vamos a

colocar el nombre de nuestra variable

que en este caso es nombre curso y aquí

le vamos a pasar un paréntesis cuadrado

y luego de eso Nosotros le tenemos que

pasar el índice del carácter al cual

nosotros queremos acceder supongamos que

nosotros queremos Acceder al índice u

Porque queremos obtener la primera letra

porque podría ser que nosotros tenemos

alguna cadena de texto donde en algunas

ocasiones el primer carácter sea

minúscula y lo queremos transformar en

mayúscula entonces para eso nosotros

vamos a querer acceder a ese carácter en

particular como nosotros podemos hacer

eso bueno lo más probable es que tú

pienses que se hace con el uno pero los

strings en python se encuentran con base

0 para los índices esto quiere decir que

el primer carácter es índice cero el

segundo carácter en este caso la l es

índice 1 la t es índice 2 y así

sucesivamente hasta llegar al último

carácter que en este caso vendría siendo

la n de python entonces si yo quisiera

Acceder al carácter u yo lo que tengo

que hacer acá es pasarle el valor de

cero vamos a guardar y ejecutamos

nuestro código y aquí nosotros vemos

cómo tenemos el número 15 que vendría

siendo el print anterior y aquí estamos

accediendo a la u del curso Ultimate

python vamos a cerrar acá y ahora lo que

vamos a hacer es cortar el String del

nombre del curso en este caso lo que

queremos hacer es obtener la palabra de

Ultimate python para eso nosotros vamos

a colocar nuevamente un print vamos a

pasar nuevamente el nombre de la

variable que es este curso utilizamos

nuevamente nuestros paréntesis de

corchete y aquí nosotros vamos a ver una

anotación bastante similar vamos Eso sí

a deslizarnos hacia abajo un poco y

Dentro de este paréntesis de corchete

vamos a hacer lo siguiente vamos a

colocar unos dos puntos ahora justamente

antes de estos dos puntos y después de

estos dos puntos nosotros vamos a tener

que pasarles valores en este caso en la

parte de la izquierda Nosotros le

tenemos que indicar la base el índice

desde donde queremos empezar a recortar

caracteres yo le voy a indicar que es

del índice cero O sea desde la u y

también le tengo que indicar Cuántos

caracteres Yo quiero recortar en este

caso la palabra de Ultimate tiene 8

caracteres Así que yo le voy a indicar

acá un 8 voy a guardar nuevamente con

atajo de teclado y voy a ejecutar

nuevamente Mi código y aquí nosotros

vemos cómo tenemos ahora la palabra de

Ultimate completita vamos a regresar a

nuestro editor y ahora vamos a ver otro

ejemplo vamos a colocar nuevamente print

nuevamente el nombre de nuestra variable

utilizamos nuevamente nuestra convención

de paréntes de corchete y ahora vamos a

hacer lo siguiente vamos a utilizar

nuevamente los dos puntos pero ahora

Solamente le vamos a colocar el valor

que se encuentra en la izquierda qué

crees que va a pasar cuando nosotros le

pasemos solamente el valor de la

izquierda cuando nosotros le pasemos

solamente el valor de la izquierda como

por ejemplo 9 lo que vamos a hacer es

tomar el índice 9 vamos a ver dónde

comienza ese índice que debiese ser en

la letra p de python y como nosotros no

le pasamos absolutamente nada aquí a la

derecha lo que va a hacer python es

decir Okay como tú no me pasaste

absolutamente nada yo voy a rellenar ese

valor con lo que yo considere que debe

ser y en este caso cuando tú no le pasas

absolutamente nada lo que hará será

llegar hasta absolutamente el final del

String o sea hasta la letra n del curso

de Ultimate python Entonces esto debiese

tomar desde la p de python hasta el

final entonces va a tomar el String

completo de python vamos a ejecutar

nuestro código Por supuesto que Antes

tenemos que salvar para verificar que

esto está funcionando bien y aquí

nosotros vemos cómo tenemos que vendría

siendo la línea 10 y la nueva línea que

nosotros escribimos es hasta las 11 y

aquí nosotros podemos ver cómo tenemos

el String de python Vamos a continuar

con nuestro último ejemplo para eso

vamos a duplicar esta línea y lo que

vamos a hacer es sacar el valor que se

encuentra a la izquierda y luego de eso

le vamos a colocar el valor a la derecha

en este caso va a ocurrir algo entre

comillas similar lo que pasó antes

cuando nosotros antes le pasamos el

valor de la izquierda y no le pasamos el

valor de la derecha le indicamos desde

que índice queremos comenzar a recortar

y vamos a llegar hasta el final cuando

nosotros no le pasamos el valor de la

izquierda pero sí le pasamos el valor de

la derecha le estamos indicando Ok

python tú tienes que asumir el valor por

defecto y el valor por defecto cuando

nosotros no le pasamos el valor de la

izquierda es 0 entonces Esto va a ser

exactamente lo mismo que acá en la línea

10 vamos a guardar y vamos a ejecutar

esto nuevamente y aquí nosotros podemos

ver cómo tenemos nuevamente la palabra

de Ultimate ahora vamos a ver el último

ejemplo Y esto es cuando nosotros no le

pasamos ni el valor de la izquierda el

valor de la derecha o sea que python va

a asumir el valor por defecto en la

izquierda y en la derecha esto quiere

decir el índice de la izquierda va a ser

cero y el valor de la derecha va a ser

la longitud completa de nuestro String

Ahora sí vamos a ejecutar nuestro código

y podemos ver que la última notación nos

ha generado una copia del String en

cuestión que en este caso el String en

cuestión es el nombre del curso y esto

es todo lo que nosotros tenemos que ver

con respecto a los strings vamos con el

siguiente vídeo

[Música]

en este vídeo les voy a enseñar a

formatear los strings lo primero que

haremos será ordenar nuestro código

venimos para acá vamos a crear un nuevo

archivo que se va a llamar 03 guión

format guión strings.pe y vamos a cerrar

nuestro archivo anterior cerramos acá y

acá vamos a suponer que tenemos nuestro

nombre Nicolás y nuestro apellido el mío

es shurman y supongamos ahora que

queremos crear una variable que se va a

llamar nombre completo y esta va a tener

por supuesto el nombre y el apellido

aquí nosotros deberíamos colocar nombre

y Aquí vamos a ver un nuevo operador el

de concatenación el operador de

concatenaciones exactamente el mismo que

el símbolo o el operador para la suma

que en este caso es el símbolo de más

aquí nosotros colocamos un espacio en

blanco o sea un String con un espacio

entre medio y luego volvemos a colocar

el símbolo de concatenación o el símbolo

para la suma y acá colocamos apellido

ahora si es que nosotros imprimimos esto

imprimimos nuestro nombre completo

guardamos y nos venimos acá para

ejecutar nuestro código vamos a ver

quién nos está mostrando nuestro nombre

completo que en este caso es Nicolás

Shure esta quizás no es la manera más

elegante de nosotros poder escribir la

concatenación o la forma de poder

formatear este código Así que lo que

nosotros vamos a hacer ahora es que

vamos a cambiar esto por el operador de

formateo de strings aquí nosotros

tenemos que colocar la f también

podríamos colocar la f mayúscula pero

nosotros lo vamos a hacer con f

minúscula aquí colocamos comillas dobles

y dentro de estas comillas dobles

nosotros vamos a seguir escribiendo Como

si este fuese un String normal pero

nosotros lo que haremos acá será colocar

los paréntesis de llaves y dentro del

paréntesis de llaves nosotros vamos a

colocar el nombre de la variable que

nosotros queremos imprimir en este caso

queremos imprimir el nombre seguido de

eso espacio y el apellido ahora nosotros

vamos a guardar y nos vamos a venir aquí

a ejecutar nuevamente nuestro código y

vemos que todavía tenemos el nombre de

la variable que es Nicolás no el nombre

de la variable el valor de la variable

Nicolás schumann vamos a cerrar acá algo

que tienen que saber que es sumamente

importante y es que dentro de estos

paréntesis de llaves entre estos que se

encuentran acá siempre y cuando los

coloquemos dentro de un opera de

formateo de String nosotros podemos

escribir lo que queramos la expresión

que nosotros queramos por ejemplo

nosotros podríamos colocar acá que

queremos Acceder al primer carácter del

nombre Y en lugar del apellido nosotros

queremos colocar dos más cinco vamos a

guardar y vamos a imprimir esto para ver

qué es lo que nos muestra y aquí

nosotros vemos que nos está mostrando el

primer carácter y el número 7 Así que

eso es algo a considerar nosotros

podemos utilizar este operador no

solamente para poder darle un mejor

formato a los strings sino que también

le podemos colocar acá las expresiones

que nosotros queramos Hola mundo y

bienvenidos a este corto mensaje quiero

recordarte que este curso que estás

viendo en YouTube solamente contempla

las primeras cinco horas de mi curso

completo Ultimate python donde vemos

temas mucho más avanzados además de lo

básico lleno de ejercicios con sus

soluciones además que se te entrega un

certificado de finalización para que

puedas agregarlo a tu currículum Así que

si estás interesado de manera seria en

aprender python para así conseguir un

nuevo trabajo o mejorar tu salario te

dejo el link en la descripción de este

vídeo y junto a este link también te voy

a dejar un cupón de para que puedas

inscribirte en mi Academia y así puedas

acceder a todos mis cursos Pero si no

quieres hacerlo también está bien ahora

continuamos con el curso

en este video vamos a ver muchas

funciones útiles que nosotros podemos

utilizar cuando estamos trabajando con

strings lo primero que tenemos que hacer

es ordenar nuestro código vamos a crear

un nuevo archivo el cual se va a llamar

04 guión métodos guión strings.py Ahora

sí vamos a cerrar nuestro archivo

anterior y vamos a cerrar nuestro

explorador nosotros ahora vamos a crear

una variable que se va a llamar a animal

y esta Va a ser igual a un String el

cual va a contener el valor de Chanchito

feliz vamos a ver la primera función que

tiene nuestro String vamos a escribir

print animal punto Upper Ahora yo les

había dicho que estas son funciones sin

embargo ese no es el nombre técnico

correcto el nombre correcto vendría

siendo métodos y que es un método Bueno

un método es una función que se

encuentra dentro de un objeto Ya lo

vamos a ver más adelante cuando veamos

programación orientada a objetos por

ahora vamos a decirle o métodos o

funciones a esto que aparece acá y más

adelante vamos a utilizar la

terminología correcta esto es más que

nada solamente para que sea más fácil es

para ustedes Entonces ahora lo que vamos

a hacer es que vamos a guardar nuestro

archivo y vamos a ejecutarlo aquí

nosotros vemos ahora que tenemos

Chanchito feliz Entonces qué es lo que

está haciendo esto Apple lo que está

haciendo es que está tomando el String

que se encuentra dentro de la variable

de animal el cual vendría siendo

Chanchito feliz y lo está transformando

todo a letras mayúsculas vamos ahora a

ver el siguiente Método en lugar de

utilizar Upper vamos a utilizar lower

vamos a guardar y vamos a volver a

ejecutar nuestro código aquí nosotros

vemos ahora que agarró absolutamente

todas las letras y las pasó todas a

minúscula sin embargo nosotros no

teníamos ninguna letra en minúscula Así

es que lo que vamos a hacer es que vamos

a colocar el ch de Chanchito en

mayúscula Ahora sí lo vamos a volver a

ejecutar y ahora nosotros vemos que toma

absolutamente todas sus letras y las

pasó a minúscula vamos a ver ahora otro

método u otra función sumamente útil que

tienen los strings vamos a volver a

llamar nuevamente animal y vamos a

utilizar capitalice abrimos y cerramos

paréntesis y guardamos vamos a volver a

ejecutar esto para ver qué es lo que

está haciendo y es lo que está haciendo

es que está tomando el primer carácter

de nuestro String y lo está

transformando en mayúscula y si se fijan

también está tomando el ch que se

encuentra justamente después y lo está

pasando todo a minúscula entonces

capital es lo que hace es que toma la

primera letra la pasa mayúscula y el

resto lo deja absolutamente todo en

minúscula vamos a ver otra que hace algo

similar vamos a volver a llamar a print

nuevamente ya vamos a animal y aquí le

vamos a pasar el método de title

Entonces nosotros tenemos animal y luego

ya vamos a title vamos a guardar y vamos

a volver a ejecutar nuestro archivo y

aquí nosotros vemos lo siguiente lo que

está haciendo title A diferencia de

capital eyes es que está tomando la

primera letra de cada palabra que se

encuentre dentro de nuestro Stream en

este caso Está tomando la sede Chanchito

y está tomando la f de feliz y las está

pasando a mayúsculas y el resto

absolutamente el resto de todas las

otras letras en este caso vendría siendo

anchito con h al comienzo y elise lo

está pasando todo para minúscula de esta

manera nosotros podemos utilizar este

método para poder darle formato a los

strings para que éstas parezcan bueno

como bien Dice el método un título ahora

vamos a cerrar esto y vamos a ver otro

método que también es sumamente útil

vamos a llamar nuevamente a print le

pasamos animal pero aquí vamos a pasarle

strip me equivoqué es strip ahora qué es

lo que hace strip para poder verlo lo

que tenemos que hacer es agregarle un

par de espacios aquí al comienzo y aquí

al final Ahora sí vamos a guardar trip

lo que va a hacer es remover

absolutamente todos los espacios en

blanco que se encuentren a la izquierda

y a la derecha de nuestro String si

nosotros ejecutamos el código vamos a

ver ahora que nuestro String no tiene

absolutamente nada al comienzo tenemos

nuestro String de Chanchito con el ch

mayúsculas tenemos Félix y lo único que

hizo fue eliminar los espacios que se

encontraban a la izquierda y a la

derecha y fíjense también en qué fue lo

que ocurrió con el String de capital Ice

en este caso tomó absolutamente todos

los caracteres y los pasó a minúscula e

tomar el primer carácter que en este

caso era un espacio y lo trató de pasar

a mayúscula pero el espacio no tiene un

carácter que pase a mayúscula y si lo

tuviera da lo mismo igual no lo vamos a

ver en este caso vendría siendo otro

espacio Así es que si nosotros vamos a

hacer uso de la función o el método de

capital Ice lo que nosotros vamos a

tener que hacer necesariamente antes va

a ser realizar un strip de nuestro

String ahora vamos a cerrar esto y vamos

a hacer exactamente eso mismo que yo Les

acabo de comentar vamos a venirnos acá

donde estamos Llamando a animal punto

capital Ice y lo que vamos a hacer es

que justamente después de este punto

vamos a escribir lo siguiente Street

abre y cierra paréntesis punto profesor

se puede hacer esto vamos a ver si es

que lo podemos hacer ya que guarde vamos

a pinchar aquí en nuestro botón para

poder ejecutar nuestro código pinchamos

y ahora vemos que nuestra función de

capital Ice está funcionando

correctamente nuevamente entonces

podemos concatenar los métodos o no

concatenarlos sino que encadenarlos

vamos a llamar primero al método de

strip Y luego como esto nos va a

devolver a nosotros un String finalmente

este animal Street vendría siendo el

mismo String pero quitándole los

espacios en blanco vamos a poder llamar

después a punto capitalice porque

finalmente estamos haciendo un punto

capital al String que nos devolvió a

animal punto strip Así es que esto es

código python completamente válido

nosotros podemos llamar una variable en

este caso o un String y empezar a llamar

a los métodos del String una y otra vez

encadenándolos Además del método de

strip nosotros tenemos el Script que

vendría siendo para poder sacar los

espacios de la izquierda del String y

también nosotros tenemos el método de r

strip que lo que hace es que saca los

espacios en blanco que se encuentran a

la derecha de nuestro String Así es que

vamos a dejarlo como r strip y voy a

hacer un par de copias le voy a agregar

el Script y también le voy a agregar r

strip vamos a ejecutarlo para ver qué

está haciendo lo que yo Les acabo de

decir y aquí nosotros tenemos como quito

los espacios de la izquierda y acá quito

los espacios de la derecha bueno no lo

podemos ver pero créanme quitó los

espacios de la derecha vamos a cerrar

esto y vamos a ver ahora otro método

también bastante útil vamos a llamar

nuevamente a print y aquí lo que vamos a

hacer es que vamos a escribir animal

punto find ahora este método de find lo

que va a hacer es que va a buscar una

cadena de caracteres que nosotros le

indiquemos Como por ejemplo podría ser c

h y esto lo que hará será devolvernos el

índice no recuerdo muy bien Cuál es el

índice pero supongamos que es 5 Entonces

en ese caso me debería devolver el valor

de 5 esto es un supuesto No sé si cuatro

cinco seis pero ya lo vamos a ver ahora

lo que tenemos que hacer es colocar la

cadena de caracteres que estamos

buscando en este caso vendría siendo c h

Así es que lo que vamos a hacer Es que

aquí entre comillas dobles Tenemos que

pasar un String que vamos a estar

buscando Dentro de este otro String Así

es que aquí nosotros vamos a colocar ch

y ahora vamos a ejecutar el código para

ver qué es lo que nos devuelve Ah y nos

devolvió 6 pero que ahora 5 era 6 Yo se

los dije Ahora sí vamos a cerrar esto y

vamos a ver qué es lo que ocurre si es

que nosotros Tratamos de buscar una

cadena de caracteres que no se encuentra

dentro del String veamos qué es lo que

ocurre vamos a colocar un c en minúscula

no sé una la C mayúscula y ahora sí

vamos a ejecutar nuevamente nuestro

código y vamos a ver que nos ha devuelto

el número de menos uno menos uno

significa no lo encontré Entonces si es

que nosotros obtenemos un número

positivo significa que encontró el

índice del String que estábamos buscando

pero si es que nos devuelve menos uno

significa que esa Cadena en particular

que nosotros estábamos buscando no

existe dentro de ese String Ahora sí

vamos a cerrar esto y vamos a continuar

con el siguiente vamos a escribir

nuevamente print y vamos a escribir

animal punto replays y aquí nosotros

tenemos que indicarle Cuáles son los

caracteres que nosotros queremos

reemplazar Por ejemplo yo quiero

reemplazar nsh y lo voy a reemplazar por

una jd Ahora sí vamos a guardar y vamos

a ejecutar nuevamente el código y aquí

nosotros vemos que no nos funcionó

porque no nos funcionó porque coloque NC

H no con las mayúsculas Ahora sí en el

minúscula ch en mayúscula guardamos y

volvemos a ejecutar y ahora vemos que

nos ha cambiado Chanchito feliz por

chajito feliz ahora No tengo idea pero

no importa vamos a continuar y ahora

sabemos que en el caso de que no

encuentra esta cadena de caracteres no

va a ser absolutamente nada pero si es

que la encuentra la va a reemplazar por

el carácter que nosotros le pasemos a la

derecha y en este caso este método de

replace tiene que recibir necesariamente

dos argumentos el primero vendría siendo

la cadena de caracteres que vamos a

estar buscando tenemos que colocar una

coma cada vez que queremos pasar más de

un argumento tenemos que separarlos por

coma y después de eso nosotros lo que

hacemos Es que le pasamos el valor que

va a reemplazar ahora vamos a ver los

últimos dos métodos que son bastante

útiles para los strings que en este caso

es el siguiente vamos a escribir n de

nuevo ch con mayúscula como un String y

luego vamos a escribir lo siguiente

espacio in espacio animal y ahora lo que

hacemos Es guardar vamos a ejecutarlo y

vamos a ver que este nos devuelve true

Entonces cuál es la diferencia de esta

funcionalidad con respecto a find porque

find también me va a ir a buscar una

cadena de caracteres en este caso

vendría siendo ch y la diferencia es la

siguiente find lo que va a hacer es que

te devuelve el índice de donde se

encuentra esta cadena de caracteres en

este caso ch y espacio el nombre de la

variable lo que va a hacer es que te va

a devolver un Boom en el fondo te va a

decir si es que se encuentra o si es que

no se encuentra ambas funcionalidades

tienen un uso en particular este es para

sacar el índice y este es solamente si

tú quieres saber si es que un carácter o

una cadena de caracteres se encuentra

dentro de una variable ahora estas

mismas funcionalidad nosotros la podemos

utilizar de la siguiente manera nosotros

en lugar de preguntar si es que estas se

encuentra podemos preguntar si es que

esta no se encuentra utilizando el

operador not Entonces cómo funciona

cadena de caracteres que estamos

buscando not después de eso escribimos

in y seguido de eso escribimos el nombre

de la variable En otras palabras sería

como escribir algo parecido a lo

anterior pero lo estamos negando Aunque

no es exactamente lo mismo el primero lo

que está haciendo es que busca si la

cadena de se encuentra dentro del String

y el segundo busca si es que esta cadena

de caracteres no se encuentra dentro del

String ahora guardamos vamos a

ejecutarlo y aquí nosotros vemos que nos

ha devuelto falso Por ende los últimos

dos métodos lo que harán será

devolvernos un boolean esto nos va a

servir cuando nosotros necesitemos un

tipo de respuesta como sí o no o en este

caso verdadero o falso

[Música]

en este vídeo Te voy a enseñar un par de

secuencias de escape que existen en

python para eso nos vamos a venir acá

nuevamente a nuestro explorador vamos a

crear un nuevo archivo el cual se va a

llamar 05 guión secuencias guión escape

punto p y vamos a cerrar nuestro archivo

anterior cerramos nuestro explorador y

ahora sí vamos a escribir lo siguiente

vamos a crear una nueva variable que se

va a llamar curso y esta se va a llamar

Ultimate python por supuesto tenemos que

imprimir esto supongamos ahora que por

alguna razón nosotros queremos colocar

una comilla doble justamente acá donde

está justamente antes de python y

queremos colocarlo dos veces queremos

colocar uno antes de python y otro

después de python si es que nosotros

hacemos eso el intérprete de python va a

pensar que estas comillas dobles son

para cerrar el String anterior el cual

vendría siendo el de el comienzo de

Ultimate y las comillas que nosotros

tenemos acá van a pensar que son las

comillas de apertura para crear un nuevo

String y que después se va a terminar

cerrando con las últimas comillas dobles

esto por supuesto que nos arroja un

error como podemos ver acá nos está

indicando es un error subrayado en rojo

Entonces cómo nosotros podríamos Mostrar

estas comillas dobles tenemos dos

alternativas la primera es que nosotros

cambiemos la primera comilla doble por

una comilla simple y la última que

también la cambiemos por una comilla

simple ahora si es que nosotros

guardamos y ejecutamos nuestro código

vamos a ver que tenemos acá nuestras

comillas dobles de Ultimate python acá

ahora qué es lo que pasa si por alguna

razón no podemos acceder a eso porque

supongamos que también tenemos comillas

simples acá Bueno en ese caso estaríamos

en un problema vamos a suponer este

mismo caso donde tenemos nuevamente las

comillas dobles y queremos que

necesariamente aparezcan estas comillas

dobles bueno para eso nosotros podemos

hacer uso del baxlash el backlash nos va

a servir para nosotros poder indicarle a

python Oye justamente lo que se

encuentra a la derecha del Backstage no

lo tomes como un carácter propio del

lenguaje sino que utilízalo como algo

que tú vas a mostrar dentro de un String

Entonces si nosotros quisiéramos Mostrar

estas comillas dobles y sin tener

después el problema de que estamos

trabajando dentro de un String lo que

nosotros tenemos que hacer es colocar el

Backstage antes de las comillas dobles

que nosotros queremos Mostrar Por

supuesto que acá nosotros tenemos dos

comillas dobles Entonces tenemos que

colocar nuestro pack Slash También acá

ahora si es que nosotros guardamos e

intentamos ejecutar nuestro código vamos

a ver que nuevamente estamos viendo las

comillas dobles vamos a cerrar esto

ahora lo que vamos a hacer es que vamos

a crear un comentario justamente aquí en

nuestra línea 1 luego de haber

presionado un par de veces enter para

bajar el contenido y aquí para nosotros

poder crear un comentario tenemos que

utilizar el símbolo de numeral o también

el hashtag como se dice en las redes

sociales Pero en fin ahora sí ya que

nosotros tenemos creado este comentario

acá nosotros podemos escribir todo lo

que nosotros queramos sin miedo a que

esto se ejecute todo lo que nosotros

escribamos después del símbolo de

numeral va a ser completamente ignorado

Entonces como funcionaría Esto si es que

nosotros después llegamos y ejecutamos

este código vamos a ver que no tenemos

absolutamente ningún problema seguimos

mostrando dentro de nuestra terminal

Ultimate python con las dobles ahora

nosotros ya sabemos que los comentarios

que se escriben después del símbolo de

numeral estos van a ser ignorados por

python ahora ya que nosotros vimos esta

secuencia de escape vamos a ver otras

secuencias de escape que nosotros

también tenemos tenemos nuevamente el

backlash hacia adelante las comillas

dobles como habíamos visto antes voy a

duplicar esta línea Tenemos también el

baxlash con comillas simples voy a

duplicar esto tenemos el baxlash

nuevamente Qué significa esto Si

nosotros queremos Mostrar un Backstage

dentro de nuestro código tenemos que

necesariamente colocar dos backlash

Entonces ahora sí que nosotros

ejecutamos esto vamos a ver ahora cómo

estamos mostrando el backlash dentro de

nuestro String vamos a cerrar esto y

vamos a ver otra secuencia de escape que

es la de Backstage n ahora qué es lo que

hace Backstage n lo que hará será tomar

el String que viene o lo que viene

después del Backstage n y lo va a pasar

a una nueva línea vamos a ver cómo

funcionaría esto vamos a colocar un

Backstage justamente antes de python y

vamos a ejecutar esto aquí nosotros ya

vemos cómo tenemos Ultimate aquí debiese

existir un pequeño espacio en blanco y

después de eso nosotros tenemos nuestro

Backstage n y lo que hizo nuestro

Backstage n fue tomar nuestro String el

que continúa de python y lo pasó a la

línea siguiente de esta manera Nosotros

hemos aprendido a utilizar las

secuencias de escape y como nosotros

podemos introducir caracteres que

podrían llegar a ser un poco complicados

cuando estamos escribiendo código los

podemos meter Igual dentro de los

strings que en este caso son comidas

dobles comillas simples baxlash y una

nueva línea

[Música]

en este vídeo les voy a enseñar a

trabajar con números dentro de python

para eso nos vamos a venir nuevamente

acá al explorador y vamos a crear un

nuevo archivo que se va a llamar 06

guión números punto p y vamos a cerrar

nuestro archivo anterior y ahora sí

comenzamos nosotros lo que sabemos hasta

ahora para poder trabajar con números es

que estos pueden ser de dos tipos

nosotros tenemos un número por ejemplo

yo lo voy a decir que se llama número

este va a ser igual a 2 y este en este

caso es un entero si nosotros colocamos

los comentarios con el numeral

justamente después del código como

nosotros lo estamos haciendo acá lo que

va a ocurrir es que esta sección se va a

ejecutar pero todo lo que se encuentra a

la derecha va a ser ignorado este

vendría siendo un número entero ahora

Nosotros también podríamos tener un

número decimal que en este caso un

decimal se hace con la notación de punto

en este caso tenemos 1.2 y esto se

conoce como float y de hecho el de

arriba el número entero en verdad el

nombre técnico es integer ahora también

nosotros tenemos números imaginarios

entonces voy a colocarle imaginario y

Esto va a ser igual a vamos a colocar un

comentario y vamos a decir que va a ser

Dos más Dos y por si no lo sabías la

letra i cuando nosotros estamos

trabajando en matemáticas es la raíz

cuadrada de -1 y porque es la raíz

cuadrada de -1 porque no exista

absolutamente ningún número que

multiplicado por sí mismo nos dé menos

uno Esta es la razón por la cual se le

dice que este número es

imaginario O sea que no existe y este se

utiliza para múltiples operaciones

Matemáticas pero para el transcurso de

este curso la verdad es que no vas a

necesitar utilizar la raíz cuadrada de

-1 o el número imaginario pero solamente

por si quería saberlo en este caso en

python se escribiría esta misma fórmula

que nosotros tenemos acá a la derecha se

escribiría de la siguiente manera 2 + 2

J en este caso el J es el número

imaginario o en este caso nuevamente la

raíz cuadrada de menos 1 ahora Esto es

lo que nosotros hasta ahora de los

números agregando por supuesto los

números imaginarios Vamos a continuar

ahora viendo las operaciones que

nosotros podemos realizar con los

números vamos a cerrar acá nuevamente

guardamos y Aquí vamos a escribir print

y vamos a sumar uno más tres por ejemplo

vamos a duplicar esta línea también lo

que podemos hacer es restar la primera

operación es por supuesto que suma

después viene resta esa tuya Las conoces

por supuesto vamos a pasar la siguiente

que es multiplicación y vamos a ir a la

siguiente que es la división ahora si es

que nosotros ejecutamos esto vamos a ver

por supuesto los resultados vamos a

tener a 4 - 2 3 y también tenemos a

0,333333 periódico ahora Esta es una

forma de dividir que es cuando nosotros

queremos el número pero también lo

queremos con los decimales Pero qué es

lo que pasa si nosotros no queremos los

decimales Bueno en ese caso nosotros

tenemos que utilizar dos Slash hacia

adelante y ahora si nosotros ejecutamos

nuestro código nos va a indicar que en

este caso la división es cero cuando

nosotros estamos utilizando de los dos

Slash nos va a mostrar la parte entera

del resultado ahora vamos a continuar

con la siguiente operación Y esta es la

de módulo y módulo es cuando nosotros

utilizamos el símbolo de porcentaje para

indicar Oye de la división que tú hagas

lo que quiero que me devuelvas es el

resto lo que sobra de la división vamos

a ver qué es lo que nos arroja esto como

resultado y aquí nosotros vemos que nos

arroja un 1 por qué Porque si nosotros

dividimos 3 en 1 no se puede hacer

entonces lo que nosotros tenemos que

hacer es necesariamente agregar un cero

y qué es lo que nos terminaría sobrando

de esto un 1 para hacer esto un poco más

claro vamos a colocar acá un 8 Cuántas

veces cabe el 3 en el 8 bueno en este

caso cabe dos veces y cuántos sobran

sobrarían dos vamos a ejecutar

nuevamente el código y aquí nosotros

vemos que tenemos el 2 Y ahora a

continuación qué es lo que pasaría si

nosotros queremos hacer que un número

esté en potencia de o elevado a vamos a

suponer ahora que nosotros vamos a tener

dos y lo que quiero hacer es elevarlo a

3 o sea 2 por 2 4 nuevamente por 2 8

como sería eso nosotros en lugar

utilizar el símbolo de porcentaje

tenemos que utilizar dos veces el

símbolo de multiplicación y esto lo que

hace es que va a tomar el número de dos

y lo va a Elevar a 3 ahora si es que

nosotros ejecutamos nuestro código vamos

a ver ahora que tenemos el número 8 como

resultado tal cual les había dicho y

ahora vamos a devolvernos acá arriba

donde nosotros tenemos la definición de

nuestras variables y le estamos

asignando en este caso un dos qué es lo

que pasaría si yo ya tengo definido mi

número dos en este caso como podemos ver

lo tenemos definido acá y yo más abajo

exactamente acá lo que quiero hacer es

sumarle nuevamente otro número quiero

por ejemplo a dos sumarle 2 o en este

caso las variables de número le quiero

sumar 2 en ese caso yo lo que puedo

hacer es lo siguiente puedo escribir

número igual y Esto va a ser igual a

número sumado + 2 entonces que lo que

estoy haciendo Estoy tomando mi variable

de número y la estoy reemplazando por sí

misma y que valor tiene cuando es sí

misma tiene el valor de 2 y después yo

lo que hago es que le sumo dos Entonces

esto vendría siendo Dos más Dos es igual

a 4 y de 4 se le asignaría después a

número vamos a verlo vamos a escribir un

print acá de número y por supuesto para

que esto quede bien claro vamos a

colocar acá un String de número

guardamos y vamos a ejecutar nuevamente

el código y aquí nosotros vemos que

tenemos número y este es cuatro vamos a

cerrar acá ahora qué es lo que pasa si

yo quiero hacer exactamente esto mismo

pero quiero hacerlo con otra anotación

bueno vamos a duplicar esta línea y

vamos a comentar esta de acá arriba Y en

lugar de yo escribir número va a ser

igual al número + 2 lo que voy a hacer

Es que voy a eliminar absolutamente todo

esto y aquí voy a colocar el símbolo de

más igual 2 esta anotación que aparece

acá quiere decir Oye la variable que yo

tengo a la izquierda súmale dos y luego

vuelve a asignarse a la misma variable

Entonces ahora si es que yo ejecuto

nuevamente el código vamos a ver que

tenemos nuevamente número 4 Ahora yo con

qué operadores puedo realizar esto mismo

bueno con todos los que nosotros vimos

acá abajo lo podemos hacer con suma

resta multiplicación y división es más

vamos a verlos vamos a cambiar este por

multiplicación pero en vez de hacerlo

por dos lo vamos a por 5 guardamos vamos

a ejecutar de nuevo y ahora nosotros

tenemos número 10 también lo podemos

hacer con división con recta y con suma

vamos a duplicar todo esto aquí nosotros

vamos a tener la suma aquí tenemos la

multiplicación aquí tenemos la resta y

acá tenemos la división todos estos

casos van a ser válidos y en la forma

corta de poder escribir esto que se

encuentra acá arriba

[Música]

en este vídeo Te voy a enseñar un par de

funciones nativas que tiene python para

poder trabajar con números para eso nos

vamos a venir acá nuevamente a nuestro

explorador y vamos a crear un nuevo

archivo que se va a llamar 07 guión

números guión funciones punto p y

presionamos enter cerramos nuestro

archivo anterior de números y cerramos

nuestro explorador ahora lo que vamos a

hacer es imprimir la siguiente función

round Abre paréntesis y aquí nosotros

vamos a colocar 1.3 vamos a guardar y

ahora vamos a ejecutar nuestra

aplicación para ver qué es lo que nos

arroja vamos a pinchar acá y aquí

nosotros vemos que nos está devolviendo

uno round lo que va a hacer es que va a

devolver el número al cual éste se

encuentre más cercano al número que

nosotros le pasemos acá entonces 1.3 se

encuentra más cerca de uno o se

encuentra más cerca de dos en este caso

se encuentra más cerca del número entero

1 así es que este nos va a devolver 1

pero si es que nosotros hacemos esto

mismo y colocamos por ejemplo un 1.7 Y

ejecutamos nuevamente esto vamos a ver

ahora que nos ha devuelto el número 2

qué es lo que así que nosotros le

colocamos 1.5 porque este se encontraría

técnicamente en la mitad vamos a ver qué

es lo que ocurre esto también nos

devuelve dos ahora vamos a ir ahora con

la siguiente función vamos a colocar

nuevamente print y aquí nosotros vamos a

escribir ABS a abrirse a paréntesis ABS

lo que hará será entregarnos el valor

absoluto del número que nosotros le

pasemos a esta función el valor absoluto

lo que hace es que saca el signo ya sea

si es que es positivo o negativo de la

ecuación y Por ende este siempre nos va

a devolver un número positivo Entonces

si es que nosotros le pasamos por

ejemplo un menos 77 esto lo que va a

hacer es que nos va a imprimir 77 pero

si nosotros le pasamos en lugar de -77

le pasamos por ejemplo 55 sino el

símbolo de menos Y ejecutamos nuevamente

nuestro código vamos a ver que este nos

devuelve 55 el número 55 ahora

lamentablemente python no tiene muchas

funciones nativas para que nosotros

podamos trabajar con números Pero

afortunadamente este viene con un módulo

incluido de manera nativa que nosotros

podemos importar para poder trabajar con

números ahora Qué es un módulo un módulo

vendría siendo como otro archivo que

nosotros podemos traer y que este ya

viene con código escrito en python

Entonces vamos a importar el módulo que

necesitamos nosotros para eso nos vamos

a venir aquí a nuestra primera línea y

vamos a escribir import Matt es el

módulo con el cual nosotros vamos a

empezar a trabajar y piensan que más es

un archivo que se llama math punto py y

este contiene código escrito en python

Sencillamente Eso es Es código escrito

en python que se encuentra en otro

archivo y que nosotros vamos a poder

utilizar para nuestra conveniencia

Entonces vamos a ver algunas de las

funciones que vienen dentro de él módulo

de Mac y luego les voy a mostrar donde

ustedes pueden encontrar la

documentación de este módulo porque la

verdad es que métodos Tiene bastantes

pero vamos a ver los más importantes

entonces justamente acá abajo vamos a

escribir print

más.sil esto lo que va a hacer es que va

a tomar el número y va a llevarlo el

número superior entero más cercano

Entonces si nosotros tenemos acá por

ejemplo 1.1 si nosotros ejecutamos esto

el número más cercano hacia arriba va a

ser 2 Vamos a continuar con la siguiente

vamos a colocar nuevamente más punto ya

que nosotros vamos a colocar flor y flor

lo que va a hacer es que va a tomar el

número independiente de cuál sea por

ejemplo 1.9999 y lo va a llevar hacia el

número entero que se encuentra más

cercano pero hacia abajo entonces vamos

a ejecutar nuestro código y aquí

nosotros vemos que nos está devolviendo

el uno Vamos a continuar ahora

nuevamente vamos a escribir print más

punto y aquí nosotros vamos a hacer uso

del método de Island y is not lo que va

a hacer es que nos va a devolver si es

que el número que nosotros le estamos

pasando o no el número en verdad si es

que el valor que nosotros le estamos

pasando entre paréntesis corresponde a

que no es un número entonces por ejemplo

si es que yo le voy a pasar 23 y yo

imprimo Esto me va a indicar que esto es

falso Por qué Porque este número El de

23 Efectivamente es un número que lo que

ocurre si nosotros le pasamos por

ejemplo 93 le pasamos un String que diga

23 vamos a ver qué es lo que ocurre lo

ejecutamos y aquí nos está indicando que

el argumento que nosotros le tenemos que

pasar tiene que ser un número real y no

un String Ok entonces is not solamente

nos va a servir si es que nosotros le

pasamos números reales Así que lo que

vamos a hacer es que vamos a comentar

esta línea para que no tengamos

problemas después vamos a pasar al

siguiente método de más vamos a colocar

print punto Pau y qué es lo que hace Pau

Bueno nos permite a nosotros poder

Elevar un número a la potencia de algo

voy a colocar acá 10 elevado a 3 ahora

vamos a ejecutar nuestro código y aquí

nosotros vemos que tenemos 1000 que ese

es el resultado de Elevar 10 a 3 10 por

10 100 por 1000 Ahora sí continuamos con

el último que vamos a ver antes de pasar

a ver dónde podemos encontrar todos los

métodos que tiene más así que volvemos a

llamar a print llamamos a más punto y

fíjense en esto sqrt esto lo que hará

será sacar la raíz cuadrada del número

que nosotros le pasemos aquí yo lo voy a

pasar 9 y Cuál es la raíz cuadrada de 9

por supuesto es dos No claro que no es

dos era para ver si es que estabas

atento la raíz cuadrada de 9 es 3 vamos

a ejecutar nuestro código y acá nosotros

vemos que la raíz cuadrada de 9 es

efectivamente 3 Ahora yo les voy a

mostrar Cómo nosotros podemos encontrar

donde existen todos los métodos que

tiene nuestro módulo de más vamos a

abrir nuestro explorador y una vez que

nosotros nos encontremos dentro de

Google vamos a colocar acá payson más

presionamos enter y el link que nosotros

estamos buscando vendría siendo este que

aparece acá el cual se encuentra dentro

de 2.yston.org library map vamos a

pinchar acá y aquí nosotros ya tenemos

unos cuantos métodos incluso los que

nosotros ya habíamos utilizado tenemos

por ejemplo ha sido también se encuentra

com y aquí ustedes pueden venir e

introducir todo lo que esto muestra para

que vean que son la verdad es que

bastante bastantes métodos nosotros no

los vamos a ver todo porque la verdad es

que no son relevantes que nos veamos

para el alcance de este curso pero sí es

importante que ustedes sepan que esto

existe y que acá se encuentran

absolutamente todos los métodos o las

funciones en verdad definidas dentro del

módulo de Mazo

[Música]

en este vídeo vamos a construir nuestra

primera aplicación bueno quizás la

palabra aplicaciones demasiado grande

para lo que vamos a construir pero por

lo menos vamos a agarrar varios

conceptos de los que ya hemos visto y

los vamos a poner en práctica Así que

vamos con eso lo primero que nosotros

tenemos que hacer es crear un nuevo

archivo el cual se va a llamar

calculadora si lo sé una calculadora No

necesariamente es entretenido de

construir Pero lo bueno que tiene es que

son sumamente predecibles y nos ayudan a

practicar cosas que son sencillas y de

esta manera podemos reforzar lo

aprendido así es que vamos a cerrar el

archivo anterior vamos a cerrar el

explorador y vamos a comenzar lo primero

que vamos a necesitar es una forma de

poder obtener datos del usuario hasta

ahora nosotros no hemos visto

absolutamente ninguna forma de como

nosotros podemos sacar datos que los

pueda ingresar el usuario manualmente

Entonces cómo vamos a hacer eso La

verdad es que es sumamente fácil lo que

vamos a hacer nosotros ahora es crear

una variable que se va a llamar n1 que

va a hacer referencia al primer número y

esta Va a ser igual a input esta función

nos va a permitir a nosotros poder

obtener datos del usuario y cómo va a

ser esto nuestra aplicación de manera

interactiva con la terminal input recibe

el mensaje que nosotros queremos

entregarle al usuario y en este caso el

mensaje que le queremos dar es ingresa

primer número así de fácil vamos a

duplicar esta línea y vamos a cambiar el

número que se encuentra abajo por n2 y

vamos a cambiar por supuesto la palabra

de primer por segundo así de fácil ahora

si es que nosotros colocamos un print y

le pasamos un n1 y también le pasamos n2

si es que nosotros vamos a ejecutar esta

aplicación acá vamos a ver que en este

momento nos está indicando nuestra

terminal ingresa primer número y aquí yo

voy a ingresar 12 y después me va a

indicar ingresa segundo número Yo le voy

a decir que es 32 y aquí me está

mostrando los números que yo ingresé 12

y 32 sin embargo hay algo que esto no

está haciendo por mí Y esto es lo de

transformar estos datos de un String a

un número así Así que vamos a tener que

hacer eso nosotros de manera manual

Porque si nosotros intentamos sumar

estos números que de hecho Se los voy a

mostrar inmediatamente ahora lo que va a

hacer es que nos va a mostrar los datos

de

1.232 en lugar de sumar 12 + 32 vamos a

correr nuestra aplicación de nuevo vamos

a cerrar acá pinchamos nuevamente acá en

play Vamos a ingresar nuestro primer

número que va a ser 12 el segundo va a

ser 32 y aquí nosotros tenemos 12

concatenado con 32 y eso Por supuesto

que no es lo que nosotros queremos lo

que nosotros queremos hacer es que esto

sea efectivamente la suma de dos números

Así es que vamos a hacer esto de la

siguiente manera vamos a colocar aquí

justamente en la línea después n1 y Esto

va a ser igual a int de n1 y luego lo

que vamos a hacer es exactamente lo

mismo con n2 y n2 va a ser igual a int d

n2 ahora si es que nosotros volvemos a

ejecutar nuestra aplicación tenemos que

colocar el número de 12 luego colocamos

32 y ahora sí no se está entregando el

resultado de 44 Hay un problema que

tiene nuestra aplicación y si nosotros

Tratamos de ejecutarla pero en lugar de

ingresar un número colocamos un String y

después colocamos otro me va a indicar

que ha ocurrido un error porque estamos

transformando un String que en este caso

vendría siendo este que yo ingresé a un

número entero y esto por supuesto que no

se puede hacer por ahora vamos a dejarlo

así vamos a obviar este error para que

podamos seguir construyendo nuestras

aplicaciones Pero esto el manejo de

errores Ya lo vamos a ver en un futuro

más adelante ahora lo que vamos a hacer

es eliminar este print que se encuentra

acá y vamos a empezar a generar

resultados por cuatro operaciones por la

suma la resta la multiplicación y la

división y luego le vamos a entregar

esos datos al usuario Así es que vamos a

colocar suma va a ser igual a n1 + n2

esto lo vamos a duplicar vamos a cambiar

por supuesto el primer String por resta

y vamos a cambiar el símbolo de suma por

el símbolo de resta después vamos a

hacer lo mismo con multiplicación y por

supuesto que con división y que no se

nos olvide por supuesto cambiar el

nombre de estas variables Yo la voy a

dejar como multi y como DIF solamente

para que sea más de escribir y ahora nos

falta algo sumamente importante y Qué es

entregarle un mensaje de éxito al

usuario con los resultados que nosotros

obtuvimos en este caso nuestro mensaje

va a ser igual a una variable que se

llama mensaje y aquí nosotros vamos a

utilizar los strings que se crean con

tres comillas dobles y aquí dentro

nosotros vamos a escribir lo siguiente

para los números aquí nosotros podemos

utilizar el formateo de String también

vamos a colocar el abre y cierra

paréntesis de llaves n1 y n2 el

resultado de la suma es suma vamos a

copiar y pegar esta línea dos veces más

tres veces más vamos a colocar también

resta multi y también DIF también vamos

a cambiar los textos que aparecen acá en

lugar de suma vamos a colocar restas

multi aplicación porque esto sí lo va a

ver el usuario Y en lugar de suma Aquí

vamos a colocar división vamos a guardar

y ahora lo que vamos a hacer es

entregarle este mensaje al usuario

dentro de nuestra terminal para eso

vamos a llamar a print y le pasamos

nuestro mensaje ahora lo que vamos a

hacer es guardar como ustedes pueden

haber visto yo estaba utilizando el

paréntesis de llaves justamente para

poder indicar cada una de las variables

pero si nosotros recordamos bien

Nosotros tenemos que colocar el carácter

de F justo al comienzo para que esto sea

interpretado de la manera correcta Así

es que nosotros aquí vamos a colocar la

letra f vamos a guardar y ahora sí vamos

a pinchar acá en el botón de ejecutar y

vamos a ver qué es lo que ocurre ingresa

primer número vamos a pinchar acá para

que tome el foco presionamos 12 luego

ingresa segundo número 32 y ahora me

está indicando que para los números 12 y

32 el resultado de la suma es 44 el

resultado de la resta es -20 el

resultado de la multiplicación es 384 y

el resultado de la división es

0.375

0.375 y de esta manera Nosotros hemos

resuelto nuestro primer ejercicio que es

una pequeña calculadora

[Música]

acabamos de resolver nuestro primer

ejercicio una calculadora bastante

básica ahora vamos a ver un par de cosas

que nos dejó ese ejercicio para eso

nosotros vamos a volver aquí a nuestro

explorador vamos a crear un nuevo

archivo y este se va a llamar 09 con

versión tipos punto p y vamos también a

aprovechar de renombrar la calculadora

a08- calculadora Ahora sí podemos volver

a 9 vamos a cerrar nuestro archivo de

calculadora y cerramos nuestro

explorador lo que vamos a hacer ahora es

definir una variable que se va a llamar

x y esta Va a ser igual al input del

usuario lo que nosotros vimos era que

independiente de lo que nosotros

recibiéramos por parte del usuario x

siempre iba a ser de tipo String y que

nosotros necesariamente íbamos a tener

que transformarla a un tipo entero o

integer Y eso nosotros lo hicimos con la

función nativa de python llamada int int

no es la única función nativa que existe

dentro de python existen varias más

existe vamos y las anotando aquí

inmediatamente int las voy a dejar como

comentario también existe str que str lo

que hace es que agarra cualquier tipo de

dato y lo transforma a un String a

continuación También tenemos float este

es bastante autoexplicativo y lo que

hace es que va a tratar de agarrar

cualquier tipo de dato y lo va a

transformar en un por si no lo habías

notado en un float Y por supuesto que

también tenemos boole lo que va a hacer

es que va a tratar de transformar este

dato a un boolean o un booleano pero le

vamos a decir bullian por ahora ahora

esta función Podría tener un par de

problemas si es que tú le intentas

ejecutar Por qué Porque Bull lo que hace

es que va a tomar absolutamente

cualquier cosa que tú la pases y este la

va a evaluar en true o falso ahora

dentro de python existe un concepto que

se llama trufi y falsi esto quiere decir

que van a existir datos o ciertos tipos

de datos que van a ser evaluados en true

si es que nosotros se los pasamos a esta

función de Pool y también van a existir

otros datos Aquí van a evaluar en falso

si es que nosotros se los pasamos a esta

función de nofloud a esta función de

bull ahora qué datos son esos la verdad

es que esto es bastante fácil los datos

falsi vendrían siendo o falsing son un

String vacío esto quiere decir un String

que no tiene absolutamente nada el

segundo dato que evalúa en falsi es el

cero lo estoy colocando yo este como

especie de Slash hacia adelante dentro

del círculo para que se entienda que es

un cero y el último dato que puede ser

evaluado en falsie es un objeto que se

llama Non no se preocupen por este

objeto nosotros ya lo vamos a ver más

adelante en el curso Pero lo que sí

tienen que saber es que solamente con

estas tres alternativas la función de

bull va a devolver false con todo el

resto incluso con un String que dice

falso este igual va a evaluar en true

Así que vamos a probar exactamente esto

mismo que yo les estoy mencionando vamos

a comentar esta línea y vamos a llamar a

Bull de un String vacío esto por

supuesto tenemos que imprimir voy a

copiar un par de veces estas líneas

luego le vamos a indicar Bull de 0

después tenemos bul de Non y después

tenemos un Bull de un String con un

espacio vamos a copiarlo vamos a tener

otro Bull que va a tener el valor de

cero Entonces el primero va a devolver

falso el segundo va a devolver true

porque es un String que contiene el

valor de cero el tercero va a devolver

falso este va a devolver true y este va

a devolver falso vamos a ejecutar

nuestros Script y aquí tenemos falsos

true falso true falso Entonces es falso

true falso true falso

[Música]

en este vídeo nosotros vamos a ver los

operadores de comparación o los

comparadores para eso vamos a venir

nuevamente aquí a nuestro editor y vamos

a crear una nueva carpeta la cual se va

a llamar control guión flujo ya que

nosotros vamos a colocar absolutamente

todos los archivos que sean referentes a

esta sección aquí nosotros lo que vamos

a hacer es crear un nuevo archivo el

cual se va a llamar comparadores punto p

Y por supuesto tenemos que colocar bien

el nombre así que la vamos a renombrar

por 01 guión comparadores Ahora sí vamos

a cerrar el explorador y vamos a

comenzar lo primero que tenemos que

hacer es por supuesto escribir la

instrucción de print para poder mostrar

en la terminal en qué va a ir evaluando

cada una de las expresiones que nosotros

vamos a colocar Ahora yo he dicho un par

de veces la palabra expresiones o

expresión y que lo que significa Bueno

una expresión es algo ya sea una cadena

de instrucciones que después estas van a

evaluar en una única cosa Como por

ejemplo podría ser uno más dos esto que

es lo que va a hacer va a en tres

Entonces esto vendría siendo la

expresión eso también nosotros lo

podemos utilizar para variables por

ejemplo nosotros podríamos tener una

variable que se llame n1 y esta se la

vamos a sumar a n2 esto también va a ser

una expresión y lo que nosotros vamos a

hacer ahora es colocar una expresión

dentro de los paréntesis de la función

print Así es que aquí nosotros vamos a

colocar uno mayor que 2 y que creen que

va a devolver Esto bueno esta expresión

cuando nosotros estamos utilizando estos

comparadores lógicos van a devolver

siempre un valor que puede ser otro o

puede ser false aquí lo coloque con

minúscula pero en verdad ustedes saben

que esto se tiene que escribir con

mayúscula existen múltiples operadores

lógicos que nosotros podemos utilizar

los cuales nos van a terminar

devolviendo un valor boolean en este

caso nosotros tenemos este que se

encuentra acá ahora uno es mayor que 2

por supuesto que no así es que esto lo

que va a hacer es que me va a devolver

falso vamos a duplicar esta línea y lo

vamos a cambiar por el símbolo de menor

que ahora es menor que 2 por supuesto

que sí Esto va a devolver true es más

ejecutemos esto para ver qué es lo que

nos devuelve y aquí nosotros tenemos el

primer valor que es false y el segundo

que es true Vamos a continuar ahora con

los siguientes operadores lógicos el

siguiente que viene es el de menor igual

que vamos a duplicar esto y vamos a

cambiarlo por el símbolo de mayor o

igual que en este caso uno es mayor

igual que dos no no lo es es menor que Y

en este caso uno es menor igual que 2 en

este caso Sí sí lo es así es que esto

debiese devolver true vamos a ver otro

ejemplo exactamente también con este

mismo operador lógico el símbolo de

mayor igual que aquí nosotros vamos a

colocar el número dos Entonces dos es

mayor igual que dos Sí porque 2 es

Exactamente igual que dos cuando

nosotros estamos utilizando este

operador lógico nosotros estamos

utilizando la combinación entre el

símbolo de mayor que e igual o sea que

si es que el número de acá es igual al

número de acá entonces Esto va a evaluar

en true pero también va a ser true si es

que el número que se encuentra a la

izquierda Es mayor que este y ocurriría

exactamente lo mismo si es que nosotros

lo cambiamos por el símbolo de menor que

en este caso estas dos van a devolver

true vamos a verlo vamos a ejecutar

nuestro código y aquí nosotros vemos que

las últimas expresiones devuelven true

vamos a cerrar esto y vamos a continuar

ahora lo que tenemos que hacer es

colocar el operador de la doble igualdad

porque doble igualdad Porque si nosotros

colocamos solamente uno igual lo que

estaríamos haciendo es asignar una

variable al valor que se encuentra a la

izquierda pero nosotros no lo podemos

hacer con los números Así que lo que

vamos a hacer es colocar nuevamente la

doble igualdad en este caso 2 es igual a

2 por supuesto que sí Esto va a devolver

true ahora veamos el caso Cuando esto

devuelve falso nuevamente lo dejamos en

2 = 3 ahora Esto va a devolver falso

ahora qué es lo que ocurriría si

nosotros comparamos dos con el String de

dos en este caso como esto es de tipo

número específicamente esto es un int Y

esto es un String nosotros vamos a tener

dos tipos de datos que son completamente

distintos Por ende Esto me va a de falso

Vamos a continuar ahora con el último

que en este caso vendría siendo la

desigualdad o en este caso el not igual

esto quiere decir not igual o no es

igual a en este caso 2 es no igual a el

String de 2 por supuesto que sí esto nos

va a devolver true pero si nosotros en

lugar de eso escribiéramos dos es

distinto de dos Claro que no son

exactamente iguales Así que esto me va a

devolver falso vamos a ejecutarlo para

ver qué es lo que esto nos devuelve aquí

nosotros tenemos falso y finalmente

estos son los operadores lógicos que

nosotros vamos a estar utilizando la

mayoría de las veces para poder

entregarle un flujo a nuestra aplicación

y de esta manera nuestra aplicación va a

saber Qué camino tomar dependiendo de

los datos que nosotros tengamos en

determinado momento

[Música]

Vamos a continuar viendo la instrucción

If a nosotros nos va a poder permitir

tomar decisiones en cuanto a qué camino

tiene que tomar nuestro código

dependiendo del valor que tengan las

variables con las que estamos trabajando

vamos a verlas para eso nosotros nos

venimos nuevamente acá al explorador

volvemos a crear un archivo el cual se

va a llamar 02 guión if.pe y griega

vamos a cerrar el archivo anterior

cerramos nuestro explorador y

continuamos vamos a suponer que nosotros

queremos comprar una entrada al cine y

en este caso la película que nosotros

queremos ver es solamente para mayor de

18 años pero también podemos obtener un

descuento en el caso que el usuario sea

mayor de 55 para eso nosotros lo que

vamos a hacer es crear una variable que

se va a llamar edad y por Ahora la vamos

a dejar en 22 para hacer ejercicio fácil

Entonces ahora lo que nosotros tenemos

que hacer es escribir If espacio vamos a

escribir edad es mayor que 17 años en

este caso nosotros lo que vamos a hacer

es indicarle python que tiene que

ejecutar código que se encuentre

justamente aquí anidado Dentro de este

If todo el código que no se encuentre

anidado va a ser ejecutado de todas

maneras y no va a pasar por esta

condición vamos a ver entonces de qué

estoy hablando Yo voy a colocar acá un

print y le voy a indicar acá puede ver

la película y vamos a guardar vamos a

agregar también un print al final que

nos va a indicar que el programa terminó

vamos a dejarlo solamente como listo con

este programa lo que hicimos fue crear

una variable que va a contener el valor

de 22 en este caso vendría siendo la

edad del usuario luego vamos a preguntar

si es que el usuario es mayor de 17 años

y en el caso de ser mayor de 17 años

Nosotros le vamos a mostrar al usuario

puede ver la película si es que el

usuario no tuviese más de 17 años o sea

18 años en adelante nosotros No

deberíamos poder ver este mensaje y

solamente deberíamos ver el print que

nos está mostrando listo vamos a

ejecutar nuestro código y aquí nosotros

podemos ver que nos indica que puede ver

la película y también vemos el mensaje

de ahora lo que voy a hacer es limpiar

esta terminal y voy a ejecutar esto de

nuevo pero en lugar de tener la edad de

22 le voy a colocar 15 Ahora sí vamos a

presionar nuevamente acá para ejecutar

el código y vemos que ahora solamente

nos imprime listo de esta manera

nosotros podemos utilizar la instrucción

de If y a la derecha Nosotros le podemos

pasar la expresión que nosotros queramos

siempre y cuando esta expresión evalúe

en true o en false para poder evaluar si

es que vamos a ejecutar esta porción de

código si es que no cumple con la

condición nosotros Sencillamente no

ejecutamos esto por ejemplo podría ser

validar que el usuario pueda entrar a

ver una película ahora vamos a ver otro

caso qué es lo que pasa si es que el

usuario por alguna razón es menor de

edad o sea tiene 17 años o menos en ese

caso lo que nosotros tenemos que hacer

es colocar la instrucción de éls y aquí

nosotros podemos colocar nuevamente un

print y le vamos a indicar no puedes

entrar Ahora vamos a guardar y vamos a

ejecutar nuestro código de No pinchamos

acá y ahora nos está indicando el

mensaje de no puedes si es que esto yo

lo vuelvo a cambiar por supuesto a 22 y

vuelvo a ejecutar el código nos vamos a

dar cuenta que ahora nos va a mostrar

puedes ver la película de esta manera yo

puedo indicarle a mi código qué posición

de código tiene que este ejecutar

dependiendo del tipo de dato que yo

estoy recibiendo ahora algo sumamente

importante como ustedes pueden ver aquí

yo lo que estoy haciendo es que estoy

intentando el código hacia la derecha en

este caso estoy colocando cuatro

espacios o lo puedo hacer perfectamente

con la tecla de Tab cuando yo presiono

la tecla de Tab el código se va a anidar

un poco hacia la derecha estos cuatro

espacios son sumamente importantes ya

que si ustedes por alguna razón no los

llegasen a colocar en este caso no van a

ser considerados dentro de State

supongamos por ejemplo que yo me

equivoco y aquí dentro de este es vuelvo

a colocar un print y le entrego un

mensaje por ejemplo de B a otro lado y

por alguna razón me equivoco y esto lo

dejo desciendado tal cual como se

encuentra acá Al mismo nivel que el If y

el Else Bueno vamos a ver qué es lo que

ocurre lo voy a ejecutar y me va a

indicar a cada mensaje de puedes ver la

película y ve a otro lado Esta es la

razón por la cual a algunos

desarrolladores cuando están recién

empezando a programar no les funciona

bien su código tienen que preocuparse de

que su código siempre se encuentre y

dentado Y en este caso quiere decir que

tiene que encontrarse justamente una

tabulación a la derecha después de él o

después de ir ahora qué es lo que pasa

si es que mi usuario es mayor de 55 años

como yo lo había mencionado antes Bueno

en este caso nosotros vamos a tener que

cambiar esto Un poco yo lo que voy a

hacer Es que voy a preguntar acá si es

que su edad es mayor a 54 y el mensaje

que le voy a indicar es puedes ver la

película con descuento ahora voy a

agregar Otra condición más que es lo que

pasaría si es que yo Después de haber

preguntado si es que tiene más de 54

quiero hacerle otra pregunta Como por

ejemplo Ahora quiero saber si es que el

usuario es mayor de 18 en ese caso tengo

que utilizar la instrucción de El If y

aquí yo coloco edad es mayor a 17 dos

puntos y aquí es donde yo tengo que

colocar nuevamente mi print donde le voy

a indicar puedes ver la película vamos a

ejecutar mi código para ver si es que

funciona si lo pinchamos vamos a ver que

nos muestra puedes ver la película vamos

a cambiar esto ahora por 60 vamos a

guardar y volvemos a ejecutar el código

y ahora nos está mostrando puedes ver la

película con descuento probemos el otro

camino que es en el caso que el usuario

tenga 15 años volvemos a ejecutar

nuestro código y nos indica ahora no

puedes entrar ve a otro lado y listo

ahora nosotros por qué necesariamente

tenemos que hacerlo en este orden y no

lo podemos hacer por ejemplo colocando

edad mayor de 17 dentro del If y luego

dentro de elif colocar edad mayor a 54

porque Las evaluaciones se hacen desde

arriba hacia abajo o sea lo primero que

se va a evaluar es el If si es que esto

evalúa en true en ese caso no se va a

evaluar el hélix que viene y Por ende

tampoco vamos a pasar a él que quiere

decir esto si yo coloco por ejemplo que

mi edad es de 60 y dentro de mi If

pregunto si es que la edad es mayor a 17

en ese eso me va a arrojar true y me va

a decir que yo puedo ingresar a ver la

película y nunca voy a pasar por la

condición de si edad es mayor a 54 si es

que no me creen vamos a hacerlo vamos a

cambiar esta condición la vamos a

recortar la vamos a pegar acá vamos a

recortar esto y lo vamos a pegar acá

abajo dentro de mi elif y por supuesto

tenemos que cambiar esto ahí cambiamos

el orden y vamos a cambiar la edad en

este caso a 18 vamos a ejecutar el

código ya que el código nos está

indicando puedes ver la película pero

aquí nosotros tenemos un error porque si

nosotros ahora colocáramos por ejemplo

60 y ejecutamos nuestro código nos va a

indicar nuevamente puedes ver la

película Por ende el orden en el cual

nosotros colocamos nuestras expresiones

dentro de If y elif es sumamente

importante y tenemos que pensar muy bien

cuál va a ir primero y cuál va a ir

después en cuanto a éls no nos tenemos

que preocupar tanto ya que si no se

cumple este y si no se cumple esta

condición siempre se va a ejecutar él

pero si por alguna razón nosotros no

quisiéramos ejecutar absolutamente nada

y solamente quisiéramos tener un If y

nosotros perfectamente podríamos

eliminar esto que se encuentra acá de

hecho yo lo que voy a hacer es

comentarlo y ahora voy a cambiar mi edad

a 15 voy a ejecutar el código y podemos

ver ahora que me está entregando el

mensaje de listo y no pasó por

absolutamente ninguna de estas

condiciones ahora podríamos querer

nosotros tener aún más condiciones Por

supuesto que sí voy a agregar otro elif

a la ecuación voy a presionar entrar acá

voy a pegar voy a cambiar el de arriba

voy a preguntar si es que en este caso

es mayor a 65 para entregarle un súper

descuento si es que no es mayor a 65 Así

es que agregamos acá con super descuento

luego preguntamos si es que es mayor a

54 le indicamos puedes ver la película

con descuento el siguiente elif va a ser

17 y le vamos a dejar solamente como

puedes ver la película guardamos ahora

lo que vamos a hacer es que vamos a

probar cada uno de estos casos vamos a

colocar la edad en 18 vamos a reproducir

nuestro código tenemos puedes ver la

película vamos a cambiarlo ahora por 57

vamos a guardar puedes ver la película

con descuento y vamos a cambiar

nuevamente la edad por guardamos

volvemos a ejecutar y ahora podemos ver

que nos indica puedes ver la película

pero con un súper descuento el orden en

el cual nosotros escribimos las

instrucciones de If elif y los

siguientes elif es sumamente importante

ahora vamos a utilizar seguidores elif

la verdad se utiliza mucho más seguido

solamente el If y algunas veces nosotros

colocamos el Else Y si bien se utiliza

el elif no se utiliza tanto como If y

Else pero Estos sí son importantes que

se los aprendan

[Música]

vamos a explicar el If nuevamente pero

ahora lo vamos a hacer con un dibujo

para que quede un poco más claro si es

que no te quedó claro en el vídeo

anterior para eso vamos a bajar un poco

y aquí es donde comenzamos lo primero

tenemos que definir un lugar de inicio

nuestro lugar de inicio va a ser donde

nosotros tenemos nuestra variable de

edad y en este caso no está edad va a

ser vamos a suponer ahora 15 años

entonces después del inicio nosotros

vamos a tener que ir a tomar una

decisión en este caso vamos a

representar las decisiones con un

diamante aquí nosotros vamos a preguntar

si es que la edad es mayor a 65 en el

caso de que sí sea mayor a 65 nosotros

vamos a tirar una línea hacia arriba

Vamos a colocar acá un sí Y aquí

nosotros vamos a indicar imprimir

mensaje de súper descuento así que

nosotros vamos a colocar acá súper

dcto que vendría siendo el súper

descuento en el caso de que no sea así

nosotros vamos a tirar nuevamente una

línea hacia la derecha y aquí nosotros

vamos a colocar un nuevo diamante de

decisión en este nuestro primer diamante

vendría siendo nuestro If el segundo

diamante es nuestro elf y acá dentro de

nuestro segundo diamante nosotros vamos

a preguntar si es que el usuario es

mayor a 55 supongamos que 55 en el caso

de que sea mayor a 55 nosotros vamos a

hacer nuevamente una línea hacia arriba

y acá nosotros vamos a colocar

nuevamente de cto en el fondo para

representar que nosotros le vamos a dar

un descuento a esta persona en el caso

de que no sea así nosotros vamos a

volver a preguntar nuevamente con otro

el If como pueden ver nosotros podemos

colocar muchos elif Aquí voy a colocar

el If nuevamente y vamos a preguntar si

es que esta persona es mayor de 17 años

en el caso que sí sea mayor de 17 años

nosotros acá lo que vamos a hacer es

dejarlo entrar Entonces vamos a colocar

acá puede entrar y en el caso que no

pueda entrar nosotros vamos a colocar

una línea nuevamente hacia la derecha

vamos a colocar como un no y acá vamos a

indicarle debes irte Y esta es la manera

también de cómo nosotros podemos ver el

If de manera gráfica

[Música]

en este vídeo Te voy a enseñar un truco

para poder escribir nuestros If de

manera mucho más concisa vamos a verlo

para eso nosotros vamos a abrir

nuevamente nuestro explorador y vamos a

crear un nuevo archivo que se va a

llamar

03-ternario.py ahora sí podemos cerrar

nuestro explorador Y también vamos a

cerrar nuestra pestaña anterior ahora lo

que vamos a hacer es crear una nueva

variable que va a ser la de edad y aquí

Nosotros le vamos a indicar que este

tiene 15 años Entonces nosotros

podríamos crear un If preguntando si es

que la edad de esta persona es mayor a

17 y luego de eso nosotros lo que

podemos hacer es imprimir acá dentro de

la misma consola si es que el usuario es

mayor o no vamos a colocar acá es mayor

y en el caso que no sea mayor nosotros

vamos a colocar un Else y vamos a

imprimir ahora un mensaje que va a decir

es menor y vamos a guardar ahora esta

sintaxis que nosotros estamos utilizando

la verdad es que es clásica cuando

nosotros estamos programando pero la

verdad es que no siempre tenemos que

escribir nuestro código así

dependiendo de las situaciones puede ser

que nosotros podamos utilizar el

operador ternario para eso nosotros Eso

sí vamos a tener que Modificar un poco

nuestro código lo que voy a hacer ahora

es Eliminar esta parte que dice print y

voy a colocar mensaje igual a es mayor y

voy a hacer lo mismo con esto de acá del

Else y le voy a colocar mensaje igual es

menor y aquí nosotros al final vamos a

imprimir nuestro mensaje de esta manera

Nosotros hemos desacoplado la parte del

print ahora nosotros ya no estamos

imprimiendo un mensaje dentro del If y

el Else Pero esto es agregar más líneas

sin absolutamente ningún beneficio yo lo

sé pero ahora vamos a ver el verdadero

poder que tiene el operador ternario Y

por qué que nosotros asignemos el

mensaje a una variable que en este caso

se llama mensaje es la mejor opción

ahora lo que vamos a hacer es comentar

estas líneas si quieres comentar

Exactamente igual como yo lo hice tienes

que mantener presionada la tecla de

control y Slash hacia adelante y el Mac

o s con Comando y Slash hacia adelante

si es que no tú lo que puedes hacer es

te vas aquí donde dice edit y aquí a

esta opción que nos muestra acá Line

comment también puedes utilizar esta

pero yo utilicé chocolain comment y aquí

a la derecha te va a indicar cuál es el

atajo de teclado que tú tienes que

presionar para que este funcione lo que

yo acabo de hacer ahora sí nosotros nos

vamos a venir justamente un poco antes

vamos a crear nuestra variable de

mensaje y esta Va a ser igual a es mayor

siempre y cuando la edad sea mayor a 17

si es que no Entonces vas a devolver es

menor aquí lo que nosotros estamos

haciendo es cambiar un poco la forma de

cómo se piensa el ir y el Else el

operador ternario que es este que

nosotros estamos viendo acá Tiene como

objetivo de volver algún valor y ese ser

asignado a una variable que nosotros

vamos a tener a la izquierda que en este

caso es mensaje Por ende el operador

ternario lo que va a hacer es asignarle

el valor a la variable ya sea con el

valor que nosotros le indicamos 100% a

la izquierda o sea es mayor o el valor

que se encuentra completamente a la

derecha y finalmente lo que se acá en el

medio vendría siendo la condición que

nosotros tenemos que cumplir Entonces la

sintaxis para poder hacer esto mismo

sería el primer valor que nosotros

asignaríamos siempre y cuando la

condición que se encuentra en el medio

es verdadera y esto tiene que estar

rodeado a su izquierda de un If y a la

derecha de un Else y en el caso que esta

condición sea falsa o false en ese caso

se va a asignar el valor de la derecha

ahora si nosotros podemos guardar vamos

a ejecutar nuestro código y aquí

nosotros podemos ver el String de es

menor y porque es menor porque la edad

es de 15 cambiamos esto a 19 horas

guardamos volvemos a ejecutar y ahora

nosotros vemos el String de es mayor

[Música]

en este vídeo vamos a ver los operadores

lógicos para eso nos venimos nuevamente

acá a nuestro editor vamos a crear un

nuevo archivo y se va a llamar 04-

operadores guión lógicos punto p y luego

vamos a cerrar nuestro archivo anterior

también cerramos nuestro explorador

Ahora sí continuamos los operadores

lógicos que nosotros vamos a ver son los

siguientes ant or y not voy a dejarlos

separados por coma antes Nosotros los

vamos a utilizar cuando nosotros

tengamos dos condiciones por ejemplo

podría ser si es que x es mayor a 5 y si

es que un y es mayor a 10 en este caso

nosotros vamos a utilizar ant y cuando

estos dos sean true en ese caso la

operación completa va a evaluar en true

Pero si por alguna razón alguno de estos

dos valores llegas a ser falso

cualquiera de los dos llegas a ser falso

en ese caso esto ya no va a poder ser

true sino que va a ser completamente

falsa y vamos a suponer que llenó

struds ahora en el caso de or va a

funcionar más o menos similar en este

caso Nosotros también vamos a tener dos

condiciones vamos a tener por ejemplo

nuevamente un x es mayor a 5 y un y es

mayor a 10 y aquí nosotros vamos a

utilizar or entonces en el caso que uno

de estos dos sea true cual sea pero

solamente basta con que uno sea true

para que el resultado completo de esta

operación sea true en este caso nosotros

podemos hasta incluso desconocer el

valor de la otra comparación pero si es

que ambos valores son false en ese caso

el resultado final de nuestro comparador

de ord va a ser false pero para eso

ambos tienen que ser falsos esta

evaluación tiene que ser falsa y también

está evaluación tiene que ser falsa y en

el caso de not not lo que hará será

negar el resultado de una operación

vamos a verlo Ahora sí nosotros vamos a

presionar un par de veces enter y acá

nosotros vamos a suponer que tenemos un

vehículo un auto vamos a preguntar si es

que este tiene gas O vecina y aquí

Nosotros le vamos a dar el valor de true

Y también vamos a preguntar si es que

este se encuentra encendido ahora lo que

nosotros vamos a hacer acá es colocar un

If y vamos a preguntar si es que gas y

encendido son igual a Trump en este caso

no es necesario que nosotros coloquemos

la doble igualdad Ya que en este gas ya

vendría siendo true o falso y encendido

también vendría siendo true o falso Así

es que nosotros acá podemos presionar

enter y vamos a imprimir puedes avanzar

ahora nosotros vamos a ejecutar nuestro

código y aquí nosotros vemos el valor de

puedes avanzar vamos a cerrar Y en este

caso si es que nosotros llegásemos a

cambiar cualquiera de estos dos valores

por false por ejemplo cambiamos gas a

Falls y guardamos vamos a ver ahora que

ya no nos va a imprimir más puedes

avanzar en nuestra terminal y eso es

porque cuando nosotros estamos

utilizando el operador lógico de andt

ambos valores tienen que ser true tanto

como gas como encendido ambos tienen que

ser true para que el resultado completo

de esto evalúe en true y Por ende poder

entrar dentro de nuestra condición ahora

qué es lo que pasa si es que nosotros en

lugar de utilizar ant nosotros lo

cambiamos por or en este caso cualquiera

de estos dos valores puede ser true para

que nos indica que podemos avanzar Así

es que nosotros guardamos y vamos a

ejecutar nuevamente nuestro código y

aquí nosotros podemos que puedes avanzar

vamos a cambiar ahora este valor por

true y el de abajo por false y vamos a

ver que si lo volvemos a ejecutar

podemos seguir avanzando pero no es

hasta que todos los valores terminan

siendo falsos para que ya no nos arroje

más el mensaje de que podemos avanzar

ahora qué es lo que ocurriría si

nosotros negamos uno de estos valores y

para eso nosotros vamos a utilizar el

valor de nota lo que hará será tomar

este valor cualquiera de estos que sea y

le va a cambiar su valor en este caso al

completamente opuesto así que por

ejemplo si es que gas llegas a ser falso

lo va a cambiar a true si es que

encendido y llegas a ser falso lo va a

cambiar a true veamos eso vamos a

cambiar If not gas vamos a ejecutar

nuestro código y ahora vemos que podemos

avanzar ahora Lo bueno es que esto

Nosotros también lo podemos combinar

dentro de nuestros If por ejemplo voy a

devolverme aquí a utilizar ant en lugar

de or y voy a sacar el Note antes de gas

y vamos a crear una nueva variable que

va a ser la de edad aquí nosotros vamos

a ver si es que el usuario es mayor de

18 años entonces vamos a colocar aquí

and'd edad Mayor A 17 y en el caso de

que sea así vamos a dejar al usuario

poder avanzar aquí nosotros vamos a

ejecutarlo Y por supuesto no nos va a

mostrar absolutamente nada porque

nosotros necesitamos de que gas sea true

encendido sea true y también que la edad

sea mayor a 17 para que esto también

evalúe en true nosotros ya sabemos que

la edad es de 18 Así que esto ya es true

nos faltaría cambiar todo el resto si es

que vamos a cambiar false por true y lo

mismo acá con encendido lo vamos a

cambiar a true y ahora sí vamos a

ejecutar de nuevo el código y ahora

nosotros vemos que podemos avanzar ahora

veamos cómo funcionaría esto utilizando

el operador de and y también el operador

de oro vamos a cambiar el último and por

un or y aquí lo que vamos a necesitar es

asignarle unos paréntesis para ver cuál

es la lógica que nosotros vamos a

ejecutar primero por qué porque acá

python no sabe si ejecutar primero esta

combinación o si es que va a ejecutar

esta combinación Así es que

necesariamente acá nosotros tenemos que

colocar los paréntesis redondos para

colocar los paréntesis redondos basta

con que seleccionemos el texto y

presionemos la tecla de Abre paréntesis

y de ese coach se va a encargar de

agregar automáticamente el cierre

paréntesis en la derecha ahora lo que

está ocurriendo acá es que se va a

evaluar primero esto por el orden lógico

que se está utilizando primero siempre

se evalúan los paréntesis entonces

encendido tiene que ser true o el

usuario tiene que ser mayor de 17 años y

además el vehículo tiene que tener gas

Así que si nosotros ejecutamos esto

vamos a ver que el auto puede avanzar

Pero si yo cambio gas en este caso a

falso vamos a ver ahora que este ya no

puede avanzar y ahora vamos a utilizar

absolutamente todas las combinaciones

que vimos vamos a utilizar ant vamos a

utilizar or y ahora también vamos a

aprovechar de agregar not Entonces si es

que el auto no tiene gas y se encuentra

encendido o la persona tiene más de 17

años en ese caso vamos a ver puedes

avanzar Así que vamos a ejecutar esto

nuevamente y ahora vemos que podemos

avanzar Y por qué podemos avanzar porque

el vehículo encendido el usuario tiene

más de 17 años y además nos devuelve

true o sea todo esto finalmente termina

devolviendo

[Música]

en este vídeo vamos a hablar sobre las

operaciones de cortocircuito para eso

nos vamos a venir nuevamente aquí a

nuestro mismo ejemplo todavía seguimos

en nuestro archivo 04 de operadores

lógicos lo que sí vamos a hacer es que

vamos a quitar estos paréntesis que se

encuentran alrededor y vamos a cambiar

absolutamente todos estos operadores

lógicos por el mismo vamos a colocar

solamente and y andt vamos a ver ahora

los operadores de cortocircuito Qué

quiere decir operador de cortocircuito

bueno va a depender del operador con el

cual nosotros estemos trabajando

operador de cortocircuito quiere decir

lo siguiente si es que nosotros estamos

trabajando con nuestros operador lógico

and quiere decir que necesita que

absolutamente Todas Las evaluaciones que

están utilizando ant en este caso

vendría siendo la evaluación de la

izquierda y la evaluación de la derecha

ambas tienen que ser tru Pero qué es lo

que ocurre si es que la primera que es

la que se encuentra a la izquierda es

falso Bueno en ese caso lo que va a

ocurrir es que python va a revisar este

valor se va a dar cuenta de que es falso

y lo que se encuentra a la derecha

derechamente no lo va a evaluar Entonces

ustedes me estarán diciendo Pero cuál es

el beneficio de esto bueno en este

momento nosotros tenemos esta

comparación de edad es mayor a 17 en

este caso no es tan terrible porque el

computador solamente estaría realizando

una operación Pero existe en momentos

donde nosotros estamos haciendo una

evaluación sumamente pesada dentro del

lenguaje de programación y por eso es

que son útiles las operaciones de

cortocircuito Porque en ese caso si es

que nosotros tuviésemos por ejemplo la

primera evaluación que vendría siendo

not gas esta termina retornando falso o

evalúan falso todo el resto de estas

operaciones no se va a ejecutar lo cual

significaría un ahorro de cómputo

importante para el servidor o el

computador donde nosotros lo estemos

ejecutando Entonces en este caso todas

las operaciones absolutamente todas

cuando nosotros estamos haciendo estas

evaluaciones con and y con or se

Ejecutan de izquierda a derecha siempre

a menos que nosotros por supuesto

coloquemos alguna operación con

paréntesis en ese caso si es que existe

algo a la izquierda se va a ejecutar

esto y luego se va a evaluar

absolutamente todo lo que se encuentra

dentro del paréntesis y de la misma

forma si es que nosotros tenemos un

paréntesis acá ya que nosotros tenemos

otro paréntesis y acá nosotros tenemos

un and lo que se va a evaluar primero

por supuesto va a ser lo del paréntesis

que se encuentra a la izquierda ahora en

las operaciones de cortocircuito

nosotros ya sabemos que con ant si es

que la expresión de la izquierda retorna

falso en ese caso la de la derecha no se

va a ejecutar Bueno entonces qué es lo

que pasa cuando nosotros estamos

trabajando con por ejemplo or vamos a

cambiar estos por bueno en el caso de or

Nosotros sabemos que necesitamos por lo

menos solamente una expresión que esta

evalúe true para que sea considerado

absolutamente todo como true entonces en

el caso de or basta con que el valor de

la izquierda sea true para que ya no se

evalúe el valor que se encuentra a la

derecha y en el caso que el valor de la

izquierda sea falso en ese caso si se va

a evaluar la declaración que se

encuentra a la derecha esto significa

que las operaciones en python sean de

cortocircuito

[Música]

en este vídeo vamos a ver cómo podemos

encadenar los operadores de comparación

para eso nosotros vamos a guardar el

archivo anterior por supuesto nos vamos

a venir acá a nuestro explorador y vamos

a crear un nuevo archivo que se va a

llamar 05 cadena comparadores punto p y

vamos a cerrar el explorador y vamos a

cerrar el archivo anterior y ahora vamos

a ejecutar lo siguiente vamos a escribir

edad y vamos a indicar que esta persona

va a tener 25 años entonces qué es lo

que pasa si nosotros por ejemplo tenemos

un servicio de una piscina y en la

piscina solamente queremos que puedan

ingresar personas que sean mayores por

ejemplo a 15 años pero que los adultos

mayores de 65 no pueden entrar a la

piscina para eso lo que podemos hacer es

escribir If y preguntamos si es que la

edad es por ejemplo mayor o igual a creo

que les dije 15 bueno coloquemos 15 y

también que la edad sea menor igual que

65 Y en este caso nosotros colocamos un

print puede entrar a la piscina ahora

qué ustedes y yo les digo que

exactamente esto mismo nosotros lo

podemos escribir de una manera mucho más

corta por ejemplo nosotros podríamos

colocar edad es en este caso mayor o

igual que 15 pero también es menor o

igual a 65 Esta es la misma forma que

nosotros podemos utilizar para escribir

la lógica de acá arriba para eso lo que

vamos a hacer es por supuesto Eliminar

todo esto vamos a sacar esta edad vamos

a dejar 15 edad acá y vamos a colocar la

misma fórmula que nosotros habíamos

colocado antes ahora lo que haremos será

guardar vamos a ejecutar nuestro código

y aquí nosotros vemos que podemos entrar

a la piscina de esta manera nosotros

podemos encadenar los operadores de

comparación

[Música]

ahora te voy a explicar cómo funcionan

los Loop Ford para eso nos vamos a ir

nuevamente aquí al explorador vamos a

crear un nuevo archivo que se va a

llamar 06 guión

ford.py vamos a cerrar el archivo

anterior también el explorador y ahora

sí comenzamos ahora antes de empezar

Para qué nos va a servir un Ford un Ford

cumple múltiples múltiples funciones

Pero principalmente se utiliza para

iterar una lista de elementos por

ejemplo supongamos que nosotros tenemos

un listado de usuarios y cada usuario va

a tener su nombre y su apellido y

supongamos que nosotros queremos generar

un campo nuevo dentro de estos usuarios

que va a contener el nombre completo

entonces Nosotros le vamos a colocar acá

nombre completo Si nosotros queremos

hacer eso y este campo no se encuentra

guardado dentro de los usuarios nosotros

necesariamente vamos a necesitar

realizar un Ford para poder crear de

manera virtual este campo Ese es otro

uso que nosotros también le podemos dar

al Ford es para poder buscar elementos

también lo podemos utilizar para poder

realizar operaciones Matemáticas y un

largo etcétera Lo importante es que

sepas que los foros son sumamente útiles

y los vas a utilizar prácticamente

siempre cuando te encuentres programando

Así es que vamos a aprenderlos y los

vamos a aprender bien lo primero que

nosotros tenemos que hacer es utilizar

la palabra reservada de Ford y seguido

de eso nosotros vamos a crear el nombre

de una variable vamos a suponer que esta

se va a llamar número Luego de eso

nosotros vamos a utilizar la palabra

reservada de in y luego de esto nosotros

vamos a hacer uso de una función que

viene incluida dentro de python que se

llama Range y aquí Nosotros le vamos a

colocar el número 5 seguido de esto

vamos a colocar los dos puntos y esto lo

que hará será dejar y dentado un poco el

código y toda la lógica que nosotros

queramos colocar para que funcione

dentro del Ford la vamos a tener que

colocar acá y dentada si no no nos va a

funcionar Ahora sí vamos a explicar qué

es lo que está ocurriendo

5 lo que se está haciendo es crearnos

una secuencia de números que vamos a

poder utilizar acá dentro de nuestro

Ford entonces Range 5 lo que va a hacer

es que nos va a devolver un listado que

va a comenzar desde el cero Luego de eso

viene el 1 el 2 el 3 y finalmente va a

llegar el norel 5 viene el 4 entonces

Range 5 nos devuelve una secuencia que

comienza desde el 0 y termina finalmente

con el número que nosotros estamos

indicando acá menos uno o sea que en

este caso vendría siendo 4 Ahora sí

luego de que nos devuelve esta secuencia

de números tenemos que ver qué es lo que

hace esta variable de número que

Nosotros acabamos de crear en este caso

la variable de número va a tomar el

valor de cada uno de los elementos que

se encuentra dentro de lo que nosotros

indiquemos acá en este caso nosotros

tenemos la secuencia de 0 1 2 3 y 4

entonces la primera vez que se ejecute

la porción de código que se encuentra

dentro del Ford número va a valer cero

la siguiente vez que se ejecute porque

se va a ejecutar por cada uno de los

elementos que tenemos Dentro de este

Rango va a tener el valor de 1 la

siguiente vez va a tener valor de 2

Después 3 y después 4 Así es que vamos a

colocar acá un print de número ahora sí

vamos a guardar y vamos a ver qué es lo

que nos muestra pinchando acá en nuestro

botón para poder ejecutar nuestro código

y aquí nosotros vemos que tenemos el

valor de 0 1 2 3 4 finalmente estamos

imprimiendo absolutamente todos los

valores que se encuentran dentro de este

Rango ahora Esto no es el único uso que

por supuesto le podemos dar en este caso

al Rango aquí nosotros podemos hacer

muchas cosas más como por ejemplo

podemos multiplicar número por un String

en este caso vamos a indicarle Hola

mundo ahora sí vamos a guardar y lo

vamos a ejecutar de nuevo ahora vemos

que tenemos cero y no hay ninguno

después Tenemos uno y hay un hola mundo

después de eso tenemos dos Hola mundo

Hola mundo y así sucesivamente hasta el

número 4 esto por supuesto que es

solamente la introducción al Ford en

python en el siguiente vídeo vamos a ver

un poco más en profundidad como nosotros

podemos utilizar fork pero de una

bastante más útil

[Música]

continuando con el mismo ejemplo del

video anterior supongamos ahora que

nosotros queremos Buscar un número en

particular o sea en la vida real

nosotros vamos a querer Buscar un

usuario un objeto o algo de la base de

datos Pero esto es para simplificarlo

todavía un poquito más supongamos que

vamos a buscar un número y el número que

nosotros queremos buscar vamos a colocar

que se llama buscar vamos a decir que es

3 entonces lo que podemos hacer ahora es

Eliminar esta línea y aquí nosotros ya

podemos empezar a utilizar un If y aquí

nosotros vamos a colocar lo siguiente

vamos a escribir número si es que número

es igual a buscar en este caso lo que

vamos a hacer es lo siguiente vamos a

imprimir encontrado y luego de eso vamos

a colocar el número que estábamos

buscando buscar y ahora sí podemos

guardar ahora lo que yo quiero hacer es

poder detener la ejecución de este

código porque Sencillamente el elemento

Ya lo encontré Entonces no quiero seguir

iterando Por qué Porque si es que yo

sigo y tirando Voy a darme cuenta que

también voy a después continuar con el

número 4 porque Recuerden que este Rango

va desde el 0 hasta el 4 Pero si yo lo

encuentro en mi tercera iteración yo lo

que quiero hacer es detener

inmediatamente la ejecución de mi Script

así lo que nosotros vamos a hacer es

utilizar la palabra reservada de break

esta instrucción nos va a permitir a

nosotros poder detener la ejecución de

nuestro código ahora lo que vamos a

hacer ahora es colocar nuevamente acá un

print donde vamos a dejar solamente el

número para que nosotros podamos ver

cuántas veces se está ejecutando todo el

código que nosotros colocamos Dentro de

este foro Así que vamos a pinchar acá y

aquí nosotros vemos que se ejecutó una

vez con el cero otra vez con uno otra

vez con dos otra vez con tres y

finalmente la ejecución se detuvo cuando

ha encontrado el número 3 Así es que si

nosotros estamos buscando un usuario que

tenía id3 o identificador 3 ya lo

encontramos ahora qué es lo que

ocurriría si por alguna razón nosotros

no llegásemos a encontrar elementos

supongamos que estoy buscando un

elemento cuyo valor va a ser 10 pero

este Por supuesto que no se va a

encontrar dentro de Rango 5 en ese caso

nosotros podemos utilizar acá éls que en

este caso els se utiliza como un Ford

Else en este caso sería si es que por

alguna razón Yo no he llamado a esta

instrucción que es la de break yo lo que

voy a hacer es ejecutar esta instrucción

que aparece acá y aquí es donde nosotros

tenemos que colocar print no encontré el

número buscado y una carita triste Ahora

sí vamos a guardar ejecutamos nuevamente

el código y aquí nos está indicando que

ejecutó el Ford todas las veces que

vendría siendo la cantidad de números

que se encuentran dentro de Range y

también que no encontró el número

buscado esta funcionalidad de Else va a

ser sumamente útil cuando nosotros

estemos escribiendo nuestros algoritmos

[Música]

continuando con el mismo ejemplo de la

clase pasada nosotros vimos que podemos

iterar lo que nos devuelve Range 5 en

este caso rage 5 corresponde a un

iterable y un iteraerable es cualquier

cosa con la cual nosotros podamos iterar

Qué quiere decir esto nosotros después

vamos a poder crear nuestros propios

tipos en este caso podría ser por

ejemplo un usuario y podríamos escribir

código de la siguiente manera usuario in

usuarios dos puntos y aquí nosotros

tendríamos una sintaxis muy parecida a

algo como usuario punto ID se acuerdan

yo que cuando les había comentado en el

ejemplo anterior que aquí nosotros

íbamos a suponer que íbamos a estar

buscando un usuario pero que en lugar de

ser un usuario íbamos a buscar por el

número esto es con el objetivo que

después nosotros podamos trabajar con

una sintaxis muy similar a esta pero

esta sintaxis nosotros la vamos a ver

más en el futuro por ahora lo que me

interesa que sepan es que Range 5 es un

iterable y existen muchos iterables

dentro de python por ejemplo también

están las listas y también se encuentran

las duplas entre otras cosas Tú vas a

aprender absolutamente sobre todas estas

cosas Más adelante en el curso así es

que no te preocupes no te aceleres pero

es importante que sepas que es para

poder iterar todas estas cosas y sabes

también que es hiperable los strings es

más Vamos a ver un ejemplo

inmediatamente vamos a eliminar esto y

vamos a escribir Ford de carácter in y

aquí nosotros vamos a colocar unas

comillas dobles Ultimate python y esto

lo vamos a imprimir cada uno de sus

caracteres vamos a guardar y ahora vamos

a ejecutar el código y aquí nosotros

podemos ver cómo se está imprimiendo

cada uno de los caracteres que contiene

el String de Ultimate python

[Música]

hasta ahora nosotros ya sabemos cómo

poder trabajar con elementos que sean

literales en este caso con Range 5 pero

nosotros también podemos utilizar otro

tipo de Loop que nos va a permitir a

nosotros trabajar con algo siempre y

cuando se esté cumpliendo una condición

vamos a verlo vamos al creamos un nuevo

archivo que se va a llamar 07 guión

wild.py Cerramos el explorador también

el archivo anterior y ahora sí vamos a

comenzar supongamos nosotros que tenemos

un número y este va a ser igual a 1 y lo

que nosotros queremos ir haciendo es ir

duplicando este número constantemente

hasta que este sea igual o mayor a 100

entonces lo que nosotros tendríamos que

hacer en el caso de un While Loop

escribimos While y luego de eso nosotros

decimos número sea menor que 100 y ahora

exactamente al igual que el Ford

nosotros tenemos que colocar las

instrucciones aquí anidadas aquí

nosotros vamos a colocar print del

número para poder ver cuál es el número

que nosotros estamos imprimiendo y

después de eso nosotros vamos a hacer un

número Exactamente igual a número por

dos pero nosotros podemos también

utilizar el operador que aprendimos en

un par de videos atrás y es la manera

corta colocando número luego el operador

que nosotros queremos realizar con el

símbolo de igual y esto lo que va a

hacer es que va a estar multiplicando un

número por dos de manera constante Ahora

sí nosotros podemos guardar y nos

venimos aquí a ejecutar nuestro código y

aquí nos vemos como nos entrega el

número de 1 2 3 3 no 48 16 32 64 el

siguiente número cuando lo multiplica

vendría siendo 128 y por eso no lo

muestra porque no logra pasar por esta

evaluación Entonces les voy a explicar

inmediatamente Cómo se ejecuta este

código lo primero que hace es que evalúa

lo que se encuentra acá justamente a la

derecha del While aquí va a empezar a

evaluar si es que esto es verdadero o

falso si es que es verdadero nos va a

permitir a nosotros poder ejecutar el

código que se encuentra dentro de While

como número es menor que 100 nos permite

a nosotros pasar así es que aquí lo que

hace es que imprime el número que

vendría siendo uno y luego a este lo

multiplica por 2 ahora qué es lo que

ocurriría en la última iteración

supongamos que nosotros ahora que

tenemos el número de 64 64 es menor que

100 Sí por supuesto que sí así es que

imprimimos 64 y luego lo multiplicamos

por 2 Entonces ahora tenemos 128 y ya

que tenemos 128 vamos a preguntar 128 es

menor que 100 no por supuesto Así es que

es en ese mismo momento que la ejecución

de nuestro While se detiene y esa es la

razón por la cual nosotros no vemos el

número de 128 en nuestra terminal Ahora

hay un ejemplo sumamente básico de un

Loop While y cuál es bueno nuestra misma

terminal integrada para eso nosotros

podemos pinchar aquí dentro de View y

nos vamos aquí a nuestra terminal

integrada o podemos utilizar también el

atajo aquí lo que nosotros tenemos es

una línea de comandos que nosotros

estamos utilizando de manera constante

para poder estar interpretando los

comandos que ésta está recibiendo vamos

a implementar esto de una manera

bastante sencilla Así que lo que vamos a

hacer ahora es comentar todo esto lo

hacemos con Comando hacia adelante o en

el caso de Windows control Select hacia

adelante y aquí nosotros vamos a hacer

lo siguiente vamos a crear una variable

que se va a llamar Comando y esta Va a

ser igual a un String vacío y aquí

nosotros vamos a preguntar Wild Comando

sea distinto a salir en ese caso

nosotros vamos a ejecutar el código que

se encuentra acá dentro y lo que por no

tenemos que hacer luego de verificar que

el comando que estamos ingresando sea

distinto salir Tenemos que ir a buscar

El Comando que está ingresando el

usuario como hacemos eso bueno eso ya lo

vimos en un vídeo pasado eso lo vamos a

hacer con el comando de input Así es que

nosotros vamos a tener El Comando y

vamos a tomar acá nuestro input Y por

supuesto lo que tenemos que hacer es

colocar en este caso un símbolo de dólar

que es donde nosotros vamos a empezar a

colocar todos los comandos que nosotros

ingresemos Así es que qué es lo que va a

ocurrir cuando nosotros ingresemos algo

dentro de nuestra aplicación este

Comando se le va a asignar a nuestra

variable de comando ahora lo que tenemos

que hacer es imprimirla así que ya vamos

a print Comando y luego de eso ya

Sencillamente podemos guardar y ahora

podemos ejecutar nuestra aplicación

Entonces qué es lo que va a ocurrir

Comando inicialmente es un String vacío

entonces va a cumplir con esta condición

Por supuesto que sí es distinto de salir

y después de eso lo que vamos a ir

haciendo es ir obteniendo el input del

usuario que le vamos a mostrar al

usuario le vamos a mostrar un símbolo de

dólar y lo que el usuario ingrese se lo

vamos a asignar como variable aquí a

comando Luego de eso lo vamos a imprimir

solamente por simpleza del ejercicio no

vamos a interpretar los comandos porque

eso es bastante más avanzado por ahora

solamente nos vamos a quedar imprimiendo

los comandos y luego volvemos a comenzar

nuestro Loop White Así es que ejecutamos

acá nuestro código y Aquí vemos que

tenemos el símbolo de dólar vamos a

pinchar acá en nuestra terminal para

asegurarnos que estamos colocando los

comandos de manera correcta aquí yo voy

a colocar ls vemos que me muestra el s

voy a colocar dir me muestra Deer y aquí

yo voy a colocar salir y ahora vemos

cómo me he salido de mí terminar virtual

de manera inmediata ahora sí podemos

salir ahora qué es lo que ocurriría si

es que yo ejecuto esta misma aplicación

pero yo en lugar de colocar salir todo

con minúscula coloco salir con mayúscula

no funciona vamos a escribir Ahora salir

todo con minúsculas para salir de mi

aplicación y esto es porque si es que

estuvieron prestando atención a la clase

de String un String que contiene todas

sus letras con mayúscula no es lo mismo

que un String que contiene todas sus

letras en minúscula ahora nosotros

podríamos llegar y hacer la evaluación

por ejemplo de que también comando

distinto del String salir todo con

mayúscula pero el problema que nos

dejaría eso es que el usuario podría

escribir salir así O podría escribir

salir de esa manera bastante extraña

entonces que podemos hacer nosotros para

poder solucionar este problema muy fácil

como Comando es un String Nosotros

llamamos al método de lower que lo

aprendimos en unos vídeos anteriores

Ahora sí nosotros podemos guardar vamos

aquí a ejecutar nuevamente nuestra

aplicación y voy a escribir salir como

se me plantee la gana presiono enter y

ahora vemos cómo me imprime primer

String y además cerró mi aplicación de

terminal que acabamos de construir

[Música]

en este vídeo te voy a explicar que son

los Loop infinitos un Loop infinito es

cuando nosotros no tenemos una condición

de salida y Por ende el Loop como en

este caso este White se estaría

ejecutando para siempre y por siempre

ahora eso nosotros lo podemos hacer

Sencillamente cambiando esto que se

encuentra acá y le colocamos el valor de

Trump y ahora si guardamos y nosotros

ejecutamos acá vamos a ver que vamos a

tener nuestra aplicación de terminal

corriendo de manera indeterminada

determinada y Cómo podemos cerrar eso

bueno nosotros lo podemos cerrar

Sencillamente con control c pero aquí lo

que estamos haciendo es que nos está

arrojando un error Más que nada porque

nosotros estamos interrumpiendo la

ejecución de nuestra aplicación Entonces

cómo nosotros podríamos cambiar esta

implementación bueno Sencillamente lo

que podemos hacer es que nos venimos acá

colocamos nuestro If y acá escribimos

Comando punto lower y si es que esto es

Exactamente igual a salir en ese caso

nosotros vamos a llamar nuevamente a la

instrucción de break cuál es el problema

con esto nosotros podríamos estar ejecu

un Loop que consuma una cantidad de

memoria ridícula y eventualmente mi

aplicación Cuando consuma toda la

memoria de la máquina o cuando el

sistema operativo detecte que está

consumiendo demasiado memoria

Sencillamente va a matar nuestra

aplicación y va a dejar de ejecutarse

por esto mismo Nosotros siempre nos

tenemos que preocupar que si es que

vamos a tener algún Loop que va a ser

infinito como este que tiene un Wild que

siempre le agreguemos una condición de

salida ahora por supuesto que con este

ejemplo nosotros ya no necesitamos

nuevamente nuestra variable definida de

comando Así es que nosotros la vamos a

eliminar y con esto ya podemos pasar al

siguiente video que son los loops

anidados

[Música]

para comenzar a ver los loops anidados

lo primero que tenemos que hacer por

supuesto es crearnos un nuevo archivo el

cual va a ser 08 guión Loop guión

anidado.py Cerramos el archivo anterior

cerramos nuestro explorador y aquí

nosotros vamos a comenzar cuando estamos

desarrollando existe el concepto de Loop

anidado vamos a verlo inmediatamente

supongamos ahora que nosotros vamos a

tener un número que se va a llamar j y

este se va a encontrar dentro del Rango

de vamos a decir tres para mantenerlo

cortito y justamente aquí adentro

tenemos nuevamente otro Loop pero que

aquí también va a ser un número pero en

lugar de llamarlo J este se va a llamar

K Este es el típico ejemplo que te

enseñan en las universidades en los

bootcam en todos lados y en la manera

más simple de poder entender los loops

anidados supongamos ahora que yo voy a

tener un Rango de dos y aquí yo lo que

quiero hacer es imprimir los números que

este me está arrojando así que vamos a

colocar acá print voy a aprovechar de

utilizar los strings formateados Así es

que voy a escribir F comillas dobles

aquí voy a colocar los paréntesis de

llaves y dentro de cada uno voy a

colocar j y K Ahora sí voy a guardar y

vamos a ejecutar nuestra aplicación para

ver qué es lo que nos devuelve Esto

entonces aquí nosotros tenemos una

coordenada que es la 00 después tenemos

01 después tenemos 1 0 después Tenemos

uno uno después tenemos dos cero y

después tenemos dos vamos a explicar

inmediatamente Por qué está ocurriendo

esto cuando nosotros estamos ejecutando

Este Ford el de la línea 1 lo que está

ocurriendo es que está empezando a

ejecutar nuestro código de arriba hacia

abajo eso nosotros ya lo sabemos Pero

cuál es la primera instrucción que es TV

bueno ve el Ford que aparece acá en la

línea 2 Entonces qué es lo que va a

hacer la primera vez que está

ejecutándose el primer Ford este va a

tener el valor de Cero y el Ford que

tiene acá en la línea 2 K también va a

tener el valor de 0 Entonces vamos a

tener a j que va a ser igual a cero y

vamos a tener acá que es igual a cero y

luego vamos a ir a línea 3 donde vamos a

imprimir j y vamos a imprimir K que en

este caso son

ahora vamos nuevamente arriba pero

nosotros no vamos a ir en este caso a

nuestro primer Ford nosotros vamos a ir

nuevamente a nuestro segundo foro ahora

este foro es la segunda vez que se

ejecuta pero el Ford de arriba sigue

siendo la primera vez que se ejecuta Por

ende J sigue siendo 0 pero ahora K ya no

es cero ahora vale 1 Entonces cuando

este se imprima vamos a tener que J vale

cero y vamos a tener que K vale 1 ahora

vuelta nuevamente arriba a nuestro

segundo Ford hemos terminado de iterar

absolutamente todos los elementos que se

encuentran dentro de este Range Por

supuesto que sí así que ya podemos salir

de este foro o llegamos al final no hay

nada más entonces qué es lo que hacemos

volvemos a subir nuevamente a nuestro

primer foro entonces J ya no vale cero J

ahora vale 1 y K vuelve a valer 0 vamos

a recortar esto y aquí lo tenemos en

cero Entonces vamos nuevamente acá abajo

vamos a imprimir los valores que es lo

que me imprime me imprime uno y cero y

así sucesivamente hasta que finalmente

obtenemos el valor de

2,1 este porque aparece acá el de la

línea número 1 se conoce como outer Ford

outer también Loop y el Ford que se

encuentra acá dentro se conoce como

Inner for o también Inner Loop Ahora

cuando ustedes estén escribiendo código

tienen que tener mucho mucho cuidado

porque por lo general cuando se están

trabajando con datos reales de una

aplicación real nosotros nunca vamos a

estar trabajando con cinco datos ni

tampoco vamos a estar trabajando con 100

no Por lo general nosotros vamos a estar

trabajando con el orden de los miles a

los millones lo voy a simplificar acá

con un uno y un m pero vamos a estar

trabajando con los millones de datos

Entonces si es que nosotros realizamos

este tipo de operación con millones de

datos vamos a tener algo que se va a

estar realizando durante bastante tiempo

Así es que si nosotros vamos a utilizar

estos Ford dentro de un Ford tienen que

tener un fin único y exclusivo no

podemos utilizarlos porque nos parezca

entretenido o Porque queremos Buscar así

porque sí vamos a tratar siempre de no

utilizar un Ford dentro de un foro ahora

esto no quiere decir no los utilicen si

es que lo necesitan utilizar utilícenlo

pero traten de que esto no sea la

primera alternativa cuando ustedes están

pensando en solucionar algún problema

con programación

[Música]

en este vídeo quiero que resuelvas un

ejercicio que te voy a dar ahora mismo

lo primero que nosotros tenemos que

hacer es construir una pequeña

aplicación que va a ser una calculadora

un poco más compleja que la anterior

Pero va a ser una calculadora Al fin y

al cabo y tiene que hacer lo siguiente

esta Va a ser una aplicación interactiva

donde nosotros vamos a tener que estar

constantemente escribiendo en la

terminal esta aplicación lo que tiene

que hacer es verificar si es que

nosotros ya hemos ingresado un número

antes en el caso que no haya sido

ingresado un número le vamos a indicar

al usuario que tiene que ingresar un

número si es que ya ha ingresado un

número desde antes Entonces le vamos a

pedir al usuario que ingrese una

operación vamos a dejarlo solamente de

manera corta en el caso que el usuario

no haya ingresado un número y le hayamos

solicitado ingresar un número después de

esto Nosotros le vamos a indicar que

tiene que ingresar la operación aquí le

vamos a colocar no después de ingresar

la operación Nosotros le vamos a pedir

al usuario que ingrese otro número y

después de esto nosotros vamos a mostrar

los resultados una vez que hayamos

mostrado el resultado este resultado

nosotros lo vamos a guardar como el

primer número pero vamos a enviar al

usuario para que ingresen nuevamente una

operación de esta manera el resultado se

guarda como el primer número luego

ingresamos la operación y el resultado

se le realiza la operación con el

siguiente número ingresado vamos a verla

cómo funciona aquí nosotros ya tenemos

la aplicación funcionando y nos indica

Bienvenidos a la calculadora para salir

escribe salir y las operaciones que

puedes utilizar son suma multidis y

resta esta nosotros tenemos que

escribirlas entonces Vamos a ingresar el

primer número vamos a indicarle que es

12 luego de esto le vamos a indicar suma

después de esto le tenemos que Con qué

número lo vamos a sumar yo le voy a

indicar que lo voy a sumar con 28 y esto

nos entrega como resultado 40 Ahora nos

indica ingreso operación yo le voy a

decir dip ingresa siguiente número le

voy a indicar 10 me está indicando ahora

que el resultado es 4 después le voy a

indicar multi y voy a decirle que esto

me lo tiene que multiplicar por cinco el

resultado es 20 después de 20 le voy a

indicar resta y el siguiente número va a

ser 10 Entonces mi resultado final va a

ser 10 Ahora yo voy a escribir salir y

esto me va a cerrar de manera exitosa la

aplicación ahora lo que tienes que hacer

es intentar resolver este ejercicio y

luego de que lo haya resuelto nos vamos

a ver en el siguiente vídeo y te voy a

explicar cómo se soluciona esto

[Música]

en este vídeo vamos a resolver el

ejercicio de la calculadora Así es que

nos vamos a BS code y aquí nosotros lo

que haremos será crear un nuevo archivo

dentro de nuestra carpeta de control de

flujo que de hecho no lo cree dentro de

la carpeta control de flujo ahora sí que

se va a llamar 09

calculadora punto p y ahora Cerramos el

archivo anterior Cerramos el explorador

y comenzamos lo primero será entregarle

los mensajes de Bienvenida al usuario

Bienvenidos a la calculadora imprimimos

otro mensaje para salir escribe salir y

después las operaciones son suma resta

multi y DIF ahora nosotros podemos crear

nuestro Loop infinito que va a funcionar

para que nosotros podamos estar

constantemente recolectando información

del usuario Así es que acá escribimos

Wild true dos puntos en este momento

nosotros vamos a tener que guardar el

resultado o en este caso el primer

número que nos ingresa el usuario dentro

de una variable Pero eso nosotros no lo

podemos guardar acá ya que si nosotros

la inicializamos como un String vacío

directamente dentro de nuestro While

esto quiere decir que cada vez que

nosotros tengamos que ingresar

nuevamente la operación necesariamente

resultado va a quedar como un String

vacío Así es que la solución a esto es

moverlo a de nuestro Loop While ahora

nosotros podemos realizar la operación

de If not resultado esto quiere decir If

not Recuerden que esto va a evaluar en

falso siempre y cuando tenga un valor

false y los valores falsi son los

strings vacíos Non y también por

supuesto falso y también el número cero

ahora si nosotros no tenemos el

resultado tenemos que pedirle al usuario

que ingrese un resultado Así es que acá

nosotros escribimos resultado input

ingrese número dos puntos espacio Yo acá

estoy colocando un dos puntos y un

espacio para que sea más fácil de leer

la aplicación cuando nosotros estemos

interactuando con ella y fíjense que yo

no la estoy transformando inmediatamente

en un entero Porque primero quiero

validar si es que el usuario escribió

salir entonces justamente después de

esto vamos a escribir nuevamente If

resultado punto lower es igual a salir

entonces acá nosotros vamos a escribir

break ahora nosotros ya tenemos una

pequeña aplicación funcionando que se va

a estar ejecutando constantemente A

menos que nosotros escri salir pero si

nosotros ingresamos cualquier otra cosa

que no sea salir esto lo que hará será

quedarse en un Loop infinito ya que no

va a entrar en esta condición podemos

validar eso creando acá un print

infinito ya que Sencillamente coloco un

break para que mi aplicación no se quede

iterando de manera eterna Ahora sí vamos

a ejecutar nuestra aplicación Vamos a

ingresar un número va a ser 12 lupin

infinito salió menos mal con nosotros

colocamos el break vamos a ejecutarla de

nuevo Aquí vamos a escribir salir y

vemos que salió y no nos mostró el

mensaje de Loop infinito Vamos a

continuar ahora podemos Borrar esto y

ahora le vamos a pedir al usuario que

ingrese la operación Así es que vamos a

llamar a up va a ser igual a input

ingresa operación dos puntos espacio

Aquí vamos a volver a preguntar si es

que punto lower es igual al String de

salir entonces lo que haremos será salir

de la aplicación justamente después de

verificar si es que el resultado o el

primer número que ingresó el usuario es

salir justamente después de esto

nosotros vamos a transformar el número a

un número Así es que después de este

break presionamos enter escribimos

resultado va a ser igual a int resultado

de esta manera nosotros vamos a validar

si es que el usuario ingresó el String

de salir ahí nosotros terminamos nuestra

aplicación y si no ingresó el String de

salir nosotros lo vamos a transformar a

un entero ahora bajamos un poco y ahora

vamos a tener que solicitarle al usuario

que ingrese el siguiente número Así es

que acá nosotros vamos a escribir n2 que

vendría siendo el siguiente número input

ingresa siguiente número dos puntos

espacio y aquí nosotros vamos a hacer

exactamente la misma validación que

antes con operación Así es que esta

línea nosotros la podemos copiar la

vamos a pegar y cambiamos este op por n2

y guardamos en el caso que n2 no sea el

String de salir aquí nosotros vamos a

reemplazar el valor de n2

transformándolo a un número entero y

ahora vamos a hacer algo quizás un poco

tedioso pero es lo que necesitamos hacer

para resolver nuestra aplicación con lo

que hemos aprendido hasta ahora aquí

nosotros vamos a escribir If up punto

lower es igual a suma entonces lo que

haremos será guardar el resultado con el

operador corto y aquí Nosotros le vamos

a pasar el siguiente número Entonces

estamos reemplazando resultado pero

también le estamos sumando lo que nos

está indicando en el siguiente número

que capturó el usuario ahora podemos

duplicar esta línea vamos a cambiar este

If por elif Y en lugar de preguntar si

es que el String es igual a suma vamos a

preguntar si es que este es igual a

resta y de llegar a ser así nosotros

cambiamos este símbolo de más por el

símbolo de menos luego haremos

exactamente esto mismo dos veces la

siguiente vez va a ser con multi Por

supuesto que acá tenemos que cambiar al

menos por multiplicación y la siguiente

vez en vez de ser recta va a ser DIF y

cambiamos el símbolo de menos por el

Slash hacia adelante ahora vamos a

aprovechar de realizar una pequeña

validación vamos a escribir acá Else

vamos a imprimir en pantalla que como el

usuario no ingresó ninguna de estas

operaciones lo que haremos será

entregarle un mensaje y luego terminar

nuestro programa operación no válida y

continuamos con un break finalmente ya

le podemos mostrar el valor calculado al

usuario aquí nosotros vamos a utilizar

un String forma Así es que utilizamos la

f seguido de las comillas dobles y acá

escribimos el resultado es abrimos las

paréntesis de llaves y escribimos acá

resultado ahora podemos guardar

revisamos que se encuentre todo bien y

que no nos esté mostrando ningún error

vemos que estamos bien así es que ahora

ejecutamos nuestra aplicación y acá nos

está indicando ingrese número Vamos a

ingresar el número 12 ingresa operación

suma ingresa siguiente número 32 y vemos

que el resultado es 44 ahora vamos a

multiplicar esto por 2 Así es que

escribimos multi y colocamos el número 2

ya ahí nos está mostrando 88 ahora lo

que haremos será dividir y vamos a

dividir por el número 8 y vemos ahora

que tenemos el valor de 11 ahora vamos a

escribir salir y vemos que nuestra

aplicación se cierra con éxito esta

aplicación Por supuesto que no es

perfecta ya que si es que nosotros

llegásemos a escribir un String en lugar

de números cuando nosotros estamos

solicitandole números al usuario Como

por ejemplo acá y también cuando le

estamos preguntando por el valor de n2

cuando nosotros tratemos de transformar

el input del usuario a un entero nuestra

aplicación se caerá y nos entregará un

mensaje de error para que nosotros

podamos validar estas excepciones vamos

a tener que continuar con el curso hasta

que lleguemos a la parte de errores o

excepciones en python pero eso ya es

materia de otra sección Lo importante es

que hayas aprendido a utilizar todos los

operadores que hemos aprendido hasta

ahora como por ejemplo la definición de

variables Tenemos también un Loop

infinito También tenemos un If Tenemos

también estos operadores lógicos estamos

solicitando input al usuario estamos

utilizando también el comando de break

estamos transformando un tipo de dato en

otro y estamos utilizando también If

elif Else Y por supuesto que también

estamos imprimiendo los datos al usuario

en nuestra siguiente sección vamos a ver

las funciones en profundidad

[Música]

en esta sección vas a aprender a

utilizar las funciones y lo primero que

tienes que saber es porque tienes que

aprender a utilizar las funciones cuando

nosotros construimos aplicaciones en el

mundo real nuestras aplicaciones nos

vamos a dar cuenta que estas van a

consistir de el orden de los cientos

hasta los miles o hasta incluso las

decenas de miles de líneas de código y

si nosotros tratáramos de escribir

absolutamente todo eso dentro del mismo

archivo o incluso en archivos separados

la verdad es que la vida y la existencia

se nos va a complicar muchísimo además

si es que nosotros por alguna razón

tuviésemos que realizar algún cambio de

alguna porción de código que hace

Exactamente lo mismo en otras partes de

nuestra aplicación vamos a tener que ir

a actualizar absolutamente todas esas

partes de la aplicación Entonces qué es

lo que viene a salvar este mismo

problema las funciones vamos a ver cómo

nosotros podemos crear nuestras propias

funciones para eso nosotros nos vamos a

venir nuevamente acá a vs code y vamos a

crear una nueva carpeta y acá le vamos a

dar el nombre de funciones enter y

dentro de esta vamos a crear nuestro

primer archivo que se va a llamar 01

guión funciones punto py y una vez que

nosotros nos encontremos acá dentro

vamos a cerrar el explorador y vamos a

hacer un recordatorio de las funciones

que ya hemos visto hasta ahora nosotros

conocemos ya la función de print que

está lo que hace es que imprime un

mensaje y aquí Nosotros le indicamos el

mensaje de Hola mundo y esto nosotros ya

sabemos qué es lo que va a hacer lo que

va a hacer es que nos va a imprimir en

la terminal o en la consola el String de

Hola mundo ahora vamos a crear nuestra

propia función para eso vamos a eliminar

esto y vamos a escribir Def espacio el

nombre de nuestra función vamos a

indicar que va a ser Hola después de

esto sumamente importante tenemos que

colocar abre y cierra paréntesis y

seguido de eso le vamos a colocar los

dos puntos después de eso nosotros vamos

a presionar enter y todo el contenido de

nuestra función nosotros lo vamos a

tener que colocar y dentado tal cual

como nosotros lo hicimos por ejemplo con

el Ford con el While y con las otras

instrucciones ahora importante para

definir la función tenemos que utilizar

la palabra reservada de Def Luego de eso

tenemos que indicar el nombre que

nosotros le queremos indicar a esta

función y Por ende como nosotros la

vamos a llamar en este caso nuestra

función se llama Hola seguido de eso

nosotros tenemos acá un abre y cierra

paréntesis que en el siguiente vídeo

vamos a ver por qué va ese abre y cierra

paréntesis y después de eso nosotros

tenemos unos dos puntos aquí nosotros

justamente dentro de nuestra función

vamos a escribir print a abrirse

paréntesis y acá vamos a pasarle el

String de Hola mundo vamos a colocar

otro print y aquí Nosotros le vamos a

indicar el String de Ultimate python

vamos a guardar esto y después de esto

nosotros lo que queremos hacer es Llamar

a nuestra función Por qué Porque si

nosotros tratáramos de ejecutar nuestra

función inmediatamente no va a ocurrir

absolutamente nada Es más hagámoslo

ahora voy a pinchar acá y vemos que

claro se está ejecutando mi archivo pero

no está ocurriendo absolutamente nada

Por qué Porque cuando yo creo una

función de esta manera yo lo que en

verdad estoy haciendo es que estoy

creando un bloque de código que va a

quedar guardado por ahí y no va a ser

llamado hasta que yo no diga que lo voy

a llamar así es llamémoslo lo primero

que tenemos que hacer es escribir acá el

String de Hola abre y cierra paréntesis

Y esto es lo que hará será Llamar a

nuestra función si es que nosotros

solamente escribiéramos Hola y no

escribimos absolutamente nada más y

guardamos nos vamos a dar cuenta que

este nos va a arrojar un error y de

hecho el error que nos está indicando Es

que esto que nosotros estamos redactando

acá es completamente sin sentido Por qué

Porque no la estamos ejecutando Bueno

ejecutamos entonces para ver qué es lo

que ocurre colocamos nuevamente el abre

y cierra paréntesis y algo sumamente

importante que ocurrió cuando nosotros

guardamos nuestro archivo yo lo que

había hecho es que había colocado el

llamado mi función justamente una línea

después entonces que lo que estaba

ocurriendo yo tenía la definición de mi

función tenía un espacio en blanco en la

línea 4 y finalmente llamé a la función

acá en la línea 5 y después la volví a

llamar acá en la línea 6 pero cuando yo

grabé esta Se movió además una línea más

hacia abajo entonces me dejó dos líneas

en blanco la número 4 y la número 5 Esto

va a ocurrir siempre cuando nosotros

tengamos activado y también guardemos

Pep 8 cuando nosotros tenemos activado

p8 este lo que va a hacer es que nos va

a colocar el código de una manera bonita

según la sugerencia de p8 Entonces estos

dos espacios que se encuentran acá en

blanco es la sugerencia de pep8 y porque

se está modificando el código porque

nosotros lo activamos para que nuestro

link se ejecutará una vez que nosotros

guardáramos nuestro archivo ahora lo que

vamos a hacer es que vamos a ejecutar

nuestro código a ver qué es lo que

ocurre aquí nosotros tenemos que se está

mostrando en pantalla el String de Hola

mundo Ultimate python y después se

vuelve a mostrar Hola mundo y Ultimate

python si nosotros quisiéramos que esto

apareciera Solamente una vez basta con

que eliminemos el segundo llamado a la

función guardemos y volvamos a ejecutar

y aquí nosotros vemos que tenemos el

String de Hola mundo y el de Ultimate

python

[Música]

hasta el momento tenemos esta función

que lo que hace es Sencillamente

imprimir en pantalla Hola mundo y

también Ultimate python Pero qué me

dirías tú si yo te digo que esta misma

función nosotros la podemos reutilizar

una y otra y otra vez pero que imprima

cosas distintas Como por ejemplo en

lugar de decir hola mundo Ultimate

python que diga hola mundo bienvenido y

tu nombre vamos a cambiar esto mismo por

bienvenido y vamos a decir que es

Nicolás ahora si es que yo imprimo

exactamente esto voy a ver que me va a

mostrar Hola mundo y bienvenido Nicolás

pero no importa todas las veces que yo

llame esto siempre me va a estar

mostrando el mensaje de Hola mundo y

bienvenido Nicolás Este es el momento

donde nosotros tenemos que ver los

argumentos y parámetros de una función

Entonces lo primero que nosotros tenemos

que hacer es entregarle a esta función

una variable que nosotros podamos

utilizar en el contexto de la misma

función de manera que yo pueda utilizar

la variable en cualquier parte de acá y

que este me imprima esa variable en este

contexto de esta función entonces para

eso nosotros vamos a recibir una

variable que se va a llamar nombre en

este caso esta variable que aparece acá

que se llama nombre nosotros vamos a

poder utilizarla en el contexto de

nuestra función No la vamos a poder

utilizar afuera o sea acá nosotros no la

podemos utilizar solamente la vamos a

poder utilizar en el contexto de la

función ahora como Esto va a ser una

variable nosotros vamos a poder

imprimirla Así es que vamos a imprimirla

acá mismo en el segundo print vamos a

cambiar este String a un String

formateado y vamos a colocar aquí la

variable de nombre y vamos a guardar

ahora lo que ocurrió es que cuando

nosotros estamos llamando la función nos

la está subrayando en rojo y esto es

porque todas estas variables que

nosotros estamos utilizando en las

funciones son

obligatorias lo que quiere decir que

cada vez que nosotros llamemos a esta

función vamos a tener que pasarle un

valor para que este sea utilizado en

lugar de esta variable Así que vamos a

hacer eso aquí mismo donde nosotros

estamos Llamando a nuestra función de

Hola tal cual como nosotros lo hacemos

con la función de print vamos a pasarle

un valor justamente entre los paréntesis

en este caso yo le voy a indicar que el

valor que le voy a pasar es el String

Nicolás y ahora si es que yo ejecuto mi

aplicación nuevamente vamos a ver que me

está mostrando Hola mundo bienvenido

Nicolás vamos a llamar nuevamente esta

función vamos a duplicar esto y vamos a

indicar que la segunda vez que lo

llamamos va a decir Chanchito feliz

ahora vamos a guardar y vamos a ejecutar

nuevamente nuestra aplicación y aquí

nosotros vemos que nos está mostrando

Hola mundo bienvenido de Nicolás y

después nos está mostrando Hola mundo y

bienvenido Chanchito feliz ahora aquí

viene la parte interesante que es donde

la gran mayoría de los desarrolladores

se equivoca y es en como nosotros

nombramos estos valores que le estamos

pasando a la función o también como

nombramos a estos valores que nosotros

estamos recibiendo dentro de la función

Esto suena un poco confusos vamos a

explicarlo de esta manera cada vez que

nosotros hacemos referencia a una

variable dentro de una función Como por

ejemplo aquí podría ser nosotros decimos

que estamos haciendo uso de sus

parámetros entonces acá donde nosotros

estamos imprimiendo nombre esto es un

parámetro de la función en este caso el

nombre del parámetro es nombre entonces

este parámetro se llama nombre y acá

solamente en este contexto se llama

parámetro por el contrario cuando

Nosotros llamamos a la función acá y

esta Por supuesto que deja de ser una

variable y empieza a tener un valor es

cuando nosotros en lugar de referirnos a

estos como parámetros nos referimos a

estos como

argumentos Entonces cuando Nosotros

llamamos a una función y le pasamos a

esta un valor estamos pasándole un

argumento pero por el contrario si

nosotros estamos en la función y estamos

utilizando el nombre de la variable que

en este caso se llama nombre en este

caso ya no se llama argumento se llama

parámetro Y esta es la principal

diferencia de ahora en adelante nos

vamos a referir en todo este curso como

argumento al valor que le estamos

pasando y como parámetro al nombre de la

variable dentro la función y ahora viene

también algo muy importante que es lo

que ocurre si es que yo le quiero pasar

más de un valor a esta función en este

caso Quiero que mi función tenga más de

un parámetro cómo hacemos eso lo

separamos por coma vamos a venir acá y

después de nombre vamos a colocar una

coma y vamos a colocar el parámetro de

apellido ahora nuestras funciones más

abajo cuando las estamos llamando está

por supuesto que no se estará arrojando

un error Por qué Porque falta que le

pasemos el apellido o múltiples

argumentos en ese caso los tenemos que

separar por coma Así es que yo voy a

colocar acá coma espacio y nuevamente

como un String shurman y vamos a dejar

Chanchito feliz como si estos fuesen

absolutamente dos strings completamente

separados y los vamos a separar acá por

una coma ahora vamos a guardar y vemos

que nuestra aplicación ya no está

teniendo un error pero si tenemos acá

una advertencia y porque es tenemos esta

advertencia porque tenemos una variable

en este caso un parámetro que no estamos

utilizando que se llama bellido Entonces

coloquemos el apellido Así que nos

venimos nuevamente y vamos a imprimir

apellido y guardamos Ahora sí vamos a

ejecutar nuestra aplicación y vemos

ahora como tenemos el String de Hola

mundo bienvenido Nicolás schumann Hola

mundo bienvenido Chanchito feliz y cómo

se llamaba cada uno de estos Cómo se

llama esto Esto se llama parámetro y

cómo se llaman estos de acá esto se

llaman argumentos de nuevo parámetros

argumentos parámetros coloquemos una p

argumentos con lo que hemos una

[Música]

ahora vamos a ver cómo una función puede

utilizar parámetros de manera opcional

vamos a verlo aquí nosotros tenemos

exactamente la misma función que

nosotros teníamos antes la que definimos

que se llama Hola y recibe un nombre y

también recibe un apellido ahora qué es

lo que ocurre si nosotros por alguna

razón eliminamos el segundo argumento

que le estamos pasando a esta función

bueno en este caso nos va a arrojar un

error Entonces como nosotros podemos

hacer para que esta función utilice un

valor por defecto en el caso que

nosotros no se lo pasemos como está

ocurriendo en esta función de Hola Bueno

en ese caso nosotros nos vamos a venir

para acá y lo que haremos será colocar

justamente a la derecha del parámetro de

apellido vamos a colocar un igual y le

vamos a indicar con comillas dobles Cuál

es el valor que queremos que éste tome

por defecto vamos a indicar que este va

a ser feliz ahora vamos a guardar ahora

podemos ver que la función en la línea

número 7 ya no nos está arrojando ningún

error y lo que está ocurriendo en este

caso es que cuando nosotros no le

pasemos un argumento a la función el

parámetro acá va a tomar el valor que

nosotros le indicamos que es por defecto

o sea va a ser feliz Pero si por

contraparte nosotros sí le entregamos un

argumento a la función esta no va a

utilizar el valor por defecto de feliz

sino que va a utilizar el valor que

nosotros le estamos pasando como

argumento a la función vamos a ver esto

mismo en acción entonces en base a lo

que yo les dije la primera función la de

Nicolás shurman debería imprimir Hola

mundo bienvenido Nicolás schumann pero

por contraparte la función de la línea

número 7 que nosotros Solamente le

estamos pasando el argumento de

Chanchito debiese imprimir Hola mundo

bienvenido aquí va a imprimir Chanchito

pero acá en apellido como nosotros no le

pasamos un segundo argumento va a

imprimir feliz y ahora asegurarnos que

hemos guardado el archivo vamos a

ejecutarlo acá y aquí nosotros tenemos

Hola mundo bienvenido Nicolás shurman

Hola mundo bienvenido Chanchito feliz de

esta manera nosotros podemos tener

funciones con parámetros opcionales

[Música]

en este mismo ejemplo que definimos acá

donde tenemos esta función de Hola esta

función está utilizando los parámetros

de nombre y también de apellido y más

adelante nosotros en el código lo que

estamos haciendo es Llamar a esta

función y la estamos pasando el primer

argumento que es el nombre y el segundo

argumento que es el apellido Pero qué es

lo que ocurriría si nosotros por alguna

razón estamos mucho más avanzados en el

código vamos a utilizar la función de

Hola Como por ejemplo acá en la línea 17

y también le queremos pasar un nombre y

un apellido pero la verdad no tenemos

muy claro En qué orden pasarle el nombre

y En qué orden pasarle el apellido qué

es lo que pasa si yo de pronto le quiero

pasar primero el apellido y después le

quiero pasar el nombre en este caso

shurman Nicolás bueno nosotros podemos

hacer funcionar esta ejecución de todas

maneras si es que nosotros le asignamos

un nombre al argumento que le estamos

pasando Qué quiere decir esto que

nosotros llamemos a esta función de Hola

le pasemos el apellido pero que le

indiquemos necesariamente a python que

Oye esto se encuentra acá es el apellido

Así que tienes que utilizarlo como tal

como apellido y esto que se encuentra

acá es el nombre así es que yo quiero

que lo utilices como el nombre Cómo

podemos hacer esto mismo Bueno muy fácil

Nosotros nos venimos justamente acá al

comienzo del argumento y le tenemos que

indicar qué parámetro va a ser este o

sea aquí yo escribo apellido igual y eso

es lo que hace es que me deja el segundo

argumento como un error Por qué Porque

cuando yo activo esta opción de los

argumentos nombrados necesariamente voy

a tener que nombrar todos los otros

argumentos con los cuales yo estoy

llamando a la función O sea que yo aquí

a Nicolás le tengo que colocar nombre

igual y ahora yo voy a guardar y voy a

ejecutar nuevamente mi aplicación y Aquí

vemos que tenemos nuevamente a Nicolás y

shurman y ahora para asegurarnos de que

esto está funcionando correctamente voy

a cambiar el valor del argumento nombre

por volks y guardo ahora ejecutamos

nuevamente nuestra aplicación y aquí

nosotros tenemos bienvenido bold Gump

[Música]

en nuestro último vídeo vimos como

nosotros podemos pasarle argumentos

nombrados a nuestras funciones en este

caso tenemos apellido y también tenemos

nombre Pero qué es lo que pasa si

nosotros queremos pasarles múltiples

múltiples múltiples argumentos a una

función y la verdad es que no sabemos

Cuántos estos van a llegar a recibir

bueno para eso podemos utilizar la

instrucción de xarx vamos a verla como

les pueden decir algunos para eso nos

venimos nuevamente acá al editor vamos a

crear un nuevo archivo que se va a

llamar

xarx.pe y le vamos a anteponer un 02

Ahora sí vamos a cerrar el archivo

anterior y cerramos nuestro editor aquí

adentro vamos a definir una función que

se va a llamar suma y esta por supuesto

va a recibir dos argumentos dos

parámetros el primero va a ser a y el

segundo va a ser B Entonces nosotros acá

vamos a colocar un print a más b y

tenemos que pasarlos a la función como a

y b perfecto y ahora lo que tenemos que

hacer es ejecutar esta función vamos a

llamar a suma y le vamos a pasar los

valores de 2 y 5 ahora vamos a guardar y

vamos a ejecutar nuestra aplicación y

aquí nosotros vemos que nos está

entregando el valor de 7 Sí

definitivamente python sabe sumar ahora

qué es lo que pasa si nosotros queremos

pasarle un siguiente argumento por

ejemplo recibir un parámetro c Bueno en

este caso nosotros necesariamente

tendríamos que venir aquí a nuestra

función y pasarle la c pero esto sería

contraproducente Porque después

significa que yo tengo que ir a

modificar esta función nuevamente Así es

que aquí yo le paso 7 Pero qué es lo que

pasa si yo quiero reutilizar esta

función de nuevo y no quiero andar

sumando tres números siempre quiero

sumar 2 o de pronto quiero no sumar dos

sino que quiero poder sumar dos ocho

siete cincuenta y cuatro muy bien 45 32

y así sucesivamente bueno en este caso

estas funciones no me van a funcionar no

se van a ejecutar de hecho me está

arrojando error afortunadamente nosotros

tenemos una nueva instrucción que vamos

a ver ahora que nos va a permitir a

nosotros poder tomar absolutamente todos

los argumentos que queramos en el

llamado de una función Así es que nos

vamos a venir para acá vamos a eliminar

todo esto y vamos a darle un en plural

para que nosotros sepamos que estamos

hablando de muchos elementos y aquí yo

le voy a indicar que se va a tratar de

el parámetro números y este como pueden

ver se encuentra en plural además de eso

nosotros tenemos que entregarle una

instrucción que es mágica que va a hacer

que todo esto funcione y es el asterisco

justamente al comienzo del nombre de

nuestro parámetro Entonces nosotros le

indicamos el nombre al parámetro que

queremos utilizar y después de eso le

indicamos con un asterisco que esto se

va a tratar de algo que es iterable Y en

este caso en esta iteración nosotros

vamos a tomar en consideración

absolutamente todos los números que le

estamos pasando a esta función que

quiere decir esto La primera vez números

va a ser un iterable se acuerdan que

vimos los iterables Bueno aquí vamos a

tener un iterarable que va a ser 25 y 7

va a contener absolutamente todos estos

valores no se preocupen por esta

sintaxis la vamos a ver más adelante en

el curso pero preocúpense de entender

que estos son iterables y como todo Buen

itera nosotros les vamos a poder aplicar

un Ford y de esta manera es como

nosotros vamos a recorrer todos los

números que se encuentran dentro de los

argumentos de una función y eso También

incluye Este ejemplo que se encuentra

acá aquí nosotros vamos a tener un

iterable que va a contener dos ocho

siete cuarenta y cinco y treinta y dos y

todos estos van a ser asignados al

parámetro de números Así es que ahora

nos podemos devolver acá vamos a

eliminar esto y aquí es donde nosotros

podemos llamar Ford número y números dos

puntos vamos a crear una variable que se

va a llamar resultado y está

inicialmente va a valer cero y lo que

haremos será ir sumándole cada uno de

los números a esta variable de resultado

Así es que acá nosotros escribimos

resultado Esto va a ser igual a más

igual número y esta parte es súper

importante nosotros después lo que

tenemos que hacer es presionar enter y

si se fijan el editor me va a dejar la

hidratación acá yo no quiero dejar la

tentación ahí porque si es que yo dejo

la hidratación acá se va a ejecutar la

siguiente instrucción que yo escriba

Tantas veces como elementos nosotros le

estamos pasando a través de los

argumentos Así es que yo voy a colocar

acá un Backstage y aquí es donde yo voy

a imprimir la variable que me interesa

que en este caso es el resultado y ahora

sí voy a guardar como pueden ver ahora

absolutamente todas las funciones están

funcionando o no no quiero estar

funcionando es que ya no me están

arrojando ningún error pero si nosotros

ahora llegáramos y ejecutáramos nuestro

código vamos a ver que nos está

entregando los valores finales

dependiendo de todos los argumentos que

le pasamos a esta función cuando la

llamamos ya algo sumamente importante

preocúpense mucho de la hidentación

Porque si es que yo lo dejo y dentado

así tal cual como ustedes lo están

viendo ahora justamente dentro del Ford

esto lo que hará será Sencillamente

imprimirme el resultado muchas muchas

muchas muchas veces y después ustedes se

van a andar preguntando por qué su

aplicación no funciona de manera

correcta y bueno es por la indentación

en este caso tienen que colocarla

exactamente en el mismo nivel de

resultado y de Ford Así es que

eliminamos la alimentación para que

quede justamente Al mismo nivel ahora

volvemos a ejecutar y ahora tenemos

nuevamente los resultados correctos

[Música]

en el vídeo pasado vimos Cómo podemos

trabajar con parámetros que utilizan un

asterisco al comienzo antes de darle el

nombre y que esto transforma a nuestros

parámetros vamos a escribir acá para

enterables Y en este vídeo nosotros

vamos a ver cómo podemos trabajar con

los keyword arguments que es una manera

de cómo nosotros podemos empaquetar

absolutamente todos los parámetros pero

en solamente un parámetro para eso vamos

a abrir nuevamente nuestro explorador y

vamos a escribir acá 03 guión

kwx.pey y kw viene de Keyboard la k

viene de la k de keyword y la W viene de

Así es de la W de Keyboard y arts que

aparece acá es por los argumentos Ahora

sí nosotros nos vamos a venir acá y

vamos a definir una función que se va a

llamar get- bajo producto y vamos a

colocarle un abre y cierra paréntesis

vamos a aprovechar de cerrar nuestro

explorador y también el archivo anterior

acá nosotros vamos a imprimir nuestro

parámetro que se va a llamar datos así

que nosotros tenemos que colocar datos

justamente acá arriba y aquí es donde

empieza la magia en nuestro vídeo

anterior nosotros vimos que teníamos que

utilizar el asterisco cuando nosotros

estamos trabajando con los keywords

arguments o los kw arts nosotros tenemos

que agregar otro asterisco más y ahora

sí nosotros ya podemos empezar a

trabajar con esta misma función Ahora sí

lo que haremos será nosotros es llamar

get product y aquí es donde nosotros le

tenemos que empezar a pasar todos los

argumentos a esta función que éste vaya

a utilizar Pero esto se pasan bajo

demanda Qué quiere decir esto yo lo que

puedo hacer es pasarle acá un argumento

que se va a llamar por ejemplo ID yo le

voy a pasar un primer argumento que va a

ser por ejemplo un String de ID pero si

es que yo llego a guardar Esto me va a

arrojar un error y la razón de esto es

porque yo le tengo que indicar a python

que cada vez que yo llamo a una función

que en este caso es la de get product

que esté utilizando un keyword arts

tengo que indicarle sí o sí el nombre

del parámetro en este caso yo le voy a

indicar que el nombre del parámetro va a

ser ID yo ahora cuando guardo me voy a

dar cuenta de que esto ya no me está

arrojando un error vamos a ejecutar

nuestra aplicación para ver qué es lo

que nos arroja y aquí nosotros vemos que

tenemos una anotación bastante especial

acá nosotros tenemos un paréntesis de

llave luego tenemos unas comillas

simples que contienen un String de ID y

luego justamente a su derecha hay otra

par de comillas simples y que está

también contiene un String de ID y que

este finalmente termina con un cierre

paréntesis de llaves no vamos a ahondar

mucho en este tipo de datos lo que sí

tienen que saber Es que esto es un

diccionario y esto nosotros lo vamos a

ver cuando empecemos a entrar más en

profundidad en los tipos de datos que

existen en python lo más importante que

tienen que aprender ahora es que cuando

nosotros estamos Llamando a una función

y le estamos pasando estos dos

asteriscos al parámetro en este caso

nosotros cuando llevemos a la función

necesariamente vamos a tener que colocar

el nombre del parámetro el cual queremos

que este sea asignado aquí en la función

cuando nosotros hagamos referencia a

este ahora Cuántos argumentos podemos

pasarle a esta función todos los que

queramos absolutamente todos por ejemplo

yo le puedo pasar otro que se va a

llamar name y este va a tener el valor

de por ejemplo iPhone y vamos a tener

otro que se va a llamar desk y este

vendría siendo la descripción y vamos a

indicar que esto es un iPhone por

ejemplo vamos a hacer con un poquito más

hacia abajo y vamos a separar esto en

varias líneas Ahí está ahora guardamos y

Si volvemos a ejecutar nuestra

aplicación vamos a ver ahora cómo nos

muestra un ID y ahora podemos ver mucho

más claramente que el valor que se

encuentra a la izquierda es el nombre

del parámetro y el valor que se

encuentra la derecha es el argumento y

acá tenemos nuevamente parámetro y

después tenemos el argumento vamos a

cerrar esto ahora y ahora qué podemos

hacer nosotros para poder acceder a

estos mismos valores Pero dentro de la

función que lo que pasa si yo por

ejemplo necesito solamente un parámetro

que sea por ejemplo el ID y también

y que este desk en verdad a mí no me

interesa Y no lo voy a utilizar en ese

caso nosotros podemos acceder a estos

valores utilizando el paréntesis

cuadrado o el paréntesis de corchete y

aquí dentro nosotros vamos a colocar con

comillas dobles el nombre del parámetro

el cual nosotros queremos acceder en

este caso podría ser ID o name o name

Así que acá vamos a colocar ID y luego

de eso vamos a guardar vamos a ejecutar

nuestra aplicación y Aquí vemos que

tenemos el valor de aquí Pero por qué

dice ID porque el ID en este caso

vendría siendo un String que tiene como

valor ID cambiamos esto a 23 ahora

guardamos volvemos a ejecutar y aquí

tenemos el valor de 23 vamos a colocar

ahora también dentro de nuestro print

que vamos a imprimir también el nombre

de este producto Así que también

colocamos datos paréntesis de corchete y

el String de name nos aseguramos de

haber guardado y ejecutamos nuestra

aplicación nuevamente y aquí tenemos que

nos está mostrando 23 y iPhone o sea

finalmente los argumentos que le pasamos

a nuestra función o los valores que van

a tener estos parámetros

[Música]

hasta el momento En este curso hemos

estado trabajando mucho con esta función

de print que nos ha servido muchísimo

ahora para poder ver los valores con los

cuales estamos trabajando dentro de

nuestro código pero todavía no hemos

visto algo sumamente importante que es

lo que pasa si todas las operaciones que

yo estoy realizando dentro de una

función yo quisiera poder obtener estos

valores para luego poder pasárselos a

otra función o eventualmente a otro

print para eso nosotros vamos a ver

ahora la palabra reservada de return

vamos a verla nos venimos acá nuevamente

a nuestro editor vamos a crear acá un

archivo que se va a llamar 04 guión

return.p y vamos a cerrar nuestro

archivo anterior y también vamos a

cerrar el explorador y aquí nosotros

vamos a definir una nueva función que se

va a llamar Death suma y esta va a

recibir por ahora solamente dos

argumentos para hacerla implementación

sencilla nosotros por lo general lo que

hacíamos era sumar estos valores y

mostrarlos dentro de print aquí nosotros

algo como a más B O también lo que

podríamos hacer es definir una variable

que se llamaría resultado y esta vendría

siendo igual a más B ahora si nosotros

ejecutamos esta aplicación Nosotros

sabemos que esto va a funcionar por

supuesto que tenemos que pasarle

resultado a print y aquí es donde

nosotros finalmente llamamos a suma y le

pasamos por ejemplo los valores de 1 y 2

y si nosotros ejecutamos esto vamos a

ver que está imprimiendo el número 3 que

es el resultado de la suma de 1 + 2 Pero

qué es lo que pasa si yo quiero obtener

este resultado asignárselo a una

variable fuera de esta función para

luego yo poder utilizarlo más adelante

como por ejemplo nuevamente en la

función de suma en ese caso nosotros

vamos a tener que ver una nueva

instrucción que es la palabra reservada

de return Y eso como se ve Sencillamente

nosotros eliminamos acá print y

justamente antes de resultado nosotros

vamos a describir return espacio y es

esta pequeña palabra mágica que nos va a

permitir a nosotros poder tomar esta

variable de resultados y devolverla cada

vez que nosotros llamemos a esta función

de suma o cualquier función en un futuro

Entonces como nosotros podemos tomar

este valor de resultado aquí cuando

nosotros llamemos a suma de manera

sumamente fácil aquí nosotros vamos a

crear una nueva variable que se va a

llamar por ejemplo c y eso es todo

entonces ahora cuando Nosotros llamamos

a suma es tan necesariamente va a

devolver un valor y se lo va a asignar a

esta variable sé que Nosotros acabamos

de crear ahora cuál es el problema Si

nosotros ejecutamos nuestra aplicación

vamos a ver que no nos va a mostrar

absolutamente nada pero lo que sí

podemos hacer es copiar y pegar esta

línea vamos a cambiar este número uno

por c vamos a cambiar aquí la definición

de esta variable en vez de ser ya no va

a ser c Ahora va a ser de y luego lo que

haremos será imprimir en nuestra

terminal esta variable de D Ahora cuando

nosotros ejecutemos vamos a ver el

resultado de toda esta operación la

primera vez que llamamos a Suma 1 + 2 es

3 y luego eso se lo asignamos a c a

continuación c se lo pasamos nuevamente

a suma aquí nosotros tenemos tres tres

más dos es cinco Y eso se lo pasamos a

de y finalmente d se lo pasamos a print

Entonces esto nos debería Mostrar 5 Así

que ahora nosotros vamos a ejecutar

nuestra aplicación y aquí nosotros

tenemos el valor de 5

[Música]

en este vídeo vamos a hablar sobre el

alcance de las funciones para eso nos

venimos nuevamente aquí a nuestro editor

y vamos a crear un nuevo archivo que se

va a llamar 05 alcance punto p y

cerramos el explorador y también

Cerramos el archivo anterior y ahora sí

comenzamos vamos a comenzar creando una

función que se va a llamar saludar esta

no va a recibir absolutamente ningún

parámetro y vamos a definir una variable

dentro de esta función que se va a

llamar saludo y esta va a decir hola

mundo vamos a definir ahora otra función

que se va a llamar saluda Chanchito y

esta tampoco va a recibir ningún

parámetro y su mensaje va a ser saludo

Hola Chanchito vamos a guardar en este

caso Nosotros hemos creado dos funciones

una que se llama saludar y otra que se

llama salud a ambas contienen una

variable que se llama saludo y cada una

contiene un valor completamente distinto

al otro uno contiene el valor de Hola

mundo y otra contiene el valor de o la

Chanchito Entonces qué ocurriría si es

que nosotros tratáramos de imprimir

estas variables Por ejemplo si yo me

coloco acá abajo y escribo print saludo

vamos a ver qué es lo que ocurre yo ya

sé qué es lo que ocurre no más nos va a

funcionar y esto nos va a arrojar un

error pero veamos los De todas maneras

vamos a pinchar acá y nos va a indicar

el error de name saludo is not the find

Qué quiere decir esto que esta variable

que se llama saludo no existe no se

encuentra definida Pero por qué Si

nosotros la estamos viendo acá dentro de

la función de saludar y también la

tenemos dentro de acá de nuestra función

de salud a Chanchito esto es porque el

alcance de esta variable que nosotros

estamos tratando de llamar es el alcance

donde también se encuentran estas mismas

funciones nosotros podemos definir los

alcances de una variable o función

dependiendo de donde se encuentren o

donde se estén definiendo en este caso

Yo estoy definiendo la función de saludo

dentro de salud de Chanchito y también

lo estoy haciendo dentro de la función

de saludar ahora qué es lo que ocurre

cuando nosotros definimos una función

que esta Va a contener una variable en

este caso saludo nosotros Solamente

vamos a poder acceder a esa variable

dentro de la misma función de saludar

Qué quiere decir esto nosotros no la

vamos a poder llamar desde afuera

solamente la vamos a poder llamar desde

dentro de esta misma función por eso

nosotros podemos venir acá y podemos

hacer un print de saludo Eso sí vamos a

tener que Eliminar esta línea para que

no nos arroje un error y aquí nosotros

podemos llamar a saludar Ahora sí

guardamos Y ejecutamos nuevamente

nuestro código vamos a ver que aquí

aparece el String de Hola mundo ahora lo

que vamos a hacer nosotros es tomar este

mismo print y se lo vamos a pegar aquí a

salud a Chanchito y lo que vamos a hacer

ahora es Llamar a esta función de saludo

Chanchito justamente después de saludar

y luego vamos a volver a llamar a

saludar ahora algunas personas piensan

que cuando nosotros hacemos esto cuando

llamamos primero a saludar saludo va a

tener el valor de Hola mundo y después

cuando llamamos a Saludos Chanchito el

saludo en este caso va a tener el valor

de Hola Chanchito y que finalmente lo

que nosotros estamos haciendo es

asignarle el valor a la misma variable

pero en contextos distintos Y en este

caso Esto es lo importante la variable

de saludo que se encuentra dentro de

saludar y la variable de saludo que se

encuentra dentro de salud de Chanchito

son dos variables completamente

distintas esto quiere decir que sería

perfectamente como que esta sea una

variable que se llama a y esta sea una

variable que se llame B son variables

completamente distintas que se están

guardando en distintos lugares de la

memoria del computador Entonces nosotros

ahora ya sabemos que estas dos variables

son completamente independientes y da

Exactamente lo mismo si Nosotros

llamamos a una función después a otra y

después volvemos a llamar a una anterior

da Exactamente lo mismo ahora que es lo

que pasa si nosotros definimos esta

misma variable de saludo pero del

alcance de la función por ejemplo

hagámoslo acá que en este caso esto que

se encuentra acá se conoce como un

contexto global O sea que el alcance de

la variable Si nosotros la definimos acá

va a poder ser accedida por

absolutamente todo el código que se

encuentre dentro del archivo alcance

punto p y vamos a ver eso mismo vamos a

definir acá una variable que se va a

llamar saludo también pero esta va a

decir hola global y vamos a guardarla

ahora nosotros tenemos tres variables

que se llaman saludo tenemos esta que es

la del alcance global tenemos esta que

es la del alcance de la función de

saludar y tenemos esta que aparece acá

que es del alcance de la función de

salud a Chanchito ahora vamos a llamar a

nuestras funciones vamos a eliminar

estas dos líneas listo y ahora vamos a

realizar un pequeño cambio lo que

haremos será tomar esta línea que tiene

este print y la vamos a pegar justamente

antes acá arriba qué creen que ocurriría

cuando yo estoy llamando aquí a print

saludo algunos desarrolladores piensan

que se va a a esta variable que se

encuentra acá arriba de saludo pero ese

no es el caso lo que va a ocurrir acá es

que nos va a arrojar un error diciendo

que esta variable no se encuentra

definida vamos a guardar y vamos a

ejecutar nuevamente nuestro código y

tenemos exactamente el mismo problema no

podemos acceder a una variable local que

se llama saludo cuando todavía no se le

ha asociado un valor en este caso lo que

está haciendo python es que nos está

diciendo Oye esta variable de saludo que

tú me estás colocando acá es verdad es

esta que se encuentra acá abajo y yo no

puedo hacer eso tú lo que tienes que

hacer es primero definir esta variable

de saludo y después tú puedes hacer

referencia a ella después tú la puedes

llamar dentro de un print entonces la

forma correcta vendría siendo de esta

manera siempre definir una variable

antes y luego llamarla y aquí nosotros

también pudimos ver que cuando nosotros

estamos imprimiendo la variable de

saludo nunca vamos a llamar a la

variable de saludo que se encuentra en

un alcance global y ahora vamos a hacer

otra cosa vamos a eliminar esto vamos a

llamar nuevamente a saludar pero luego

de llamar a saludar vamos a imprimir la

variable de saludo algunas personas van

a pensar que cuando nosotros llamemos a

la función de saludar vamos a

reasignarle el valor a saludo y ya va a

dejar de ser o la global y va a empezar

a hacer Hola mundo vamos a ver qué es lo

que ocurre te voy a dar inmediatamente

la respuesta no ocurre eso sigue siendo

Hola global ahora vamos a imprimir y

Aquí vemos que la variable sigue siendo

Hola global Por qué Porque python sabe

que nosotros en este momento acá en esta

línea la línea 14 nosotros estamos

trabajando con la variable que se

encuentra definida en el alcance global

y cuando Nosotros llamamos a la función

de saludar python también sabe que

nosotros nos referimos a la variable que

se encuentra dentro de nuestra función

de saludar y por qué python hace esto

porque cuando nosotros estamos

utilizando variables globales estamos

entrando en una mala práctica existe un

debate gigantesco en internet y a lo

largo de la historia del desarrollo del

Software de Por qué utilizar variables

globales es una mala práctica Esto no es

solamente una opinión mía esto ya es una

discusión que lleva mucho mucho tiempo y

si quieres entrar en las buenas

prácticas no utilices variables globales

que vendría siendo por ejemplo esta que

aparece acá utiliza variables dentro del

contexto que van a ser utilizadas por

qué Porque si es que yo en este caso

tengo esta variable de saludo y le estoy

asignando un String pero por alguna

razón luego yo voy a otra función Y en

lugar de asignarle un String le asigno

un número Como por ejemplo acá podría

ser 24 mi aplicación podría dejar de

funcionar porque le estoy asignando un

valor o un tipo de dato que No

necesariamente va a ser el correcto por

eso no nosotros no tenemos que utilizar

variables globales Porque además después

nosotros cuando intentemos encontrar el

error de Por qué está ocurriendo esto

vamos a tener que revisar de pronto toda

nuestra aplicación para poder encontrar

esa única función que está cambiando ese

valor por algo que no Debería ser así es

que nosotros no tenemos que utilizar

variables globales Pero si por alguna

razón que ojalá nunca hay que utilizar

esta razón pero si por alguna razón

tienes que utilizar variables globales

en ese caso yo te voy a mostrar Cómo se

hace pero no las utilices en ese caso tú

tienes que venir aquí a la misma función

que estás llamando a esta variable vamos

a suponer el caso de saludar tienes que

escribir justamente al comienzo de la

función global espacio y el nombre de la

variable que vas a utilizar que en este

caso vendría siendo saludo pero aquí

tiene que ir el nombre de la variable

que se encuentra en un alcance anterior

o en un alcance global y aquí nosotros

escribimos Saludos ahora python ya sabe

que esta variable de saludo en verdad es

esta que aparece acá arriba Así es que

nosotros vamos a hacer lo siguiente

vamos a imprimir saludo y luego vamos a

imprimirlo nuevamente pero justamente

debajo de la función cuando Nosotros

llamamos a la función saludar Ahora sí

nosotros vamos a ejecutar nuestra

aplicación y ahora podemos ver que es

Hola global y luego esta variable ha

cambiado su valor a Hola mundo pero como

les decía esto que Nosotros acabamos de

hacer acá arriba es una pésima práctica

no lo hagan y les voy a mostrar un

ejemplo inmediatamente vamos a cambiar

el valor de esta variable de saludo por

25 y lo que vamos a hacer ahora es hacer

una operación sumamente sencilla vamos a

crear una variable que se va a llamar

resultado 1 y esta Va a ser igual a

saludo más 3 por ejemplo y Aquí vamos a

imprimir resultado 1 luego vamos a

llamar a nuestra función de saludar y

vamos a copiar esta misma línea la vamos

a pegar acá abajo Y en lugar de llamar a

la variable resultado 1 le vamos a

llamar resultado 2 vamos a guardar y

tenemos que imprimir también esta

variable de resultado 2 Dentro de este

print ahora si guardamos Y ejecutamos

nuevamente nuestra aplicación y aquí nos

está indicando un error solamente

podemos concatenar strings y no enteros

Entonces qué es lo que está ocurriendo

python dice Oye tú estás tratando de

concatenar dos strings y tú como

desarrollador vas a estar rompiendo la

cabeza diciendo por qué Si Saludos se

supone que es un entero es más lo puedes

ver acá arriba Aquí está es un entero

Bueno una función de manera escondida te

cambio el valor de esa variable de un

entero a un String Esta es la razón

principal por la cual no se que utilizar

las variables globales

[Música]

[Aplausos]

en este vídeo voy a enseñarles a depurar

su código y de esta manera podrán

encontrar los errores que ustedes

cometan cuando está programando así que

vamos a eso lo primero que hice fue

crearme un nuevo archivo dentro de la

misma carpeta que se llama 06 guión

depuración.pe y aquí nosotros vamos a

crear una función que se va a llamar

largo y esta lo que hará será calcular

la longitud o la cantidad de caracteres

que tiene un texto Ya sé que existe la

función del en para poder hacer

exactamente esto mismo pero esto es para

poder mostrarles el uso del depurador Y

cómo nosotros podemos encontrar los

errores Así es que ahora vamos a crear

una variable que se va a llamar

resultado y esta Va a ser igual a cero

Luego de eso vamos a llamar a Ford de un

carácter in texto y ahora lo que vamos a

ir haciendo es ir sumando uno al

resultado por cada iteración pero lo que

nosotros también queremos hacer es poder

devolver el valor de resultado cuando

nosotros llamemos a la función Así que

yo lo que voy a hacer Es que voy a

colocar acá un retorno de resultado en

este caso yo estoy haciendo de adrede

que retorne se encuentre dentro de Ford

para así yo poder después eventualmente

encontrar este error Ahora aquí nosotros

estamos viendo que vs code me está

indicando un Warning Y eso es porque

Charles yo no lo estoy utilizando para

que deje de mostrarnos ese error vamos a

reemplazar char por un guión bajo y eso

inmediatamente va a quitar el Warning

dentro de nuestro código perfecto Ahora

sí podemos continuar un par de líneas

más abajo vamos a llamar a largo y vamos

a pasarle el String de Hola mundo ahora

sí lo que nosotros tenemos que hacer

guardar el resultado de esta función

dentro de una variable que nosotros le

vamos a indicar que se va a llamar L y

esta después nosotros la vamos a

imprimir Ahora sí nosotros vamos a

ejecutar nuestro código y aquí nosotros

ya podemos ver el error nos está

mostrando uno en lugar de la longitud

completa que tiene el String de Hola

mundo que esto debiese ser 10 Entonces

nosotros vamos a ver ahora cómo nosotros

podemos depurar nuestra aplicación para

poder encontrar el error para eso lo que

nosotros tenemos que hacer es irnos a la

pestaña del depurador eso nosotros lo

hacemos pinchando acá y venimos acá

donde nos dice Run Andy Back y en el

caso de que puedas ver el icono debería

Mostrar algo muy similar a esto donde

vamos a tener un insecto acompañado de

un botón de Play Ahora que nos

encontramos acá lo primero que nosotros

vamos a tener que hacer es crear un

archivo de launch punto Jason de esta

manera de ese code va a poder utilizar

ese archivo para poder depurar nuestro

código y para nosotros poder crear ese

archivo Sencillamente tenemos que

pinchar acá en este texto que dice

create a launch punto Jason file

pinchamos acá ahora vs nos está

mostrando un listado de opciones que

nosotros podemos seleccionar para poder

depurar el código de nuestra aplicación

en este listado aparecen muchas opciones

que son más avanzadas como por ejemplo

esta que nos permite a nosotros poder

depurar nuestras aplicaciones que

construyamos con juango también las que

construyamos con Fast Api o también las

que construyamos con Flash nosotros no

vamos a seleccionar absolutamente

ninguna de esas porque todavía no

estamos trabajando con esos frameworks

Así que vamos a seleccionar esta que

dice python file aquí ve ese code ya nos

ha logrado crear con éxito este archivo

que se llama launch.json No es necesario

que nosotros empecemos a indagar en él

así que vamos a cerrarlo Y por supuesto

que vamos a ir también aquí al

explorador de archivos para ver dónde

creó este archivo pinchamos acá y aquí

nos vamos a dar cuenta que tenemos una

carpeta nueva que se llama punto BS code

cuando pinchemos en ella Vamos a ver que

tenemos un nuevo archivo que se llama

launch.json y si es que quieren iniciar

este archivo Sencillamente pinchar acá y

acá van a poder ver el mismo archivo que

acabamos de crear ahora vamos a cerrarlo

nos vamos a devolver a la pestaña del

depurador y ahora vamos a ejecutar el

depurador sin embargo si nosotros lo

ejecutamos ahora vamos a ver que lo que

va a ocurrir es prácticamente nada nos

va a mostrar el resultado y luego de

esto lo que hará será cerrar la

aplicación porque está ocurriendo esto

porque nosotros necesariamente tenemos

que agregarle un punto donde el

depurador se va a detener y cuando se

detenga nosotros vamos a poder empezar a

analizar nuestra aplicación yo lo que

voy a hacer es crear nuevamente un print

justamente antes del llamado a la

función de largo y vamos a indicarle acá

Chanchito solamente para algo de código

justamente antes del llamado a la

función largo Así es que ahora lo que

vamos a hacer es colocar nuestro punto

de detención a nuestro punto de quiebre

este puntito rojo que aparece acá se le

conoce como breakpoint bueno no

técnicamente el punto rojo sino que

cuando nosotros colocamos un breakpoint

en alguna línea en particular Como por

ejemplo esta la línea 8 esto lo que hará

será que el depurador se va a detener

específicamente en esta línea antes de

seguir avanzando y nos va a mostrar todo

lo que se encuentre definido en ese

momento vamos a verlo para eso nosotros

volvemos nuevamente a pinchar acá en

este botón grande de Play y aquí

nosotros ya podemos empezar a ver un par

de cosas voy a agrandar esto un poquito

más ya que estamos acá nos vamos a venir

aquí a esta opción que dice function

vamos a pinchar en esta y aquí nosotros

vamos a poder ver que se encuentra

definida la función de largo Ahora sí lo

que haremos nosotros será continuar

vamos a decirle al depurador que este

avance una línea para eso nosotros

tenemos que venir acá arriba y tenemos

que pinchar en este botón que dice step

también lo pueden hacer con el atajo de

teclado la tecla f10 y en el caso que

ustedes estén en Mac tienen que hacerlo

presionando la tecla de function y luego

presiona la tecla de f10 pinchan acá

hemos avanzado ahora a la línea 9 sin

embargo en este momento aún sigue sin

mostrarnos absolutamente nada Así es que

vamos a pinchar nuevamente acá para

avanzar una línea más por qué Porque

cuando nosotros nos encontramos en esta

línea en verdad lo que está haciendo es

decirnos Oye estoy en esta línea y voy a

ejecutar esto que se encuentra en esta

línea todavía no lo ha ejecutado Así es

que esta variable l nos debería aparecer

aquí justamente en este panel donde

aparecen las variables una vez que ya

hayamos pasado esta línea así es que nos

vamos a venir acá y vamos a pinchar acá

nuevamente en Step over y nos ha enviado

inmediatamente a la línea 10 no ingresó

a la función para ver qué es lo que

estaba ocurriendo Por qué está

ocurriendo eso ya lo vamos a ver en un

segundo pero lo que quiero que vean es

lo siguiente ahora me acaba de aparecer

un nuevo valor dentro de mis variables

locales aquí nosotros tenemos

que vendría siendo esta variable que

nosotros tenemos acá y también nos está

mostrando acá abajo que fue lo que

retornó el llamado a la función de largo

y nos está indicando que es uno ahora lo

que vamos a hacer es presionar

nuevamente en este over y nuestra

aplicación ha detenido la depuración

Esto no es exactamente lo que nosotros

queríamos hacer Así es que nosotros

vamos a pinchar nuevamente aquí en el

botón de depuración y ahora vamos a

hacer lo siguiente vamos a pinchar

nuevamente aquí en este botón de Step

over para poder llegar a la línea 9 y

una vez que nosotros nos encontremos acá

vamos a conocer ahora este botón que se

encuentra acá que se llama Step into o

también puede ser ejecutado con la tecla

f11 y en el caso de Mac con la tecla de

función más a la tecla de f11 vamos a

pinchar acá y esto lo que ha hecho ha

sido ingresarnos inmediatamente dentro

de la ejecución de la función voy a

achicar esto un poco y aquí dentro de la

función por supuesto nosotros podemos

ver que nos encontramos en la línea 2

todavía no la ha ejecutado por eso no

nos aparece acá la variable de resultado

pero si nos está apareciendo la variable

de texto y también nos está Qué valor

tiene esta que es el String de Hola

mundo si Nosotros llamamos a esta misma

función de largo y luego le pasamos otro

bloque no sea Hola mundo sino que sea

por ejemplo Chanchito feliz aquí nos va

a aparecer el texto de Chanchito feliz

ahora sí vamos a continuar con la

ejecución de nuestra aplicación vamos a

volver a pinchar acá dentro de este Uber

o tecla f10 pinchamos acá y ahora

avanzamos a la siguiente línea aquí

nosotros ahora vemos que tenemos la

variable local de resultado Además del

texto de Hola mundo ahora nosotros ya

podemos empezar a ver que nos está

empezando a mostrar más información Así

que vamos a pinchar nuevamente aquí

dentro de este Uber vamos a ver ahora

que nos encontramos dentro de la línea 4

todavía no la ejecuta por eso es que

todavía no nos aparece con el valor de

uno así es que vamos a volver a pinchar

acá dentro de Step Uber y vemos ahora

que se encuentra en la línea de retorne

y aquí nosotros ya podemos empezar a

intuir por qué estoy empezando a tener

este error porque yo acabo de entrar

Dentro de este foro me acaba de sumar el

valor de 1 a nuestra variable de

resultados e inmediatamente la está

retornando y esto debería hacerlo una

vez que hayamos llegado al final de la

ejecución de este foro y también algo

interesante aquí nosotros vemos que el

primer valor que tiene nuestra variable

de guión bajo es la letra h Así es que

nuestra función hasta el momento sabemos

que lo está ejecutando bien por qué

porque tenemos que el primer carácter es

H que corresponde justamente al primer

carácter del String o lamundo ahora si

nosotros volvemos a presionar aquí en

Step over nos vamos a dar cuenta que

hemos salido de la función y llegamos

aquí a la línea 10 donde aparece print

esto claramente no es lo que nosotros

queremos Así es que nosotros ahora vamos

a detener nuestro depaker pinchando Ahí

vamos a subir y vamos a quitar la

alimentación de Story ahora vamos a

guardar ahora vamos a volver a ejecutar

nuestro depurador pinchando nuevamente

acá ya estamos en la línea 8 Así es que

vamos a hacer nuevamente Step over ahora

que estamos en la línea 9 y aquí se

encuentra la función vamos a llamar a

Step into y ahora vamos a pinchar

nuevamente en Step over un par de veces

ahí vemos que cuando lo volvimos a

pinchar nos devolvió nuevamente la línea

3 que es donde se encuentra Ford así

vamos a pinchar nuevamente aquí en este

over y ya tenemos algo interesante el

valor que está tomando ahora el guión

bajo es la letra o y resultado sigue

siendo uno vamos a pinchar nuevamente en

este Power ahora tenemos que el valor de

la variable resultado es 2 y si seguimos

así vamos a ver como ahora nuestra

función está funcionando de la manera

correcta Así es que ya no es necesario

que nosotros sigamos depurando esta

misma función sino que ya nos podemos

salir de esta para salirnos de esta

función y volver nuevamente al contexto

anterior que vendría siendo la línea 9

Yo voy a pinchar en este botón que es el

de Step out o también ustedes pueden

presionar el atajo de teclado de shift

f11 y en el caso de maco s ustedes

tienen que mantener presiona la tecla de

function shift y f11 vamos a pinchar acá

y nos hemos devuelto aquí nuevamente a

la línea 9 en el caso que quiera volver

a reiniciar toda la depuración basta con

que en este botón que dice

restart y aquí voy a comenzar

completamente desde cero en el caso que

quiera continuar hasta el siguiente

break Point tengo que pinchar en este

botón que se encuentra acá que es el de

continuo pero como podemos ver no más

break points Así que la depuración se

detuvo para probar esta misma

funcionalidad vamos a bajar aquí a la

línea 10 ejecutamos nuevamente el

depurador pinchamos aquí en este botón

de Play y vemos cómo ha saltado

inmediatamente a la línea 10 y para

detener el depurador basta con que

nosotros pinchemos en este cuadrado que

es el de stop y esto el atajo de teclado

vendría siendo con shift y f5 pinchamos

acá y listo Esta es la forma en la cual

nosotros podemos depurar nuestras

aplicaciones construidas en python Y así

vamos a poder entender Por qué nuestras

aplicaciones están fallando o por qué no

ahora si por alguna razón te perdiste

justamente en esta parte del retorne de

Por qué detenía la ejecución cuando éste

se encontraba inventado es porque

Richard inmediatamente va a detener la

ejecución de la función y va a retornar

el valor para ser asignado a una

variable justamente cuando se llame a

esta línea que justo y esa es la razón

por la cual nos estaba devolviendo uno

porque resultado en ese entonces valía 1

y lo estábamos retornando Por ende el

valor de l acá era 1 pero ahora si

nosotros cambiamos la alimentación la

bajamos un nivel o la corremos un nivel

hacia la izquierda como prefieras verlo

ahora es cuando l ahora sí ya vale 10

[Música]

[Aplausos]

en este vídeo vamos a realizar un

ejercicio y vamos a aplicar todo lo

aprendido hasta ahora lo que nosotros

tenemos que hacer es primero crear un

archivo que se va a llamar 07 ejercicios

y aquí nosotros vamos a tener que

definir una función que se va a llamar

es guión bajo palíndromo y esta va a

recibir un parámetro un palíndromo por

si no lo sabías es una palabra o frase u

oración que se escribe Exactamente igual

si es que tú la escribes al derecho o si

es que la escribes al revés me explico

por ejemplo nosotros tenemos la banda de

música Abba Abba si es que nosotros la

escribimos al revés nos vamos a dar

cuenta que es a bba entonces también va

a ser ava otro palíndromo También

conocido es

reconócer si es que nosotros escribimos

reconocer al revés nos va a dar que esto

es

recoger Y así sucesivamente esta función

yo ya la tengo implementada y les voy a

mostrar ustedes cómo debería comportarse

esta función lo primero que vamos a

hacer es imprimir en nuestra terminal el

String que queremos verificar si es que

es Así que vamos a dar con ava después

de eso vamos a llamar a la función de

spalíndromo y aquí le tenemos que pasar

el String de ava ahora yo lo que voy a

hacer Es que voy a ejecutar mi Script y

aquí nosotros podemos ver que me está

indicando que para ava es verdadero

veamos con otro voy a duplicar esta

línea y vamos a hacerlo con la palabra

de reconocer nos vamos a venir adelante

agregamos a reconocer y volvemos a

ejecutar y aquí nosotros tenemos que

para reconocer también es verdadero

ahora esta función también tiene que

implementar algo sumamente importante

que lo vamos a ver ahora vamos a

escribir acá amo la paloma que esto

también es un palíndromo pero vamos a

ejecutar la función lo más probable es

que ustedes Acá estén pensando Oye pero

este String tiene unos espacios acá

Bueno ustedes se van a tener que

encargar de validar esto mismo así es

que lo que vamos a hacer es pasarle acá

al String de amo la paloma y Aquí vamos

a guardar ahora vamos a ejecutar de

nuevo y mi función me está indicando que

amo la paloma también es un palíndromo

ahora para que esté pensando que esta

función Sencillamente está haciendo un

retorne de vamos a pasarla

inmediatamente un caso de fracaso Así es

que vamos a colocar acá también

nuevamente vamos a duplicar esta línea y

acá vamos a escribir hola mundo y aquí a

spalíndromo le tenemos que pasar Hola

mundo ahora vamos a guardar y vamos a

ejecutar nuestro Script nuevamente y

aquí nos está indicando Hola mundo falso

o sea Hola mundo no es un palíndromo si

es que no quieren una pista de cómo se

tiene que resolver este ejercicio

pónganle pausa al video y dense unos

15-20 minutos para poder resolver este

ejercicio si es que quieres la pista de

cómo se tiene que resolver este

ejercicio Entonces quédate ahora vamos a

bajar un poco y este ejercicio para que

puedas resolverlo de la manera correcta

necesita dos partes necesita como

primero una función que nos permita a

nosotros poder eliminar los espacios en

blanco de un String luego de haber

eliminado los espacios en blanco vamos a

tener que crear después otra función que

lo que haga es que tome un String o un

texto y que a este lo de vuelta o que le

aplique un reverse esta función ustedes

no la tienen que buscar en internet

ustedes lo que van a tener que hacer es

construir esta función de reverse con lo

que ustedes saben hasta ahora y sí se

puede y les voy a dar una pista para

estas dos funciones van a tener que

aplicar Ford e iterar cada uno de los

caracteres y dependiendo del carácter

que ustedes estén recibiendo es si es

que ustedes le aplican una operación o

no Ya les he dado mucha información

Ahora sí desde 15 a 20 minutos para

poder resolver este ejercicio y en el

siguiente vídeo yo les voy a mostrar

Cómo se resuelve

[Música]

en este vídeo vamos a ver la solución

para el ejercicio del vídeo anterior y

este es la implementación de la función

es palíndromo vamos a verlo vamos a

estar aquí y lo que vamos a hacer es que

dentro de esta función de es palíndromo

vamos a necesitar realizar dos cosas La

primera es crear una función que le

elimine absolutamente todos los espacios

en blanco que podría tener un String Así

que lo que vamos a hacer acá es vamos a

reemplazar la variable de texto que

nosotros estamos recibiendo acá como

parámetro y vamos a llamar acá una

función que se va a llamar Note space

esta función por supuesto vamos a tener

que crearla ya esta le vamos a pasar el

texto y por supuesto lo que quiero hacer

también es imprimir que esto se esté

ejecutando bien y después de eso vamos a

llamar a es palíndromo y le vamos a

pasar el texto de amo la paloma cuando

nosotros ejecutemos nuestro Script lo

que nosotros deberíamos ver en la

consola es el texto sin ningún espacio o

sea este no debería encontrarse y este

tampoco o sea en otras palabras el

String que nos debería devolver es eso

así es que vamos a describir esa función

nos vamos a venir justamente un poco

antes de espalindromo y acá vamos a

definir una función que se va a llamar

Note space y esta va a recibir como

parámetro también texto y aquí viene la

parte interesante lo que nosotros vamos

a hacer es crear un nuevo texto donde

vamos a ir almacenando el nuevo valor de

la nueva función entonces acá escribimos

nuevo texto y Esto va a comenzar como un

String vacío entonces lo que vamos a ir

haciendo nosotros es que vamos a tomar

el String que nosotros estamos

recibiendo acá como parámetro lo vamos a

iterar y vamos a concatenar cada uno de

los caracteres con nuevo texto siempre y

cuando este no sea un String vacío Así

que lo que tenemos que hacer es empezar

a instalarlo para eso escribimos Ford

Vamos a darle de nombre chat porque es

un carácter y vamos a iterar texto y

aquí nosotros tenemos que preguntar si

es que echar es distinto a un espacio

Así que colocamos el String vacío y

agregamos un espacio después de eso le

vamos a colocar dos puntos y aquí

nosotros vamos a empezar a concatenar

cada uno de los caracteres con nuevo

texto Así que colocamos acá nuevo texto

más igual para poder concatenar un

String con el otro Chart Y esto es lo

que va a ir haciendo es que va a ir

concatenando cada uno de los caracteres

A menos que este sea un espacio en

blanco luego finalmente fuera del Ford o

sea en el mismo nivel que se encuentra

el Ford vamos a colocar un protón de

nuevo texto ahora vamos a guardar y

vamos a verificar que el String que

nosotros le estamos pasando acá de amo

la paloma efectivamente le esté quitando

absolutamente todos los espacios en

blanco así que nos vamos a venir acá

para ejecutar nuestra aplicación

pinchamos y acá nosotros vemos cómo nos

devolvió este String de amo la paloma

con absolutamente ningún espacio en

blanco entre medio Así es que ya tenemos

la mitad del ejercicio resuelto si es

que no lograste resolver el ejercicio

pero llegaste hasta acá y obtuviste este

String de amo la paloma pero aún así tú

tienes ganas de resolver lo que queda

del ejercicio colócale pausa intenta

resolver la siguiente función que tienes

que crear que es la de dar vuelta el

String entonces acá a nuestra función de

palíndromo justamente después de esta

línea vamos a presionar enter y acá

nosotros tenemos que crear una variable

que va a contener el String al revés

Entonces nosotros acá le vamos a colocar

texto al revés y Esto va a ser igual a

el llamado de una función que se va a

llamar reverse y aquí Nosotros le vamos

a pasar el texto que nosotros ya le

quitamos los espacios en blanco o sea

este de acá nosotros se lo vamos a pasar

como argumento a una función de reverse

que vamos a crear ahora por supuesto que

tenemos que tomar esta variable y

pasársela como argumento a print y ahora

sí podemos crear la función de reverse

Así que creamos Def reverse aquí tenemos

que pasarle también un texto y aquí

tenemos que crear una variable que se va

a llamar texto al revés y Esto va a ser

igual a un String completamente vacío y

ahora lo que tenemos que hacer es iterar

el texto así que ya vamos a Ford in

texto y aquí lo que tenemos que hacer es

empezar a concatenar cada uno de los

caracteres pero al comienzo en lugar de

al final así es que si es que nosotros

escribimos texto al revés y aquí

aplicamos la concatenación esto no nos

va a servir porque nos va a empezar a

concatenar absolutamente todos los

caracteres a la derecha y nosotros

queremos los caracteres concatenados a

la izquierda Así es que lo que vamos a

hacer es colocar el símbolo de igual y

acá nosotros vamos a colocar chavar más

texto al revés y esto finalmente es lo

que se va a encargar de dar vuelta el

String Ahora sí nosotros podemos

presionar enter y justamente fuera del

alcance de Ford nosotros vamos a

escribir return texto al revés ahora

vamos a guardar vamos a bajar un poco

ahora vamos a verificar que todo se

encuentre bien perfecto todo se

encuentra bien Así que vamos a presionar

acá y aquí estamos viendo que nos está

entregando nuevamente amo la paloma Así

que dos opciones uno la función que

nosotros implementamos no sirve o dos

amo la paloma es efectivamente un

palíndromo pero para que nosotros

estemos seguros lo que haremos será

duplicar esta línea y aquí nosotros en

lugar de colocar amo la paloma vamos a

colocar Hola mundo esto verificar que

efectivamente está dando vuelta el

String Así que volvemos a ejecutar y

aquí nosotros vemos cómo tenemos el

String de Hola mundo al revés Así es que

si efectivamente esta función está

funcionando ahora lo que tenemos que

hacer es retornar texto pero

comparándolo con texto al revés ahora

nosotros guardamos Y esto es lo que

debéis hacer es devolvernos un valor

boolean Así es que acá nosotros vamos a

tener que colocar el print lo mismo acá

ahora vamos a guardar y esto nos debería

devolver true y el siguiente nos debería

devolver false Así que vamos a ejecutar

y aquí nosotros tenemos true y también

tenemos false sin embargo nuestra

aplicación tiene un pequeño problema y

es el siguiente que es lo que pasa si es

que yo cambio la primera a por una a

mayúscula vamos a ver qué es lo que

ocurre me está devolviendo que los dos

son falsos así que nosotros vamos a

corregir eso inmediatamente y como lo

vamos a hacer justamente acá en la línea

19 a cada una de estas variables le

vamos a aplicar el método de lower

hacemos lo mismo contexto al revés

guardamos y vamos a ejecutar nuevamente

nuestra aplicación y aquí nosotros

tenemos que ahora si nos está entregando

true y nos está entregando fals

nuevamente Ahora sí vamos a validar que

esto también esté funcionando con otros

strings vamos a probar reconocer

ejecutamos reconocer está funcionando

vamos a colocar acá también somos o no

somos guardamos ejecutamos y vemos que

también esto es efectivamente un

palíndromo y de esta manera es como

nosotros podemos implementar dos

funciones una para poder dar la vuelta

del texto otro para poder eliminar todos

los espacios que puede tener una cadena

de caracteres y finalmente utilizando

estas dos funciones nosotros creamos una

función un poco más grande que se llama

es palíndromo

[Música]

en esta sección vamos a hablar sobre los

tipos de datos avanzados que tiene

python y vamos a empezar con las listas

para eso nos vamos a venir nuevamente a

nuestro editor vamos a crear una carpeta

y vamos a decirle que se llama tipos

guión avanzados enter y acá dentro vamos

a crear un archivo que se va a llamar 01

guión listas.b Cerramos el explorador y

las listas en python son tal cual como

suenan una lista como podría ser por

ejemplo una lista del supermercado en

una lista del supermercado nosotros

podríamos colocar cosas como por ejemplo

pan podríamos colocar también cosas como

aceite también podríamos colocar cosas

como zanahorias Y así sucesivamente

Hasta Que terminamos nuestra lista y

finalmente esta lista después nosotros

se la vamos a pasar a alguien o la

podemos tomar nosotros y con eso vamos a

ir nosotros al supermercado a poder

realizar la compra en base a esta lista

que nosotros hemos creado las listas en

python son Exactamente lo mismo con la

diferencia que además de poder colocar

por ejemplo pan aceite zanahorias vamos

a poder colocar también números hasta

los números que queramos vamos a poder

colocar también caracteres vamos a poder

colocar también otras listas dentro de

estas listas que vendría siendo algo así

como una sublista vamos a poder

juntarlas entre otras cosas así que

vamos a ver las inmediatamente lo

primero que vamos a hacer es crear una

lista de números que esto vendría siendo

lo más sencillo de poder entender aquí

nosotros vamos a colocar los números de

uno dos y tres y ahora vamos a analizar

qué fue lo que hice lo primero que hice

fue crear una variable que se llama

números después de eso estamos

utilizando el símbolo de igual o sea que

lo que se encuentra aquí a la derecha se

lo estamos asignando la variable de

números Pero esto tiene una sintaxis un

poco diferente vamos a verla acá

nosotros tenemos el paréntesis de

corchete este paréntesis de corchete

nosotros también lo hemos utilizado para

poder acceder a los índices de un String

Como por ejemplo cuando nosotros

escribíamos el String de Hola mundo y

acá Nosotros le indicábamos que

queríamos Acceder al índice 2 en este

caso H vendría siendo 0 este vendría

siendo uno y L vendría siendo dos

Entonces esto lo que haría sería

devolvernos el String que contiene el

carácter l Ahora sí vamos a eliminar

esto y vamos a guardar Entonces el

paréntesis de corchete a nosotros nos

sirve para poder indicar aquí va a

comenzar la lista y el paréntesis de

cierre de corchete nos va a indicar

nosotros que aquí en esta parte termina

nuestra lista y todo lo que se encuentra

dentro vendría siendo el contenido de

nuestra lista y aquí nosotros empezamos

a colocar nuestros elementos Cuántos

elementos podemos colocar todos los que

nosotros queramos pero es sumamente

importante que entre cada elemento

exista una coma para así poder indicarle

a python la diferencia entre Cuándo es

un elemento y cuando empieza a ser el

otro elemento entonces acá nosotros

tenemos un elemento que contiene el

número uno después nosotros tenemos una

coma que es para indicarle a python ese

vendría siendo nuestro primer elemento y

después nosotros colocamos nuestro

siguiente elemento que en este caso

vendría siendo dos seguido de s2

volvemos a colocar uno coma ya ahí

nosotros le volvemos a indicar a python

hasta aquí llega nuestro segundo

elemento después de esta coma va a venir

el tercer elemento y aquí nosotros

colocamos 3 fíjense que nosotros

justamente Después de tres no hemos

colocado ninguna coma esto es porque

este es el último elemento que se

encuentra dentro de nuestra lista y en

el caso del primer elemento Nosotros

tampoco colocamos una coma antes y es

porque este era el primer elemento de la

lista Entonces el primer elemento de la

lista no lleva una coma antes y el

último elemento de la lista no lleva una

coma después todos los elementos entre

medio tienen que llevar necesariamente

una coma ahora si es que nosotros

imprimimos esto vamos a escribir acá

print números guardamos vamos a ejecutar

pinchando acá y aquí nosotros vemos que

nos está imprimiendo prácticamente lo

mismo que nosotros escribimos antes un

Abre paréntesis de corchete 1 2 3 y

después ese cierra paréntesis de

corchete Vamos a continuar ahora creando

otra lista vamos a eliminar este print y

ahora vamos a escribir letras y Esto va

a ser igual a por supuesto una lista que

va a contener el carácter de a luego va

a contener el carácter de b y luego va a

contener el carácter de c en este caso a

esta lista que se llama letras le

estamos indicando que Su contenido va a

ser tres caracteres A B y C y nosotros

se lo estamos indicando como que estos

fuesen strings aquí nosotros tenemos el

String de a tenemos el Stream de b y

tenemos el String de c ahora podemos

colocar eso solamente o podemos colocar

también otros tipos de datos podemos

colocar Por supuesto que más tipos de

datos vamos a crear otra lista que se va

a llamar palabras aquí nosotros vamos a

crear nuevamente una lista y el primer

String se va a llamar Chanchito y el

segundo String se va feliz y aquí

nosotros vamos a guardar ahora podemos

crear listas de más de tres elementos

Por supuesto que sí vamos a aprovechar

de duplicar esta línea y le vamos a

colocar palabras felices y aquí nosotros

tenemos a Chanchito tenemos a feliz

También tenemos a Felipe y también

tenemos a alumnos porque los alumnos son

felices porque están aprendiendo python

ahora si nosotros presionamos enter y

podemos Por supuesto que guardar

absolutamente todo esto vamos a imprimir

ahora vamos a imprimir palabras vamos a

guardar ejecutamos nuevamente nuestro

código y aquí nosotros tenemos a

Chanchito Y tenemos feliz y ahora sí que

nosotros imprimimos palabras felices

guardamos volvemos a pinchar acá y acá

tenemos a Chanchito tenemos a feliz

Tenemos también a Felipe y también

tenemos a alumno Ahora sí vamos a

continuar además de strings además de

caracteres y además de números podemos

colocar más valores Por supuesto que sí

podemos colocar también booleans aquí yo

voy a colocar

booleans y Esto va a ser igual a un

listado que va a contener true va a

contener false y va a contener true de

nuevo y vamos a colocarle también otro

true Y si nosotros imprimimos esto voy a

mover para abajo voy a cambiar Su

contenido de palabras felices por

Williams voy a guardar y pincho acá en

mi botón para ejecutar y aquí nosotros

tenemos el valor de true tenemos false

tenemos true nuevamente Y nuevamente

volvemos a tener true Ahora sí vamos a

cerrar podemos colocar más valores

dentro de las listas Por supuesto que sí

Qué valores podemos colocar bueno dentro

de las listas también podemos colocar

otras listas y de esta manera crear una

matriz vamos a crear una matriz esta se

va a llamar matriz y va a ser igual a un

listado cuyo primer elemento va a ser

también un listado entonces que lo que

estamos haciendo acá tenemos una lista

cuyo contenido su primer elemento es

otra lista y aquí nosotros vamos a

colocar que va a tener el valor de 0 y 1

después de eso tenemos que separar la

primera lista de la segunda lista que

nosotros vamos a colocar acá cómo lo

hacemos colocando otra coma entre medio

y aquí nosotros volvemos a abrir

paréntesis de corchete y Aquí vamos a

colocar ahora uno coma cero entonces que

tenemos acá tenemos una matriz o también

podría ser un listado de coordenadas

donde el primero podría ser x y el

segundo podría y da lo mismo lo

importante en este caso es que podemos

crear una matriz y una matriz es un

listado que contiene más listados ahora

cómo se vería este listado cuando

nosotros lo imprimamos bueno

imprimamoslo vamos a imprimir matriz y

Aquí vamos a presionar ahora sobre este

botón y ahora nosotros tenemos el

listado que contiene otros dos listados

vamos a cerrar esto y vamos a eliminar

este print ahora qué pasaría si por

alguna razón Yo tengo que crear un

listado que contenga por ejemplo 10

ceros como podemos hacerlo podemos crear

nuestra variable que se va a llamar

ceros y esta Va a ser igual a un listado

que va a contener 0000

Pero esto tomaría mucho tiempo y la

verdad es que se vería bastante feo

existe una forma bastante mejor de poder

crear esto y como sería eso nosotros

colocamos un arreglo que contiene el

número 0 y fuera de este arreglo

nosotros utilizamos el símbolo de la

multiplicación y le colocamos 10 y que

es lo que haría Esto bueno va a tomar

este listado y lo va a multiplicar por

10 pero el contenido que éste tiene lo

va a colocar 10 veces vamos a ver cómo

se crea eso vamos a acá y vamos a

imprimir ceros vamos a ver cómo se ve

esto y acá nosotros vemos que tenemos un

listado que contiene 10 ceros cerramos

acá ahora qué es lo que pasa si es que

nosotros queremos por ejemplo un listado

que no solamente contiene ceros sino que

este contiene ceros y unos podemos hacer

eso Por supuesto que sí nosotros

colocamos acá el uno guardamos y ahora

vamos a ejecutar nuevamente nuestra

aplicación y aquí nosotros tenemos ahora

un listado que contiene 10 0,1 eso

vendría siendo 0,1 esos 1 0,1 esos dos y

así hasta finalmente llegar a 10 que es

lo que nosotros tenemos acá voy a

eliminar este uno Y ahora qué es lo que

ocurriría si yo de pronto necesito tener

dos listas pero tengo que juntarlas en

una súper lista así como en una lista

maestra que contenga muchas listas eso

también nosotros lo podemos hacer vamos

a juntar dos listas en este momento

vamos a crear una variable que se va a

llamar

alfanumérico y Esto va a ser igual a

números más letras que es lo que estamos

haciendo acá estamos tomando nuestra

primera lista números y la segunda lista

letras y las estamos juntando estamos

colocando primero nuestro listado de

números y justamente a su lado estamos

colocando nuestro listado de letras

vamos a imprimirlo para ver cómo se ve

esto print alfanumérico vamos a guardar

y ahora nos venimos nuevamente acá y acá

nosotros vemos que tenemos el listado 1

2 3 y después inmediatamente dentro de

la misma lista nosotros tenemos A B y C

de esta manera nosotros podemos juntar

dos listas en una gran lista y ahora qué

es lo que ocurriría si por ejemplo

nosotros queremos crear un listado que

contenga un Rango de números Como por

ejemplo podría ser vamos a colocar acá

una variable de Rango que tenga el

número del 1 al 10 se puede hacer esto

no esto no lo podemos hacer con esta

sintaxis que yo estoy utilizando Pero

afortunadamente nosotros podemos

utilizar una función que ya la habíamos

visto antes la cual es la función de

Rango yo puedo utilizar acá una función

nueva que se va a llamar list y voy a

abrir paréntesis redondo y aquí

utilizando la herramienta que nosotros

instalamos antes de python vamos a poder

ver que el argumento que nosotros

tenemos que pasarle como aparece acá el

argumento tiene que ser un iterable

siempre cuando nosotros lo

especifiquemos no podemos no pasarle

nada Entonces si no le pasamos nada lo

que hará será crear una lista

completamente vacía Entonces si queremos

crear una lista vacía nosotros en lugar

de colocar lista colocamos solamente eso

pero no queremos crear una lista vacía

nosotros creemos crear una lista que

vaya desde por ejemplo el 1 hasta el 10

como podemos hacer eso vamos a utilizar

acá nuestra función de Range y acá

nosotros podemos colocarle por ejemplo

el valor de 10 y esto es lo que hará

será crearme una lista con 10 elementos

vamos a ver cómo se ve esta si es que te

acuerdas de Cómo se utiliza la función

de Range sabrás que esto me va a

devolver algo extraño Ya lo vamos a ver

vamos a ejecutar acá y aquí nosotros

vemos que tenemos un listado con 10

elementos pero tienen que recordar que

esta comienza con el cero y termina con

9 Entonces como podemos hacer que

nuestro listado vaya de 1 a 10 eso

nosotros lo podemos hacer cambiando como

nosotros utilizamos la función de Range

para eso nosotros nos venimos dentro de

Range colocamos uno coma espacio y

también colocamos acá 11 por qué porque

nosotros queremos decir hasta dónde

vamos a llegar así es que nosotros

pinchamos acá y ahora sí tenemos nuestro

listado desde el 1 hasta el 10 y esa

finalmente la lista que nosotros

queríamos ya ahora sí podemos pinchar

acá en nuestro botón para poder ejecutar

nuestra aplicación y ahora nosotros

vemos que tenemos nuestro listado que

comienza con uno y que termina con 10 o

sea del 1 al 10 Ahora podemos crear

listas de otras cosas por supuesto que

sí también podemos crear una lista de un

String para eso nosotros vamos a

eliminar este print y vamos a colocar

Charles una variable que va a contener

los caracteres de un String que nosotros

le vamos a pasar y acá nosotros

utilizamos listo y aquí nos dice que

tenemos que pasarle un argumento que

tiene que ser iterable y se acuerdan Qué

cosas también son iterables los strings

aquí Nosotros le vamos a colocar el

String de Hola mundo y vamos a guardar

vamos a aprovechar de colocar nuestro

print de Charles para ver qué es lo que

esto nos muestra y ahora sí ejecutamos

nuestra aplicación y vemos ahora que

tenemos los strings de Hola mundo

separados por cada uno de los elementos

Dentro de este listado Entonces el

primer elemento es la H segundo elemento

es la o el tercer elemento es la L y así

sucesivamente hasta que llegamos al

último elemento que es o de Hola mundo

ahora sí podemos cerrar y ahora vamos a

pasar a nuestro siguiente video

[Música]

en este vídeo les voy a enseñar a

manipular las listas para eso nos

venimos nuevamente acá a nuestro editor

y vamos a crear un nuevo archivo que se

va a llamar 02 guión manipulando guión

listas.pi vamos a cerrar el archivo

anterior cerramos también nuestro

explorador y ahora sí vamos a comenzar

lo primero que necesitamos es una lista

que se va a llamar mascotas y este

listado de mascotas va a contener a

boltgang a pelusa al pulga y a copito

vamos a imprimir ahora nuestro listado

de mascotas para ver que esto está

funcionando Por supuesto que

correctamente Así que pinchamos acá y

acá nosotros vemos que tenemos a volcán

pelusa pulga y también a copito cerramos

acá ahora nosotros podemos acceder a

cada uno de los elementos de un listado

Exactamente igual como nosotros podemos

acceder a un carácter de un String eso

nosotros lo hacemos utilizando el

paréntesis cuadrado y acá Nosotros le

vamos a indicar el índice del elemento

al cual nosotros queremos acceder

supongamos que nosotros queremos acceder

a volcam en este caso tenemos que

colocar el número cero porque acuérdense

que vistas comienzan desde el cero al

igual que los strings Así es que

wolfgang vendría siendo 0 pelusa vendría

siendo uno y así sucesivamente hasta

llegar al último elemento si es que

nuestra lista tiene por ejemplo longitud

4 el último elemento vendría siendo 3

acuérdense de eso porque eso es

importante ahora si es que nosotros

imprimimos esto vamos a ver ahora que el

primer elemento por supuesto es volkan

vamos a cerrar esto ahora que lo que

ocurre si nosotros queremos cambiar un

elemento del listado eso nosotros lo

podemos hacer utilizando también este

paréntesis de llaves accediendo al

elemento y acá Nosotros con el símbolo

de igual le indicamos Cuál es el nuevo

valor que queremos que tenga este

elemento del listado en este caso bolkan

aquí Nosotros le damos a indicar que el

primer elemento Ahora va a ser

vamos a guardar Y por supuesto que vamos

a duplicar esta línea y la vamos a

colocar justamente debajo y vamos a

eliminar estos paréntesis de corchete

vamos a guardar y ahora nos debería

devolver un listado donde el primer

elemento ya no va a ser volcán sino que

va a ser Así es que pinchamos acá

y ahora vemos que tenemos listado pero

el primer elemento ha sido modificado

antes era volkan y ahora es y los

siguientes siguen Exactamente igual

tenemos a pelusa tenemos a pulga y

tenemos a copito ahora supongamos que yo

quiero obtener una parte parcial de la

lista al igual que con el String

nosotros podemos utilizar una convención

o una nomenclatura bastante similar De

hecho no bastante similar es exactamente

la misma nosotros podemos indicar que

queremos desde el elemento cero y luego

de eso queremos tres elementos y si

nosotros imprimimos esto vamos a ver que

nos va a devolver los primeros tres

elementos nos devuelve dicho pelusa y

pulga ahora qué es lo que pasa si es que

yo omito el primer elemento en ese caso

python va a considerar que el índice de

la izquierda como nosotros lo omitimos

va a tomar que es por defecto 0 Así que

si nosotros imprimimos esto nos va a

seguir devolviendo lo mismo dicho pelusa

y pulga y va a ocurrir Exactamente lo

mismo si es que nosotros eliminamos el

elemento de la derecha y le indicamos

por ejemplo el índice de la izquierda

aquí yo le voy a colocar dos y como yo

estoy emitiendo el valor de la derecha

por defecto me va a tomar las longitud

del arreglo o en este caso el último

elemento vamos a pinchar acá y vemos

ahora que tenemos a pulga y también

tenemos a copito acuérdense que el

elemento de la izquierda es el índice

del arreglo en el cual nosotros queremos

comenzar a recortar este arreglo y el de

la derecha vendría siendo hasta donde yo

voy a llegar ahora qué es lo que ocurre

si yo decido utilizar por ejemplo un

índice negativo pongamos por ejemplo -1

a ver cuál es el elemento que este me va

a devolver en este caso me está

devolviendo copito al igual que los

strings si nosotros estamos utilizando

los índices negativos lo que hará será

venir okay cero vendría siendo volcán -1

vendría siendo uno a la izquierda o no

hay nada a la izquierda así que me voy

al final de la lista en este caso

vendría siendo copito si nosotros

colocamos menos dos nos va a devolver

pulga menos 3 nos va a devolver pelusa Y

así sucesivamente ahora qué ocurriría si

nosotros queremos por alguna razón

acceder solamente a los elementos pares

de un listado eso nosotros lo podemos

hacer redactando el siguiente código acá

nosotros vamos a escribir mascotas

nuevamente vamos a utilizar los

paréntesis cuadrados y aquí nosotros

vamos a hacer lo siguiente vamos a

colocar dos puntos dos puntos nuevamente

y le vamos a colocar el número 2 cuando

nosotros estamos colocando el número 2

le estamos diciendo toma el primer

elemento el siguiente sáltalo toma el

siguiente el siguiente sáltalo y toma el

siguiente vamos a guardar esto y lo

vamos a ejecutar entonces aquí nosotros

estamos tomando el primer elemento el

siguiente lo estamos saltando toma el

siguiente elemento pulga y el siguiente

sáltalo por eso nosotros tenemos acá

Este listado que dice y pulga

ahora por qué esta nomenclatura es tan

familiar porque esta está basada

exactamente en la misma que la anterior

nosotros podemos colocar acá el índice

del elemento en el cual nosotros

queremos comenzar Por ejemplo yo voy a

indicarle ahora que voy a comenzar desde

el índice 1 que vendría siendo pelusa

entonces toma pelusa salta pulga y

después toma copito vamos a ver cómo se

ve aquí tenemos toma pelusa salta pulga

y toma copito y como nosotros le

indicamos que tenía que comenzar desde

índice 1 ya no va a comenzar desde

volcán porque volkan es el índice cero

pelusa es el índice 1 entonces comienza

de este este se lo salta y luego vuelve

a tomar el siguiente elemento que

vendría siendo copito ahora y qué es lo

que ocurriría si es que yo tengo más

elementos Bueno en ese caso nosotros

podríamos colocar acá nuevamente un

número para indicarle Hasta cuánto

nosotros queremos llegar de los

elementos a seleccionar vamos a

mostrarles ahora un ejemplo un poco más

práctico de esta misma nomenclatura

vamos a comentar todos estos y acá abajo

vamos a crear un listado que se va a

llamar números y este va a ser igual a

list con un Range de 21 porque hasta 21

porque me interesa que también aparezca

el número 20 ahora si es que nosotros

imprimimos nuestro listado de números

vamos a ver que va a aparecer desde el 0

hasta el 20 hasta ahí estamos sumamente

bien Pero qué es lo que pasa si yo

quiero acceder solamente a los números

por ejemplo los impares en este caso

nosotros podemos utilizar el paréntesis

de corchete vamos a colocar nuevamente

los dos puntos y acá vamos a colocar el

2 vamos a ver qué es lo que esto nos

devuelve vamos a pinchar acá en play y

nos está devolviendo los pares pero yo

les dije que yo quería los números

impares entonces si yo quiero los

números impares tengo que indicarle que

tiene que comenzar un elemento después y

no desde el índice cero Así es que

nosotros nos venimos acá y colocamos el

uno y aquí nosotros pinchamos para

volver a ejecutar nuevamente nuestra

aplicación y ahora vemos que tenemos los

números del uno hasta el 19 que eso es

lo que nosotros queríamos ahora se puede

resolver esto de otra manera Por

supuesto que sí nosotros podemos

Sencillamente eliminar este uno nos

venimos nuevamente a la función de Range

y aquí en Range le vamos a indicar que

quiero que comiences desde el número uno

ahora si pinchamos vamos a ver que nos

devuelve Exactamente lo mismo pero

redactamos nuestro código de manera

diferente Este es el ejemplo clásico de

todos los caminos llegan a Roma nosotros

podemos escribir dos líneas de código

que son sutilmente diferentes pero que

hacen Exactamente lo mismo en este caso

devolverme los números impares Y qué es

lo que ocurriría si yo quiero también

los números pares pero en otro listado

bueno eso sumamente fácil vamos a

eliminar esto y aquí nosotros vamos

obtener los números pares Y si Quiero

los números impares duplico esta línea y

le voy a indicar que quiero que

comiences desde el índice 1 y ahora si

nosotros ejecutamos nuestra aplicación

ahora tenemos dos listados tenemos una

que va a contener los números pares y

otra que va a contener los números

impares pero hasta el 20

[Música]

en este vídeo Te voy a enseñar a

desempaquetar las listas Así es que nos

venimos acá al explorador nuevamente

vamos a crear un archivo que se va a

llamar 03 guión desempaquetar - listas

punto py enter vamos a cerrar nuestro

explorador y vamos a cerrar el archivo

anterior quedándonos con desempaquetar

listas y acá vamos a comenzar lo primero

que haremos será crear una lista en este

caso yo voy a decir que se va a llamar

números y va a contener el número uno

dos y tres ahora si nosotros quisiéramos

obtener cada uno de estos números o cada

uno de los valores que se encuentran

dentro de estas listas de manera que

nosotros podamos utilizarlas como

variables independientes tendríamos que

necesariamente según lo que hemos

aprendido hasta ahora hacer esto

crearíamos una variable que se va a

llamar primero y Esto va a ser igual a

números 0 voy a copiar y pegar esta

lista varias veces este elemento Perdón

esta línea y voy a colocar acá segundo

Aquí tengo que colocarle números 1 y

aquí tengo que Acceder al segundo índice

y por supuesto cambiar el nombre de la

variable a tercero y de esta manera

nosotros vemos que primero contiene el

valor de 1 segundo contiene el valor de

2 y 3º contiene el valor de 3 ahora esto

que nosotros estamos haciendo acá es feo

es horrible les voy a enseñar una manera

bastante más elegante de poder hacer

exactamente esto mismo vamos a colocar

acá un comentario que va a decir feo y

vamos a aprovechar también de comentar

todas estas líneas y les voy a mostrar

una mejor forma de poder hacer

exactamente esto mismo justamente más

abajo vamos a describir la variable de

primero luego vamos a colocar coma

después vamos a colocar segundo coma

nuevamente y después colocamos tercero y

aquí ya no colocamos más coma pero sí

vamos a colocar el símbolo de igual y

vamos a colocar nuestra lista de números

Esta es la forma corta que nosotros

tenemos para poder obtener cada uno de

los elementos que se encuentran dentro

de un listado ahora primero va a ser uno

segundo va a ser dos y tercero va a ser

3 profesor no les creo Bueno te lo voy a

mostrar vamos a imprimir esto escribimos

print primero segundo y tercero Ahora sí

vamos a guardar y vamos a ejecutar

nuestra aplicación y Los vemos que

tenemos los valores de uno dos y tres

viste te lo dije Ahora sí vamos a

continuar cerramos acá qué es lo que

ocurriría si yo por alguna razón

solamente necesito el primer elemento de

este listado que lo que ocurriría puedo

yo Sencillamente llegar y eliminar

absolutamente todo esto no no me deja de

hecho si es que yo guardo y aprovecho

también de eliminar segundo tercero que

se encuentra acá porque ya no los tengo

definidos y ejecuto esto me voy a dar

cuenta que esto me está arrojando un

error no podemos obtener solamente el

primer elemento de un listado o si

podemos Claro que sí podemos vamos a

venir acá nuevamente donde estamos

haciendo nuestro desempaquetado de la

lista y vamos a escribir lo siguiente

otros pero justamente antes al comienzo

de la definición de esta variable

nosotros vamos a colocar un asterisco y

ahora vamos a guardar con esto mismo

ahora si nosotros ejecutamos nuevamente

nuestra aplicación vamos a ver que ahora

sí estamos obteniendo el número uno el

primer elemento Entonces qué magia negra

está ocurriendo Acá está ocurriendo

Exactamente lo mismo cuando nosotros

definimos nuestras funciones que se va a

llamar por ejemplo

y nosotros le estamos pasando un

parámetro que contiene un asterisco al

comienzo aquí si nosotros pasamos por

ejemplo números nosotros ya sabemos que

números es un iterable que nosotros

podemos utilizar Ford para poder acceder

a todos los elementos que este contiene

y después nosotros podemos llamar a n

como 1 2 3 y finalmente esto lo que hará

será Tomar todos estos elementos

meterlos acá para que después nosotros

los podamos iterar utilizando un Ford

aquí nosotros estamos haciendo

Exactamente lo mismo estamos tomando

todos los elementos que se encuentran

dentro del listado a excepción del

primero y los estamos empaquetando

dentro de una lista Entonces esta lista

vendría teniendo el valor de en este

caso creo que era 2 y 3 mientras primero

sería el valor de 1 Vamos a eliminar

esto porque no lo necesitamos y vamos a

aprovechar también de imprimir otros

aquí no es necesario que nosotros

coloquemos el asterisco para poder hacer

referencia a otros Exactamente igual que

cuando nosotros definimos nuestras

funciones Ahora sí vamos a ejecutar y

vemos ahora que tenemos el valor de 1 y

después de eso tenemos una lista que

contiene el valor de 2 y contiene el

valor de 3 hasta ahora Estamos

funcionando perfecto Pero qué es lo que

ocurriría si por alguna razón ya no

tenemos un listado que contiene tres

elementos sino que ahora tenemos un

listado que también va a contener

números Pero va a tener el 1 el 2 el 3

el 4 el 5 el 6 El 7 el 8 el 9 y así

sucesivamente qué es lo que ocurriría si

yo necesito en este caso el primer y el

segundo elemento vamos a guardar primero

y vamos a verificar que nuestro código

siga funcionando claro aquí nosotros

tenemos ahora que el valor cambio ahora

es uno y el resto del listado se

encuentra en otros entonces Cómo podemos

acceder también al segundo elemento pues

muy fácil nosotros colocamos acá segundo

coma espacio y ahora tenemos el primer

elemento y el segundo elemento vamos a

imprimirlos aquí dentro de nuestra

consola escribimos acá segundo coma

espacio y ahora me va a imprimir el

primer elemento y el segundo elemento

los cuales son uno y dos vamos a

ejecutar nuestra aplicación y acá

nosotros tenemos uno y dos magia y

después todo el resto de nuestro listado

pero ahora qué ocurriría si por alguna

razón muy extraña nosotros necesitáramos

el primer elemento y el último elemento

de un listado Bueno eso es mucho más

fácil nosotros colocamos justamente

después de esta variable de otros que

está agrupando los elementos de nuestro

listado Aquí vamos a colocar coma

espacio último y eso lo que hará será

tomar el primer elemento y se lo va a

asignar a nuestra variable de primero

otros va a contener absolutamente

todo esto y último va a contener el

valor de 9 y aquí nosotros colocamos

último ahora sí que guardamos Y

ejecutamos nuevamente nuestra aplicación

vamos a ver ahora que me está mostrando

el valor de 1 y el de 9 y ahora podría

yo obtener el penúltimo y el segundo

número utilizando también esta sintaxis

vamos a verlo vamos a escribir acá

segundo coma y después de esto vamos a

colocar pu solamente para que sea más

fácil de escribir y Que aparezca todo el

código en la pantalla entonces en lugar

de primero vamos a colocar segundo Y en

lugar de último vamos a colocar en U

ahora vamos a guardar y vamos a ejecutar

y aquí nosotros vemos cómo tenemos el

segundo número y también el penúltimo

número y todo el resto de los elementos

que se encuentran dentro del listado se

encuentran agrupados dentro de esta

variable llamada otros y qué podemos

hacer con esta variable llamada a otros

podemos tirarla Confort pero la

iteración de los elementos de un listado

ya es materia de nuestro siguiente video

[Música]

en este vídeo les voy a enseñar a iterar

los elementos de un listado para eso nos

vamos a venir acá a nuestro explorador y

vamos a crear un nuevo archivo que se va

a llamar 04 guión iterar guión listas

punto p y griega vamos a cerrar el

archivo anterior y también ocultar

nuestro explorador y Aquí vamos a crear

el siguiente listado mascotas y Esto va

a ser igual a pelusa pulga Felipe y

Chanchito feliz vamos a guardar y vamos

a la línea de más abajo la grasa que

tienen las listas es que estas son

iterables saben que también es

literaerable un String saben que también

es hidrable el resultado de la función

Range y con estos Nosotros hemos

trabajado con el operador for Así es que

vamos a utilizar Ford para poder iterar

todos los elementos de nuestra lista

mascotas Así que nos vamos a venir acá y

vamos a escribir Ford espacio mascota in

mascotas dos puntos y acá nosotros vamos

a imprimir la mascota que estamos

iterando en este momento Así que ahora

vamos a pinchar en este botón y aquí

podemos ver que tenemos Apple usa

tenemos a pulga Tenemos también a Felipe

y también a Chanchito feliz ahora qué es

lo que pasa si nosotros dentro de esta

iteración quisiéramos también poder

Acceder al índice del elemento que

nosotros estamos iterando Bueno la

verdad es que de esta manera nosotros no

lo podemos hacer pero lo que sí podemos

hacer es pasarle mascotas a una función

que nos devuelva uniterable Entonces qué

función vamos a ver ahora la función que

vamos a ver ahora se llama

enumerate y le vamos a pasar como

argumento mascotas y ahora exactamente

qué es lo que devuelve esta función de

enumerate bueno eso lo vamos a ver

inmediatamente acá con este print que

acabamos de colocar Ahora sí vamos a

ejecutar nuestro código y vamos a ver

que ahora nos está devolviendo lo

siguiente nos estás devolviendo algo que

pareciera que tiene unos paréntesis

redondos es casi como el llamado de una

función bueno Esto se le conoce como

tupla y una tupla es un tipo de dato que

nosotros vamos a ver más adelante lo

importante que tienen que saber de estas

tuplas es que nosotros podemos acceder a

estos elementos Exactamente igual que

como un listado esto quiere decir yo

aquí dentro de mascota puedo abrir los

paréntesis cuadrados puedo colocar un

cero voy a guardar voy a volver a

ejecutar mi aplicación y vamos a ver que

ahora me está devolviendo el primer

elemento que se encuentra dentro de esta

Tula y si es que yo coloco acá uno no

aquí lo que va a empezar a hacer es

devolverme los nombres de mis mascotas

aquí yo tengo pelusa pulga y bueno y

todas las mascotas hacia abajo entonces

qué podemos hacer nosotros justamente

con lo que nos está devolviendo

enumerate Bueno vamos a anotar algo

justamente acá arriba ustedes recuerdan

que Vimos una forma de poder

desempaquetar las listas cuando nosotros

teníamos por ejemplo primero segundo y

esto era igual a una lista que contenía

los valores de 1 y 2 bueno Esto es

exactamente lo mismo que nosotros

podemos hacer con las duplas Entonces

nosotros vamos a poder tomar todos los

elementos que nos está devolviendo la

función de numerate que esto Finalmente

nos está devolviendo un listado de tu

aquí nos devuelve un listado de tuplas

nosotros vamos a poder tomar por cada

una de sus iteraciones con Ford cuando

nosotros vengamos acá vamos a poder

tomar el primer elemento que vendría

siendo el primero el índice y de X vamos

a colocarte y el segundo vendría siendo

el nombre vamos a colocarle n Así es que

nosotros podemos hacer exactamente eso

mismo así es que aquí donde dice mascota

justamente antes vamos a indicar índice

coma espacio y ahora ya no necesitamos

colocar acá los paréntesis cuadrados

para poder llamar a un índice de la Tula

ahora basta con que nosotros

Sencillamente acá dentro de nuestro pin

coloquemos índice coma mascota y ahora

cuando ejecutemos nos va a mostrar el

índice del elemento que nosotros estamos

iterando y también el elemento mismo que

nosotros estamos iterando y de esta

manera es como nosotros podemos acceder

a los índices de una lista vamos a

aprovechar de eliminar esto guardamos y

este sería el código final

[Música]

[Aplausos]

en este vídeo les voy a enseñar a buscar

elementos dentro de un arreglo para eso

vamos a tomar esta primera línea la

vamos a copiar y vamos a crear un nuevo

archivo del cual se va a llamar 05 guión

Buscar guión elemento punto py Ahora sí

vamos a cerrar el explorador y también

el archivo anterior y ahora lo que

haremos será pegar la línea anterior que

copiamos ahora vamos a irnos justamente

después si nosotros quisiéramos

encontrar un elemento Dentro de este

listado nosotros podemos hacer uso del

método Index entonces acá nosotros

escribimos mascotas punto Index y acá

nosotros podemos escribir Cuál es el

elemento que nosotros estamos buscando

para que este nos devuelva el índice

siempre y cuando este exista entonces yo

voy a colocar acá entre comillas dobles

voy a buscar a pulga y esto por supuesto

lo vamos a imprimir ahora vamos a

guardar y lo vamos a ejecutar Perfecto

aquí nos dice que este se encuentra

dentro del índice 1 de un arreglo ahora

qué es lo que ocurriría si nosotros en

de buscar a pulga buscáramos algún

elemento que no existe Como por ejemplo

podría ser a volksgang ahora si nosotros

guardamos vamos a ejecutarlo vamos a ver

que en este caso este nos está mostrando

un error en otros lenguajes de

programación Esto es lo que debéis hacer

es devolvernos menos uno pero en el caso

de python esto no es así si nosotros no

queremos que esto nos arroje un error

necesariamente vamos a tener que revisar

primero si es que el elemento se

encuentra dentro del listado Y eso

nosotros lo hacemos escribiendo un

sencillo If y aquí nosotros vamos a

escribir lo que nosotros estamos

buscando por ejemplo ifgang in mascotas

dos puntos y ahora en el caso que éste

se encuentre si lo va a imprimir acá

nosotros podemos ver de que este no se

encuentra por eso no imprimido

absolutamente nada pero si nosotros lo

agregamos vamos a ver que ahora si

ejecutamos nuestro código no nos va a

funcionar porque aquí dentro de este If

Se nos olvidó agregar la f Así que aquí

vamos a escribir volksgang guardamos

volvemos a ejecutar y ahora vemos que

nos ha devuelto el índice 3 que es

justamente el que nosotros estamos

buscando este cero uno dos y 3 ahora qué

podemos hacer nosotros para contar

Cuántas veces existe algo dentro de un

arreglo Por qué si es que yo llego a

colocar por ejemplo como segundo

elemento también boltgang y ejecuto esto

que se encuentra acá abajo vamos a ver

qué es lo que nos muestra nos va a

indicar que volvegan se encuentra dentro

del índice 1 pero Nosotros sabemos que

se encuentra dentro del índice 1 pero

también se encuentra dentro del índice 3

Entonces qué podemos nosotros hacer en

este caso tenemos que contar Cuántas

veces se encuentra wolfgang dentro de

este arreglo Así es que aquí lo que

vamos a hacer es que vamos a imprimir

mascotas punto count y count es un

método Así es que aquí nosotros tenemos

que pasarle qué es lo que nosotros

estamos buscando y lo que estamos

buscando en este caso es volcán Ahora sí

podemos ejecutar y podemos ver que

aparece dos veces dentro de nuestro

listado y la primera ocurrencia que

encontró es solamente el primer elemento

en este caso nosotros estamos viendo que

tenemos un elemento duplicado dentro de

esta lista Por ende nosotros si queremos

trabajar con una lista que se encuentra

más limpia o con datos Ya trabaja

necesariamente vamos a tener que

eliminar alguna de estas dos ocurrencias

cualquiera de las dos de preferencia la

primera entonces para eso nosotros

tenemos que aprender a agregar y

eliminar elementos dentro de un arreglo

Y eso es materia de nuestro siguiente

video

en este vídeo vamos a ver cómo Podemos

agregar y eliminar elementos a un

listado para eso nosotros nos vamos a

venir nuevamente acá a nuestro

explorador y vamos a crear un nuevo

archivo que se va a llamar 06 guión

agregando guión eliminando punto py

Ahora sí Cerramos el explorador también

el archivo anterior y ahora sí podemos

continuar para eso nosotros vamos a

pegar nuevamente el listado que nosotros

teníamos antes el de las mascotas aquí

nosotros tenemos nuevamente a pelusa

pulga Felipe y Chanchito feliz vamos a

aprovechar también de agregar a volkan

una vez y vamos a agregar también a

pulgas justamente después de Felipe

ahora vamos a separar esto en múltiples

líneas para que sea más fácil de leer y

ahora sí vamos a continuar en el caso

que yo quiera agregar elementos a un

listado pero yo los quiera agregar en

algún índice en particular Como por

ejemplo podría ser en el índice número 1

este vendría siendo 0 Entonces lo yo lo

que quiero hacer es correr todo esto

hacia abajo hacer espacio en el índice 1

y aquí asignarle un nuevo valor en ese

caso podemos hacer uso del método de

insert Así es que acá vamos a escribir

mascotas punto insert después de eso

tenemos que indicarle el índice donde

nosotros queremos agregar el elemento

Así es que acá nosotros vamos a escribir

uno espacio seguido del valor que

nosotros queremos ingresar dentro de ese

índice aquí nosotros vamos a colocar

comillas dobles y le vamos a indicar el

nombre de otra mascota Melvin y vamos a

guardar ahora vamos a imprimir nuestra

lista de mascotas vamos a guardar nos

venimos acá y vemos que tenemos a volcán

y también tenemos a Melvin justamente

después de volcán que vendría siendo el

índice cero aquí tenemos índice 1 donde

hemos agregado a Melvin Ahora sí vamos a

cerrar ahora en el caso que yo quiera

agregar un elemento al final de Mi

listado nosotros podríamos querer

utilizar acá el -1 pero les voy a

mostrar una manera bastante más elegante

de hacer exactamente esto mismo acá

nosotros vamos a escribir mascotas punto

append abrir cierra paréntesis y acá

nosotros tenemos que indicar cuál es el

elemento que nosotros queremos agregar

al final de nuestra lista y yo le voy a

indicar que va a ser Chanchito triste

para que acompañe también a chanchitos

feliz entonces así Chanchito triste no

se va a sentir tan triste en fin sigamos

ahora sí vamos a guardar y vamos a

ejecutar nuevamente el código y acá

nosotros vemos que tenemos a Chanchito

triste que ya no está tan triste porque

se encuentra cerca de Chanchito feliz

que chiste más malo en fin ahora lo que

queremos hacer es ir eliminando

elementos que se encuentran dentro de un

listado Cómo podemos hacer eso bueno lo

que haremos será presionar un par de

entes acá para bajar un poquito más para

que sea más fácil de leer vamos a

deslizar esto hacia abajo y acá es donde

vamos a escribir mascotas punto remove y

acá Nosotros le tenemos que indicar cuál

es el elemento que nosotros queremos

eliminar aquí no va el índice no no no

aquí no va el índice aquí va el elemento

que queremos eliminar Entonces en este

caso si nosotros quisiéramos eliminar

por ejemplo vamos a cualquier evento

queremos eliminar alguno que esté

duplicado ya tenemos acá a pulgas

duplicado y queremos eliminar la primera

ocurrencia de pulga nosotros lo que

tenemos que hacer acá es escribir

derechamente pulga y guardamos ahora ojo

algo muy importante con el método de

remove este solamente elimina el primero

Así es que si es que existe más de

alguna ocurrencia y queremos eliminarlas

todas vamos a tener que empezar a contar

Cuántas veces aparece ese elemento y

luego nosotros vamos a tener que

comenzar a borrarlo utilizando la

sintaxis de remove ahora si ejecutamos

nuestro código vamos a ver que tenemos a

pulgas Solamente una vez Vamos a

continuar Qué pasaría si nosotros

quisiéramos eliminar solamente el último

elemento de un arreglo para eso nosotros

podemos utilizar pop y acá no tenemos

que pasarle absolutamente nada acá nos

está diciendo que le podemos pasar un

índice Pero eso lo vamos a ver después

Ahora sí vamos a ejecutar nuestro código

y vamos a ver que ya no se encuentra

Chanchito triste sino que solamente está

Chanchito feliz como el último elemento

Pero qué pasa si yo quiero eliminar un

elemento en particular en ese caso yo sí

le puedo pasar el índice aquí a pop y

cuando yo haga eso en este caso yo le

estoy pasando el índice 1 debería sacar

a Melvin Así es que vamos a ejecutar y

acá nosotros vemos que tenemos a

volksband tenemos a pelusa pero ya no

aparece Melvin Así es que lo vemos

eliminado con éxito utilizando el método

de pop ahora existe también otro método

que nosotros podemos utilizar para poder

eliminar elementos dentro de un arreglo

Y eso es utilizando la palabra reservada

de del espacio seguido de el listado al

cual Nosotros le queremos eliminar el

elemento y acá le tenemos que pasar el

índice supongamos que yo le quiero

quitar el primer elemento que vendría

siendo bolcant Ahora yo cuando guarde y

vuelva a ejecutar esto vamos a ver que

ahora volvegan ya no se encuentra en el

listado más abajo y finalmente si yo

quisiera limpiar completamente este

arreglo yo lo que tengo que hacer es

escribir el nombre del arreglo seguido

de Clear y ahora sí que yo guardo y

pincho acá vamos a ver que ahora me está

devolviendo un listado completamente

vacío y en nuestro siguiente vídeo vamos

a ver cómo podemos ordenar los elementos

de un arreglo

[Música]

en este vídeo Te voy a enseñar a ordenar

tus listas para eso nos venimos acá

creamos un nuevo archivo que se va a

llamar 07 ordenando guión listas.pi

Cerramos el explorador Cerramos el

archivo anterior y comenzamos para eso

vamos a crear una nueva lista que se va

a llamar números y esta Va a contener

números al azar escribe todos los que tú

quieras y ya que tenemos esta lista

Ahora sí podemos comenzar lo primero que

nosotros tenemos que hacer es llamar al

método de short en ese caso nosotros

Sencillamente llamamos a números punto

short y luego de eso podemos imprimir

nuestra lista de números Ahora sí vamos

a guardar y vamos a ejecutarlo y aquí

nosotros podemos ver que nos está

mostrando nuestra lista completamente

ordenada Tenemos uno dos cuatro

veintidós 45 y 75 ahora si nosotros

quisiéramos necesariamente ordenar este

mismo listado pero al revés nosotros

podemos hacerlo pasándole un siguiente

argumento a esta función de short si

quieres saber cuáles son los argumentos

que le puedes pasar Sencillamente

eliminas los paréntesis y vuelves a

colocar el Abre paréntesis y aquí nos va

a mostrar estas dos opciones aquí

nosotros tenemos aquí que ese lo vamos a

ver inmediatamente y después tenemos

rivers lo que nosotros queremos hacer es

pasarle el argumento pero utilizando el

nombre del parámetro rivers Así que nos

venimos acá escribimos reverse y esto

Nosotros le vamos a colocar el valor de

true ahora si nosotros volvemos a

ejecutar vamos a ver que tenemos ahora

nuestro listado ordenado pero en orden

descendente Ahora sí vamos a cerrar

existe otro método que nosotros podemos

utilizar para poder ordenar los

elementos de una lista Así es que voy a

comentar esta línea que se encuentra acá

y voy a llamar ahora a una función que

se llama shortted y aquí lo que nosotros

tenemos que hacer es pasarle el iterable

que nosotros queremos ordenar que en

este caso va a ser números ahora la

diferencia entre sorted y el método de

short es que sorted va a devolver una

nueva lista esto quiere decir que no va

a afectar el listado anterior A

diferencia de short lo que hará será

ordenar este mismo listado vamos a ver a

qué me refiero voy aquí a imprimir

números 2 vamos a duplicar esta línea y

acá nosotros vamos a imprimir números 2

entonces llamamos a sorted se lo

asignamos a números 2 y esta después lo

vamos a imprimir acá en la línea 6 Ahora

sí ejecutamos esto y vamos a ver que

tenemos primero números que esta sigue

manteniendo el orden completamente

normal pero luego cuando Nosotros

llamamos asorted y le pasamos números

este Crea una nueva lista la cual está

ordenada entonces números no ha sido

afectado sino que lo que hizo la función

de shortec fue devolver una nueva lista

la cual fue asignada números 2 por eso

números se encuentra todavía no ordenado

Pero números 2 se encuentra ordenado esa

es la diferencia entre short y sorted y

ahora si nosotros quisiéramos cambiar el

orden en sorted lo que tenemos que hacer

es pasarle nuevamente reverse y le

pasamos el valor de true y ahora si

nosotros guardamos y ejecutamos vamos a

ver ahora como nuestra nueva lista

números 2 se encuentra ordenada pero al

revés Ahora sí podemos cerrar esto ahora

qué ocurriría si nosotros intentaremos

ordenar algo que sea un poco más

complejo y no tenga solamente números

sino que por ejemplo sea un listado que

contenga otras listas adentro vamos a

ver eso inmediatamente nos vamos a venir

acá y vamos a escribir acá usuarios y

esto solamente va a contener un listado

que cada uno de sus elementos va a ser

el identificador del usuario y el nombre

del usuario Entonces vamos a colocar acá

4 y el nombre del usuario va a ser

Chanchito el siguiente elemento va a ser

otro elemento del arreglo aquí nosotros

vamos a tener un uno y el siguiente

usuario va a ser Felipe y vamos a

agregar otro usuario más que va a ser

con ID 5 y su nombre va a ser pulga

ahora vamos a guardar vamos a ordenar

esto un poco mejor y ahora lo que

haremos será Llamar al método de short

de nuestra lista de usuarios Así es que

llamamos a usuarios short y vamos a

imprimir ahora nuestra lista de usuarios

para ver si es que la ordena con éxito

vamos a ejecutar esto y acá nosotros

vemos que nos ha ordenado nuestro

listado con éxito sin necesidad de que

nosotros hagamos algo más Ahora esto No

necesariamente va a pasar así por qué

Porque en este caso yo lo que estoy

haciendo Es que le estoy pasando el ID

al comienzo que es lo que pasa si es que

yo se lo paso al final vamos a ver vamos

a cambiar el orden de esto pasando

absolutamente todos los ID para el final

y vamos a guardar y ahora vamos a

ejecutar nuevamente nuestro Script y

aquí nosotros vemos que el listado no

está ordenando todos los elementos que

se encuentran dentro de él entonces

Nosotros acabamos de aprender algo lo

primero si nosotros tenemos un listado y

este listado además contiene listados o

también podría contener tuplas que esas

se colocan con los paréntesis siempre y

cuando el primer elemento sea algo

ordenable en ese caso sí lo va a ordenar

pero en este caso como nosotros

colocamos el número al final

necesariamente le vamos a tener que

indicar a short como nosotros queremos

que ordene estos elementos de esta lista

Entonces cómo nosotros podemos hacer eso

pasándole una función aquí a nuestro

método de sorteo Así es que vamos a

definir ahora una función la cual se va

a llamar ordena y esta va a recibir uno

de los elementos que tiene este listado

entonces aquí vamos a colocar elemento Y

en este caso este elemento que aparece

acá vendría siendo cada uno de estos que

parece acá y lo que tiene que hacer esta

función de ordena es que tiene que

retornar el elemento por el cual

nosotros queremos que este listado sea

ordenado por defecto este lo que hace es

que retorna el primer elemento en el

caso que se encuentre una lista Así es

que lo que vamos a hacer acá es retornar

elementos pero ya no le quiero devolver

el primer elemento sino que aquí Quiero

devolverle el de índice 1 o sea el

segundo elemento ahora si nosotros vamos

a guardar y le vamos a pasar ordena a

nuestro método de short ahora si

nosotros vamos a ejecutar y aquí estamos

viendo que el método de short no toma

absolutamente ningún argumento

posicional esto significa que nosotros

necesariamente tenemos que indicarle el

nombre del parámetro o sea en este caso

tenemos que ver cuál es el nombre del

parámetro vamos a eliminar esto vamos a

colocar nuevamente el Abre paréntesis y

aquí nosotros vemos que dice key Así es

que acá nosotros tenemos que escribir Ke

igual y ahora sí le podemos pasar ordena

Ahora sí vamos a ejecutar y ahora

nosotros podemos ver cómo se encuentra

ordenado nuestro listado tenemos 14 y

después tenemos 5 si nosotros

quisiéramos que esto fuese al revés

tenemos que pasarle un segundo argumento

que va a ser reverse el nombre del

parámetro y aquí Nosotros le pasamos

true ahora podemos volver a ejecutar y

ahora tenemos nuestro listado ordenado

pero al revés Ahora aquí hay algo que

nosotros hicimos que la verdad es que se

ve bastante feo Qué es crear una función

justamente antes de llamar a Sorto

entonces cada vez que nosotros queramos

ejecutar short significa que

necesariamente podríamos tener que crear

una nueva función afortunadamente esto

no va a ser necesario porque en el

siguiente vídeo les voy a enseñar Cómo

podemos hacer exactamente esto mismo

pero de una manera mucho mucho más

elegante

[Música]

en este vídeo Te voy a enseñar a

utilizar las funciones lambda o las

expresiones Landa o si que viene de

algún otro lenguaje de programación lo

más probable es que tú conozcas esto

como funciones anónimas vamos a verlas

nos venimos acá y lo que alcanzamos a

ver en el vídeo pasado fue definir una

función y luego pasársela a nuestro

método de short con el parámetro

nombrado key pero algo sumamente

importante que nosotros hicimos A

diferencia de nosotros Llamar la función

fue que nosotros no colocamos acá el

abre y cierra paréntesis por qué porque

nosotros no queremos ejecutarla lo que

nosotros queremos hacer es pasar una

referencia por eso Nosotros tomamos

solamente el nombre y lo pasamos acá sin

ejecutarla y sin pasarle absolutamente

ningún argumento Por qué Porque short se

va a encargar por debajo por la

implementación de short se va a encargar

de pasarle elemento cuando este necesite

Llamar a la función de ordenar ahora

vamos a ver cómo podemos escribir esto

mismo pero de una manera mucho más

elegante para eso nosotros vamos a sacar

esto que dice ordena y vamos a escribir

lo siguiente lambda espacio y seguido de

eso tenemos que indicarle dos valores el

primero vendría siendo los argumentos

que recibe esta función y seguido de eso

tenemos que indicarle dos valores el

primero vendría siendo los parámetros

que recibe la función y seguido de eso

nosotros tenemos que indicarle el

contenido de la función pero en este

vídeo Nosotros le vamos a indicar el

valor de retorno valor retorno entonces

aquí Nosotros le vamos a indicar Cuáles

son los parámetros y acá Nosotros le

vamos a indicar el valor de retorno

entonces aquí en parámetros le vamos a

indicar que es el elemento pero para

escribirlo de manera más corta vamos a

colocar solamente el ahora el valor de

retorno dentro de nuestra implementación

de esta función es elemento y le estamos

pasando el segundo elemento por el

índice que en este caso vendría siendo

el índice 1 o sea el segundo elemento de

este listado elemento Así es que

nosotros vamos a eliminar esto y vamos a

describir acá él Abre paréntesis

cuadrado y le vamos a pasar el valor de

uno y ahora sí nosotros vamos a guardar

cuando nosotros estamos utilizando las

funciones lambda nos ahorramos tener que

utilizar la palabra reservada de Def

entregarle un nombre a la función nos

ahorramos también tener que pasarle los

paréntesis además también nos ahorramos

tener que pasarle la palabra reservada

de return Y ustedes dirán pero profesor

Acaso no será esto mala práctica de

estar constantemente escribiendo

funciones anónimas si es que en tu

código Solamente tienes funciones lambda

Sí pero en este caso cuando tú vas a

utilizar una función una única vez y no

la vas a volver a utilizar nunca más no

hay absolutamente ningún problema en

pasar una función lambda en tu código y

en este caso lo que está haciendo esta

función lambda es Sencillamente Acceder

al segundo elemento de un listado Así es

que nosotros ahora podemos Eliminar todo

esto vamos a guardar y vamos a ejecutar

nuevamente nuestra aplicación y aquí

nosotros vemos Que nuevamente aparece

nuestro listado pero ordenado al revés y

aparece al revés porque nosotros tenemos

habilitada esta opción de reverse vamos

a ejecutar de nuevo y aquí nosotros

vemos como finalmente tenemos ordenado

Ahora sí nuestro listado utilizando

expresiones lambda

[Música]

en este vídeo Te voy a enseñar la

comprensión de listas en python para eso

nos vamos a venir nuevamente a nuestro

editor y vamos a copiar esta lista de

usuarios Ahora nos vamos a venir acá a

nuestro explorador y vamos a crear un

nuevo archivo el cual se va a llamar 08

guión comprensión guión listas punto y

vamos a cerrar el explorador Cerramos el

archivo anterior y continuamos acá

nosotros vamos a pegar nuestro listado

anterior y vamos a hacer lo siguiente de

este listado de usuario que nosotros

tenemos vamos a querer obtener solamente

el nombre Porque porque en este caso el

identificador que se encuentra acá no

nos interesa Así es que lo que queremos

hacer es tomar esta lista de usuarios

vamos a aplicarle una transformación

para que nos devuelva una lista de

nombres y finalmente vamos a pasar de un

listado de usuarios a un listado de

nombres que en este caso vendrían siendo

los nombres de usuarios como nosotros

podríamos hacer esto con lo que nosotros

hemos aprendido hasta ahora

perfectamente podríamos utilizar un

método de Ford y Confort nosotros

podríamos iterar este listado crear una

variable que se encuentra fuera que se

llamaría en este caso nombres y con el

método de append nosotros iríamos

agregando cada uno de estos nombres voy

a mostrarles cómo nosotros haríamos eso

haciendo exactamente uso de Ford

Entonces nos venimos acá creamos una

variable que se va a llamar nombres y

esta Va a ser igual a una lista vacía

aquí nosotros vamos a escribir Ford

usuario in usuarios y vamos a llamar a

nombres.apent de usuario pero vamos a

sacar el primer elemento ahora lo vamos

a imprimir y vamos a ejecutar nuestra

aplicación y aquí nosotros vemos que

tenemos un nuevo listado que dice

Chanchito dice Felipe y dice pulga sin

embargo existe una forma bastante

bastante más elegante de poder redactar

exactamente esto mismo e incluso en una

sola línea así que vamos a hacer eso

mismo vamos a tomar todo este código y

lo vamos a comentar y ahora vamos a

escribir lo siguiente nombres va a ser

igual a y aquí nosotros vamos a abrir un

paréntesis de corchete en este caso lo

que nosotros estamos haciendo es crear

una nueva lista ya dentro Nosotros le

vamos a indicar Cómo nosotros queremos

crear esta nueva lista la sintaxis que

nosotros tenemos que utilizar es

expresión Ford el ítem que nosotros

estamos iterando en los ítems esta

sintaxis nosotros ya la conocemos es

básicamente un Ford donde acá Nosotros

le tenemos que indicar la lista que

nosotros estamos iterando después Pues

el nombre que nosotros le vamos a

indicar a cada uno de los elementos que

estamos citando y finalmente la

expresión que nosotros le vamos a

aplicar o la transformación que le vamos

a aplicar a este elemento para que

finalmente sea asignado a la lista de

nombres Entonces vamos a cambiar esto de

ítems por usuarios que vendría siendo

nuestra lista después item lo cambiamos

por usuario que vendría siendo un

usuario entonces en la primera iteración

vendría siendo Chanchito y después acá

Nosotros le tenemos que indicar cuál es

el valor que nosotros queremos que

retorne así es que acá nosotros vamos a

llamar a usuario y vamos a abrir

paréntesis de corchete y le vamos a

indicar cuál es el elemento que queremos

que este no se retorne en este caso

nosotros tenemos que el primer elemento

es Chanchito y el segundo elemento es 4

o sea el primer elemento es el nombre y

el segundo elemento es el id entonces

acá nosotros vamos a colocar un cero y

vamos a guardar ahora vamos a imprimir

esto mismo nombres vamos a guardar y

vamos a ejecutarlo y ahora vemos Que

obtuvimos Exactamente lo mismo pero de

una manera bastante más concisa y

bastante más elegante de esta manera

nosotros podemos tomar una lista que en

este caso vendría siendo usuarios y le

podemos aplicar una transformación a

cada uno de los elementos dependiendo de

qué es lo que nosotros queramos en este

caso en esta lista nosotros queríamos

obtener el primer elemento Así es que

nosotros accedimos al primer elemento

que contenía la lista que contiene el

usuario son un poco extraño pero en el

fondo nosotros tenemos una lista que

contiene usuarios y nosotros le estamos

indicando que queremos Acceder al primer

elemento ahora vamos a hacer esto mismo

pero en lugar de transformar nuestro

listado lo que vamos a hacer es

filtrarlo entonces para eso nosotros

vamos a crear nuevamente nombres y Esto

va a ser igual a nuevamente un

paréntesis de corchete y aquí nosotros

tenemos que utilizar exactamente la

misma convención es expresión Ford item

in items entonces la lista que nosotros

queremos instalar es usuarios después a

cada uno de los elementos le vamos a

indicar que se llama usuario Recuerden

que en este caso usuario es una lista

que contiene dos elementos contiene un

nombre vamos a colocarlo como n y tiene

un ID que en este caso es un número

ahora lo que yo quiero hacer en esta

instancia es filtrar yo no quiero

aplicarle una transformación a cada uno

de los elementos voy a colocar acá

filtrar Entonces yo lo que quiero es que

me retorne el elemento completo así es

que acá yo voy a colocar usuario pero

aquí yo le tengo que colocar una

condición a los elementos que me va a

devolver entonces solamente Devuélveme

el elemento siempre y cuando cumpla con

una condición Así es que yo aquí en

usuarios voy a presionar espacio y

espacio usuario 1 es mayor a 2 entonces

en este caso lo que estamos haciendo es

accediendo al usuario como usuario es

una lista que el primer elemento es el

nombre y el segundo ID estamos indicando

accede al ID del usuario y después de

eso pregunta si es que ese ID es mayor

que 2 y solamente retorna esos elementos

Así es que ahora si nosotros comentamos

esta línea de acá arriba y ejecutamos

nuestro código nos debería devolver

solamente el elemento de Chanchito y

pulga vamos a ejecutar esto y aquí

nosotros tenemos el elemento de

Chanchito y utilizando la comprensión de

listas nosotros podemos crear otras

listas a partir de una lista ya

existente con esta comprensión de listas

nosotros podemos modificar los elementos

de una lista y también los podemos

filtrar Pero además nosotros podemos

utilizar las dos operaciones

simultáneamente podemos modificar una

lista Y filtrarla utilizando la misma

comprensión de lista para eso nosotros

vamos a comentar esta línea vamos a

copiarla completamente y la vamos a

pegar acá vamos a descomentarla ahora y

lo mismo que nosotros hicimos acá arriba

lo vamos a aplicar También acá aquí

nosotros hicimos transformación aquí

nosotros filtramos y acá vamos a filtrar

y transformar y para poder filtrar y

transformar tenemos que aplicar las dos

operaciones Aquí voy a volver nuevamente

y le voy a colocar que tengo que Acceder

al índice cero y Por ende lo que me va a

devolver va a ser el índice cero Ahora

sí podemos ejecutar y podemos ver que mi

lista fue filtrada y además fue

transformada

[Música]

cuando ustedes les toque ver código en

otras aplicaciones lo más probable es

que ustedes también vean otras formas de

poder realizar esto mismo que nosotros

vimos en el vídeo pasado que vendría

siendo las listas de comprensión ustedes

verían una alternativa y estas

alternativas tienen unos nombres muy

específicos que son en el primer caso

vamos a subir acá esta operación que

nosotros estamos realizando ustedes la

van a conocer con el nombre de mapa y

acá abajo está de filtrar ustedes la van

a conocer con el nombre de filter y en

el caso que ustedes quieran realizar map

y filter al mismo tiempo como en nuestra

lista de comprensión nosotros

necesariamente vamos a tener que

realizar esa misma operación en dos

pasos primero vamos a tener que filtrar

y luego vamos a tener que realizar la

operación ahora la forma sugerida sería

que ustedes utilizaran casi siempre las

listas de comprensión pero podría ser

que ustedes se tomen con código que

contengan los métodos también de filter

imap vamos a ver inmediatamente Cómo se

pueden utilizar estos métodos para que

ustedes sepan mantener estos códigos en

el caso que ustedes se los lleguen a

topar Así es que vamos a comentar esta

línea de acá y nos vamos a venir acá

abajo y vamos a escribir lo siguiente

nombres va a ser igual a una nueva lista

la cual debería tener algo de los

usuarios entonces lo que tenemos que

hacer es transformar a los usuarios para

transformar a los usuarios nosotros

tenemos que llamar a map y Maps como

podemos ver acá recibe una función la

función que nosotros le vamos a dar va a

ser una función lambda que está nosotros

la aprendimos hace dos videos atrás aquí

nosotros tenemos que pasarle un ítem que

en este caso vendría siendo un usuario

dos puntos y después el valor que

nosotros queremos retornar en este caso

vendría siendo usuario y aquí queremos

devolver el primer elemento o sea el

índice cero y después le tenemos que

indicar qué es lo que nosotros queremos

iterar en este caso van a ser los

usuarios guardamos sacamos estos dos

puntos que no sé porque los puse Ahora

sí guardamos Y si nosotros imprimimos

los nombres deberíamos ver lo mismo que

con las comprensiones de listas o listas

de comprensión aquí tenemos Chanchito

tenemos Felipe y también tenemos pulga

ahora vamos a ver cómo nosotros podemos

realizar la operación Pero de filter

vamos a realizar esto que aparece acá

arriba pero utilizando la función de

filter Así es que vamos a comentar

también esta línea y acá vamos a crear

un nuevo listado que va a ser menos

usuarios y Esto va a ser igual a una

lista a la cual Nosotros le vamos a

aplicarle función de filter y le tenemos

que indicar qué es lo que vamos a hacer

nosotros para poder dejar los elementos

Dentro de este listado entonces filter

recibe una función que va a ser lambda y

esta función lambda que nosotros le

estamos pasando a filter si es que

evalúa en true va a devolver el elemento

pero si evalúa en false no va a devolver

el elemento Así es que acá nosotros

vamos a colocar usuario índice 1 para

Acceder al ID y este le vamos a indicar

que tiene que ser mayor a 2 y seguido de

eso le tenemos que indicar cuál es la

lista que tiene que iterar que en este

caso va a ser usuarios ahora si nosotros

vamos a ejecutar nuestra aplicación nos

está indicando que nombres no está

definido y es porque se llama menos

usuarios Ahora sí guardamos ejecutamos y

ahora vemos que tenemos a Chanchito y

también tenemos de esta manera nosotros

podemos utilizar las funciones de donde

están aquí están filter imap para poder

ser exactamente lo mismo que nosotros

hicimos antes pero con las listas de

comprensión y la razón por la cual

nosotros vimos filter y también vimos

map es porque muchos desarrolladores que

prefieren la programación funcional van

a preferir utilizar map o filter y acá

va a ser netamente preferencia de

ustedes cual deciden utilizar si quieren

utilizar Maps o filter en lugar de la

comprensión de listas está bien no está

mal pero si prefieren ustedes utilizar

la comprensión de listas en lugar de map

y filter también está bien Ahora ustedes

saben cómo realizar exactamente la misma

operación con ambas formas

[Música]

en este vídeo Te voy a enseñar acerca

del tipo de dato tupla para eso nos

venimos nuevamente a nuestro explorador

y vamos a crear un nuevo archivo que se

va a llamar 09 guión tuplas.pe y ahora

sí Cerramos el explorador cerramos

también nuestro archivo anterior y ahora

sí comenzamos entonces una tupla es

exactamente lo mismo lo mismo lo mismo

lo mismo que una lista tiene solamente

una sutil diferencia Y es que no la

puedes modificar en lo absoluto esto

quiere decir no puedes agregar elementos

no puedes quitar elementos ni tampoco

los puedes modificar Pero tú si puedes

crear otras listas u otras tuplas en

base a tuplas ya existentes o sea puedes

crear nuevas tuplas pero no puedes

modificarlas ya existentes Entonces

vamos a definir una nueva dupla la cual

se va a llamar números y para nosotros

definir una dupla A diferencia de la

lista tenemos que utilizar los

paréntesis redondos y aquí yo le voy a

dar los números 1 2 y 3 y ahora sí vamos

a guardar ahora qué cosas podemos con

las duplas partiendo vamos a imprimirla

vamos a imprimir números nosotros

podemos concatenar dos tuplas para así

poder crear una nueva dupla vamos a

colocar aquí otros números que van a ser

cuatro cinco y seis y ahora si nosotros

ejecutamos nuestro código vamos a ver

ahora que nosotros tenemos una dupla que

va desde el 1 al 6 y si se fijan acá

nosotros tenemos estos paréntesis

redondos lo que nos indica a nosotros

que nosotros no queremos modificar este

listado o esta secuencia de números o

esta secuencia de elementos Entonces

cuando nosotros vamos a querer utilizar

las tuplas cuando nosotros no queramos

de manera accidental modificar los

elementos que se encuentran dentro de

algún listado Entonces como nosotros

podríamos crear una tupla en base a

algún listado que nosotros recibimos

Nosotros también podríamos hacer por

ejemplo vamos a crear un punto y este va

a ser en base a un listado que contiene

uno y dos pero yo quiero transformar

este listado a una Tula entonces lo que

hacemos Es que llamamos a la función

tuple seleccionamos toda la lista y

utilizamos abre y cierra paréntesis la

función de tuple recibe cualquier cosa

que sea si yo elimino esto y vuelvo a

presionar aquí abre y cierra paréntesis

Vamos a darnos cuenta que aquí nos está

indicando que recibe cualquier tipo de

dato que sea iterable esto quiere decir

también podemos nosotros pasarle un

String Ahora sí vamos a presionar un par

de veces control Z y con esto nosotros

podemos crear una tupla si nosotros

colocamos el mouse acá encima nos va a

indicar que hemos creado una variable la

cual se llama punto y que su tipo de

dato es tupla y esta lo que hace es que

contiene que su primer elemento es un

entero vamos a imprimir ahora punto y

ejecutamos y aquí nosotros vemos que

ahora tenemos esta lista que fue

transformada a una dupla finalmente

tenemos una tupla Ahora sí podemos

cerrar acá qué otras operaciones

nosotros podemos realizar con las duplas

básicamente todas las que nosotros

podemos realizar con las listas a

excepción por supuesto de las

operaciones que nos permiten a nosotros

poder modificar las listas Como por

ejemplo append o pop derechamente nos va

a entregar un error Es más veámoslo si

nosotros escribimos acá números pop

llamo a abrirse paréntesis Vamos a

darnos cuenta que ahora nos aparece esta

línea roja subrayándonos Por qué Porque

no podemos llamar a pop pero que si

podemos hacer nosotros podemos utilizar

esta forma de acceder a los elementos de

la tupla Por ejemplo yo puedo utilizar

los dos puntos y aquí le voy a colocar

un dos y esto se lo voy a asignar a una

nueva variable que se va a llamar menos

números y Esto va a ser igual a eso que

aparece ahí ahora sí que nosotros

imprimimos menos números y ejecutamos

acá nos vamos a dar cuenta que este nos

ha devuelto nuevamente una tupla por qué

porque esta operación que estamos

realizando nosotros acá no modifica

números sino que lo que hace es que nos

Crea una nueva lista la cual Nosotros le

podemos asignar aquí a menos números

Nosotros también podemos desempaquetar

las tuplas vamos a colocar acá primero

segundo y otros y Esto va a ser igual a

números si nosotros imprimimos esto

vamos a ver que los elementos el primero

y el segundo podemos acceder a ellos

pero del tercero en adelante ha cambiado

el tipo de dato ya no nos está

devolviendo una dupla nos está

devolviendo una lista también podemos

iterar las tuplas por n y números vamos

a imprimir n y Aquí vemos que podemos

imprimir absolutamente todos los

elementos de la tupla pero si nosotros

intentamos modificarla por ejemplo aquí

números e intento Acceder al primer

elemento y lo trato de cambiar por lo

que sea Al momento de yo guardar me va a

subrayar esto en rojo porque no podemos

modificar las tuplas lo único que

podemos modificar son las listas Así que

si por alguna razón tenemos que

modificar una tupla que no deberías

hacerlo pero si por alguna razón tienes

que modificar una dupla lo que tienes

que hacer en ese caso es crear una nueva

variable que se va a llamar lista

números y esta Va a ser igual a list y

acá Nosotros le pasamos nuestra tupla de

números y ahora sí nosotros podemos

modificar lista números el primer

elemento se lo voy a cambiar por

Chanchito feliz ahora podemos imprimir

lista números ejecutamos y aquí Nosotros

hemos modificado el elemento pero no

modificamos la tupla lo que hicimos fue

crear una lista en base a la tupla y

modificamos la lista pero no la dupla

[Música]

en este vídeo Te voy a enseñar a

utilizar los sets que en su traducción

al español vendría siendo algo muy

parecido a conjunto o grupo vamos a

verlos nos vamos a venir acá a nuestro

editor abrimos el explorador creamos un

nuevo archivo que se va a llamar 10

guión sets.p y cerramos el explorador

también Cerramos el archivo anterior y

vamos a dejar acá un comentario que va a

decir set significa grupo o conjunto y

esto ustedes lo pueden ver directamente

de la traducción de set al español ahora

sí vamos a comenzar Qué es un set un set

es una colección de datos que no se

puede repetir y que tampoco está

ordenada que quiere decir esto Si

nosotros intentamos crear un set por

ejemplo vamos a crear un primer set que

este va a ser igual a

1,1,2,2,3 y coma cuatro y si nosotros

intentáramos imprimir esto intentamos

imprimir Este primer set y ejecutamos

nuestra aplicación vamos a ver que

nosotros tenemos nuevamente este mismo

set pero que el número uno que se

encontraba duplicado lo sacamos al igual

que el número 2 tenemos solamente una

ocurrencia de cada uno de estos datos

que quiere decir esto Si es que por

alguna razón nosotros llegaremos a tener

datos duplicados en algún set Como por

ejemplo lo tenemos acá y los tenemos acá

Al momento de nosotros crear ese set

python se va a encargar de remover los

duplicados va a sacar este uno y también

va a sacar este 2 ahora cuál es la

gracia que tiene el set los sets se

pueden trabajar muy similar a cómo se

trabajan en las listas que quiere decir

esto nosotros podemos llamar a primer

punto a para poder agregar un elemento

aquí yo puedo colocar un 5 y también

puedo colocar un primer punto remove y

voy a pasarle el uno para poder eliminar

un elemento si nosotros ahora intentamos

imprimir esto colocamos primer y ahora

ejecutamos vamos a ver ahora que se

eliminó el número uno pero se agregó

también el número 5 que eso es

exactamente lo que nosotros estamos

haciendo estamos agregando y estamos

eliminando Pero esto es muy fácil

ustedes tienen que haber visto ya saben

inmediatamente qué es lo que hace esto

vamos a pasar algo mucho más entretenido

y también más complicado Así que vamos a

eliminar esto y ahora vamos a crear un

segundo set el cual va a ser por ahora

va a ser una lista la cual va a ser tres

cuatro y cinco ahora Nosotros sabemos

que si utilizamos los paréntesis

cuadrados estamos creando una lista y no

un set Entonces vamos a transformar esto

a un set Así que lo que vamos a hacer es

reemplazar nuestra variable de segundo y

vamos a indicar que esto se va a crear a

partir de la función set que como tienes

que haber pensado bien o por supuesto

que tú lo intuiste set Recibe un

iterable y se acuerdan que las listas

también son literales Entonces nosotros

lo que vamos a hacer es que le vamos a

pasar segundo que vendría siendo la

lista que nosotros definimos acá arriba

Ahora sí nosotros vamos a guardar Y esto

es lo que hace por supuesto es crear un

set en base a una lista pero también lo

podríamos hacer en base a una tupla

Ahora sí nosotros vemos que tenemos el

34 y 5 que vendría siendo nuestra

segunda lista que después a un set ahora

vamos a ver los operadores interesantes

que tienen los sets dentro de python el

primer operador es este y si nosotros

colocamos primera con segundo y lo

imprimimos vamos a ver qué es lo que nos

devuelve y aquí nosotros vemos que

tenemos los números del 1 2 3 4 y 5 Qué

quiere decir esto se va a encargar de

poder hacer una Unión de los sets que

nosotros le pasemos Y por supuesto como

tiene la característica de ser un set va

a eliminar todos los elementos que se

encuentran duplicados en este caso va a

sacar uno también va a sacar dos pero

este set no cuenta con el 5 pero si

cuenta con tres y cuenta con cuatro así

es que no va a agregar el 3 no va a

agregar el 4 Pero sí va a agregar el 5

aquí al final Esa es la gracia que

tienen los sets cuando nosotros estamos

utilizando este operador este operador

que aparece acá se le conoce como Unión

y como bien Dice el nombre se va a

encargar de poder juntar el primer set

con el segundo set y los va a unir vamos

a ver el siguiente operador que es el de

intersección para nosotros vamos a crear

Primero aquí vamos a colocar un

ampersand y el segundo set vamos a

aprovechar de comentar la línea de

arriba Vamos a guardar y vamos a

ejecutar nuestro código y aquí nosotros

vemos que nos está devolviendo el 3 y el

4 por qué Porque la intersección

solamente nos va a devolver los

elementos que se encuentren dentro del

primer set y que también se encuentren

dentro del segundo set Y en este momento

los únicos elementos que se encuentran

dentro del primero y del segundo son

tres y cuatro porque se encuentran acá y

también se encuentran acá y este

operador se llama intersección ya vista

la intersección vamos a pasar al

siguiente operador Así es que vamos a

escribir acá print primer y ahora vamos

a utilizar el operador de diferencia

diferencia se hace colocando el símbolo

de menos entre los dos sets o los dos

conjuntos o los dos grupos de los cuales

queremos calcular esta diferencia vamos

a comentar la línea de arriba y vamos a

ejecutar nuestro Script y acá nosotros

vemos que tenemos el número 1 y tenemos

el número 2 que fue lo que ocurrió con

el 3 el 4 y el 5 cuando nosotros estamos

utilizando diferencia lo que nosotros

estamos tratando de hacer es Mostrar

solamente los datos que se encuentran en

el conjunto de la izquierda pero que

además le estamos quitando los que se

encuentran a la derecha Qué quiere decir

esto Si es que en el primer grupo se

encuentra por ejemplo el 1 y el 2 pero

en mi segundo grupo se encuentra el 2 Y

el 3 lo que va a hacer es tratar de

eliminar estos elementos que se

encuentran acá del primer grupo Entonces

el 3 se encuentra arriba no Entonces no

hay que quitarlo el dos se encuentra

arriba Sí entonces hay que quitarlo Y

eso nos dejaría solamente con el 1 Esto

es lo que hace el operador de diferencia

calcula la diferencia entre dos sets

quitando los elementos al primer set

ahora vamos a continuar con el siguiente

operador el cual es la diferencia

simétrica Así es que aquí nosotros vamos

a colocar print primer espacio y acá

nosotros tenemos que colocar el caret

que vendría siendo este símbolo que

parece un sombrerito que se encuentra

acá y acá nosotros vamos a colocar el

las diferencias simétricas vamos a

escribir acá diferencia simétrica nos va

a devolver los elementos que se

encuentren en el primero y en el segundo

pero que no se encuentren entre el uno y

el otro que quiere decir esto si yo

tengo un set que contiene uno dos y tres

y tengo otro set que contiene dos tres y

cuatro esto lo que hará será devolverme

el 1 y el 4 entonces los que se

encuentran duplicados los va a eliminar

vamos a ejecutar nuestro código y aquí

nosotros vemos que tenemos uno dos y

cinco porque tenemos 1 2 y 5 porque acá

se encuentra el 1 y el 2 acá se

encuentra el 5 pero el 3 y el 4 se

encuentra en el primero y en el segundo

Entonces los saca de esta operación

estas operaciones nosotros las vamos a

utilizar muchísimo cuando estemos

trabajando con datos reales y ahora cuál

es el problema que tienen los sets los

sets no se encuentran ordenados y

Nosotros tampoco podemos acceder a un

elemento de estos si es que yo coloco

por ejemplo acá segundo Abre paréntesis

corchetes y acá colocamos por ejemplo 0

y guardo aquí me va a mostrar un error y

es porque con los sets nosotros no

podemos acceder a los elementos de esto

lo que sí podemos hacer es preguntar If

por ejemplo cinco en segundo y en el

caso de que este sí se encuentre

nosotros vamos a imprimir Hola mundo

ahora si nosotros guardamos y vamos a

ejecutar acá y aquí nosotros vemos que

nos está imprimiendo el String de Hola

mundo

[Música]

en este video te voy a explicar Qué son

los diccionarios y los diccionarios son

uno de los tipos de datos más utilizados

en python en conjunto con las listas

vamos a verlas primero vamos a crear un

nuevo archivo que se va a llamar 11

guión

diccionarios.py Cerramos el explorador

Cerramos el archivo anterior y ahora sí

vamos a comenzar los diccionarios son

una conexión de datos que se encuentran

agrupados por una llave y un valor esto

quiere decir que nosotros podemos tener

una colección que va a tener por ejemplo

un identificador como nombre que vendría

siendo muy similar a lo que vendría

siendo un nombre de variable y luego de

esto a estas llaves Nosotros le vamos a

asignar un valor que podría ser por

ejemplo Hola mundo Nosotros también

podríamos después tener otra llave que

podría ser por ejemplo la edad y la edad

Podría tener el valor de por ejemplo 27

y así sucesivamente vamos a ver ahora

cómo nosotros podemos crear un

diccionario Y a todo esto los

diccionarios son sumamente utilizados

porque por lo general es como las bases

de datos nos de a nosotros los datos

como por ejemplo podría ser un listado

de usuarios un listado de productos y

así sucesivamente vamos a verlo para

hacer el ejercicio sumamente fácil vamos

a crear primero un punto un punto como

bien Nosotros sabemos tiene un eje x y

un eje Y en este caso el eje x nosotros

se lo vamos a agregar en conjunto con

las comillas dobles aquí Nosotros le

tenemos que pasar un String solamente

acepta strings como la llave sin embargo

el valor que nosotros le asignemos que

le vamos a colocar aquí a la derecha

puede ser cualquier cosa así que esto es

lo que nosotros nos tenemos que acordar

lo de la izquierda es un String y lo de

la derecha es absolutamente Cualquier

cosa aquí nosotros dentro de X le vamos

a colocar el valor de por ejemplo 25 y

después de eso vamos a agregarle otra

llave a la cual también le vamos a

asignar un valor que en este caso la

llave va a ser y o y aquí Nosotros le

vamos a dar el valor de 50 vamos a

analizar ahora cuál es la estructura de

un Diccionario nosotros para poder crear

un diccionario tenemos que utilizar el

Abre paréntesis de llaves y para poder

cerra nuestro diccionario vamos a tener

que utilizar el cierre paréntesis de

llaves Luego de eso cada llave que

nosotros definamos la vamos a tener que

definir necesariamente con un String

Luego de eso nosotros vamos a colocar

los dos puntos y al costado derecho le

vamos a indicar el valor que le queremos

asignar si nosotros queremos agregar

además otra llave Dentro de este

diccionario necesariamente nos vamos a

tener que separar por una coma como

nosotros estamos viendo acá ahora si

nosotros queremos imprimir esto en

nuestra terminal podemos utilizar print

vamos a llamar a punto y ahora vamos a

ejecutar esto acá nosotros podemos ver

que tenemos el punto que se está

imprimiendo noten esto nosotros tenemos

nuevamente la sintaxis parecida de acá

arriba pero nosotros en lugar de

utilizar las comillas dobles estamos

utilizando las comillas simples para

poder indicar cuándo es una llave y

luego a la derecha nosotros le estamos

indicando Cuál es el valor que esta

llave tiene asignado ahora si nosotros

queremos acceder a alguno de los valores

que se encuentran asociados a estas

llaves nosotros podemos utilizar el

paréntesis al cuadrado ahora esto no son

listas y tampoco son sets así que

nosotros no podemos acceder a estos

valores utilizando el 0 o el uno aquí

nosotros tenemos que indicarle mediante

un String Cuál es la llave a la cual

nosotros queremos acceder Entonces si

nosotros queremos acceder a x nosotros

acá dentro de este paréntesis cuadrado

tenemos que colocar el String TX Así que

acá nosotros vamos a colocar x y vamos a

guardar vamos a ejecutar nuestra

aplicación y aquí nos está indicando el

valor que se encuentra asociado a la

llave de X que en este caso es 25 ahora

vamos a duplicar esta línea para que

veamos que también nosotros podemos

acceder a y ahora sí ejecutamos Y acá

tenemos el valor de X Y también tenemos

el valor de y continuando con los

diccionarios nosotros podemos también

agregarle más llaves a los diccionarios

bajo demanda Qué quiere decir esto

nosotros podemos llamar a punto

utilizamos los paréntesis cuadrados

nuevamente y acá le vamos a indicar una

nueva llave que nosotros queramos

agregar en este caso yo le voy a indicar

y le voy a asignar el valor de 45 y

vamos a guardar ahora si es que yo

decido imprimir nuevamente mi punto

vamos a ejecutar nuestra aplicación

vamos a ver ahora que nuestro

diccionario tiene el valor de X tiene el

valor de y el valor de Z como sus llaves

ya la derecha se encuentran los valores

asociados a estos ahora lo que nosotros

hicimos acá fue crear una nueva llave

Dentro de este diccionario Pero qué es

lo que pasa si nosotros quisiéramos

acceder a algún valor que se encuentra

dentro de este diccionario pero cuya

llave no existe por ejemplo tratemos de

acceder a Lala que es lo que ocurrirá

nosotros vamos a ejecutar nuestra

aplicación y acá nosotros vemos que

tenemos un error nos está indicando qué

error Lala Qué quiere decir esto que la

llave Lala no existe Entonces nosotros

tenemos dos alternativas para poder

ahorrarnos este problema el primero es

preguntar si es que Lala se encuentra

dentro de nuestro punto eso nosotros lo

hacemos con un If acá nosotros colocamos

el ala y ahora vamos a utilizar la

reservada de in y luego le indicamos el

diccionario en el caso que el ala la

llave Lala por supuesto se encuentre

dentro de punto vamos a poder ejecutar

este código que se encuentra acá y aquí

vamos a imprimir print punto Lala y

solamente para que tengamos una mejor

referencia vamos a agregar el String

como primer argumento de print encontré

el ala vamos a guardar ahora para poder

ejecutar esto de manera exitosa vamos a

tener que comentar esta línea así que

nos venimos acá comentamos guardamos y

ahora sí ejecutamos y ahora vemos que

tenemos nuevamente los sprints que ya

teníamos antes Pero por supuesto el

print que se encuentra dentro de este If

no se está ejecutando porque no se

encuentra el ala como llave del punto

Ahora sí vamos a continuar el siguiente

método que nosotros podemos utilizar

para poder acceder a un valor del

diccionario pero que nuestra aplicación

no explote es utilizando el método get

que tienen los diccionarios en ese caso

nosotros vamos a llamar a print vamos a

llamar a punto y aquí escribimos punto

get abre y cierra paréntesis y acá

Nosotros le tenemos que indicar String

que le vamos a pasar como argumento y

este String va a ser la llave del

diccionario acá nosotros vamos a colocar

x y vamos a guardar ahora vamos a

ejecutar ya que nosotros vemos que

tenemos nuevamente el valor de 25 Ahora

qué pasa si por alguna razón el valor no

existiese como por ejemplo podría ser

Lala vamos a guardar y vamos a ver qué

es lo que nos devuelve nos está

devolviendo Non esto quiere decir que el

valor por supuesto no existe dentro de

este diccionario afortunadamente lo que

nosotros también podemos hacer es

pasarle un valor por defecto en el caso

que la llave no exista y eso se lo

pasamos como un segundo argumento aquí

yo le voy a indicar que el valor por

defecto va a ser 97 ahora voy a guardar

y voy a ejecutar nuevamente mi

aplicación y acá vemos que tenemos el

valor de 97 y a continuación si yo

quisiera eliminar alguna de estas llaves

incluyendo su valor yo lo que puedo

hacer es utilizar del espacio seguido de

la llave que yo quiero eliminar en

conjunto con su valor en este caso vamos

a eliminar

y esto lo que hará será eliminar por

supuesto x asociado con su valor pero

también existe una función que se llama

del que me va a permitir a mí poder

eliminar también una llave que se

encuentra asociada a mi diccionario

ahora si es que yo ejecuto mi aplicación

Por supuesto que no me va a mostrar nada

porque se me olvidó colocar el print Así

es que vamos a agregar acá un print de

punto vamos a guardar y ahora si

ejecutamos vamos a ver que tenemos

nuevamente el diccionario pero este

solamente tiene el valor de Z ahora

vamos a aprovechar de agregar nuevamente

el valor de X porque hay algo que les

quiero mostrar vamos a colocar acá punto

x y le vamos a entregar el valor de 25

si yo quiero iterar todas las llaves con

su valor dentro de python yo puedo hacer

eso con un Ford Aquí voy a escribir for

y luego de eso vamos a escribir valor in

punto dos puntos y luego vamos a

imprimir valor vamos a ver qué es lo que

esto nos devuelve porque lo más probable

es que no nos devuelva lo que tú estás

esperando ahora sí nosotros vamos a

pinchar acá para poder ejecutar nuestra

aplicación y fíjense que ahora me está

devolviendo Z y x que vendrían siendo

las llaves que tienen asociado este

diccionario Entonces si es que yo

quisiera acceder a los valores como lo

puedo hacer en ese caso lo que yo puedo

hacer Sencillamente es llamar a mi

diccionario y luego de eso pasarle el

valor como paréntesis cuadrados vamos a

ejecutar esto y acá nosotros vemos que

tenemos z45 y x 25 ahora no es necesario

que nosotros estemos utilizando esta

sintaxis para poder acceder a los

elementos de un Diccionario nosotros

podemos utilizar otra que podría ser más

conveniente acá nosotros vamos a

escribir por valor in punto y acá vamos

a llamar al método items y vamos a

pasarle una abra y cierra paréntesis

luego de esos dos puntos y vamos a

imprimir valor para ver qué es lo que

esto nos devuelve vamos a ejecutar

nuestra aplicación y Aquí vemos que nos

está devolviendo tuplas donde el primer

elemento vendría siendo la llave y el

segundo elemento vendría siendo el valor

y como nosotros aprendimos Nosotros

podemos hacer un desempaquetado de las

duplas para poder acceder a sus valores

al igual que listas Así es que vamos a

hacer eso mismo vamos a copiar esta

línea vamos a pegarla acá abajo y aquí

en lugar de escribir valor vamos a

escribir llave coma valor y ahora

podemos imprimir acá llave y valor y

ahora si nosotros ejecutamos nuestra

aplicación vamos a ver que tenemos

nuevamente z45 y x25 estas son todas las

formas que nosotros tenemos para poder

acceder a los diccionarios Podemos

agregar y podemos eliminarle llaves con

sus valores a estos diccionarios Pero

por supuesto que esto no vendría siendo

un uso real de los diccionarios Así que

vamos a ver ahora inmediatamente un uso

bastante más realista de los

diccionarios en python para eso vamos a

crear un listado de usuarios Así es que

vamos a crear una lista y acá Nosotros

le vamos a pasar los diccionarios cuando

nosotros estamos trabajando con

elementos que vienen de una base de

datos necesariamente vamos a tener que

tener un identificador único y

identificador algo así como el número de

impuestos que tú podrías tener en tu

país en Chile es el root en Colombia

creo que se llama dni pero finalmente es

un número que solamente tienes asociado

tú y esto es cosa que cuando tú es

buscar algo dentro de la base de datos

ingresas ese número y te va a devolver

absolutamente todos los datos de esa

persona en bases de datos o en este caso

cuando lo estemos trabajando con python

es exactamente lo mismo y este

identificador Por lo general se le llama

ID y el valor que nosotros le vamos a

colocar va a ser el de uno por qué

Porque este va a ser el primer usuario

que nosotros vamos a crear dentro de

esta lista y además Nosotros le vamos a

dar un nombre y el nombre que va a tener

este usuario es el de Chanchito y vamos

a agregar acá una coma porque estamos

agregando un elemento más Dentro de este

listado ahora lo que vamos a hacer es

duplicar esta línea vamos a cambiar su

ID por 2 el nombre lo vamos a cambiar

por feliz copiamos nuevamente esta línea

el nombre ya no va a ser feliz va a ser

Nicolás vamos a copiar nuevamente la

línea y el nombre Ahora va a ser Felipe

tenemos que cambiar los ID porque estos

tienen que ser únicos así que tenemos

acá tres y cuatro y vamos a guardar

ahora si nosotros quisiéramos acceder

solamente a los nombres de este listado

de usuarios lo que nosotros tendríamos

que hacer es iterar los usuarios

Entonces ya vamos a Ford usuario in

usuarios y acá Nosotros llamamos a print

de usuario paréntesis cuadrados y acá le

pasamos la propiedad o la llave a la

cual nosotros queremos acceder que en

este caso es nombre y ahora cuando

ejecutemos nuestra aplicación vamos a

ver qué con el uso de este listado de

usuarios pudimos sacar absolutamente

todos los nombres de los usuarios

[Música]

en este video vamos a ver el operador de

desempaquetamiento para eso nos venimos

acá al editor creamos un nuevo archivo

se va a llamar 12- operador guión

desempaquetar punto p y cerramos el

archivo anterior Cerramos el explorador

y continuamos vamos a suponer que

nosotros tenemos una lista la cual es

igual a los números de 1 2 3 y 4 si

nosotros pasamos esta lista a la función

de print vamos a ver que lo que nos va a

imprimir es un listado Pero qué es lo

que pasaría si nosotros quisiéramos

tener todos estos elementos dentro de

esta función de print pero que en lugar

de imprimirlos como una lista que los

imprima como uno dos tres y cuatro Qué

quiere decir esto que tomo el primer

elemento de nuestra lista y se lo paso a

la función print como su primer

argumento el 2 como el segundo argumento

3 como tercer argumento y cuatro como

cuarto argumento esto es sumamente

poderoso Bueno si nosotros quisiéramos

hacer esto mismo en ese caso podemos

hacer uso del operador de

desempaquetamiento para eso nosotros

tenemos que llamar a print y acá la

lista o de hecho cualquier nosotros

tenemos que colocarle antes un asterisco

y ahora si nosotros ejecutamos nuestro

código vamos a ver que nos está

devolviendo Exactamente lo mismo esto

Nosotros también lo podemos hacer con

las duplas voy a eliminar esto vamos a

guardar y vamos a ejecutar y aquí

nosotros vemos que tenemos Exactamente

lo mismo y ahora para qué nos va a

servir esto en el caso que nosotros

tengamos una función definida vamos a

decir que se llama n y esta recibe los

argumentos por ejemplo n1 n2 y n3 y por

alguna razón nosotros tengamos estos

tres argumentos pero los tengamos dentro

de una lista en ese caso lo que nosotros

podemos hacer es llamar esta misma

función pasándole a nuestra lista pero

agregamos el operador de

desempaquetamiento para que se los pase

cada uno como cada uno de sus argumentos

ahora con el operador de

desempaquetamiento nosotros también lo

que podemos hacer es combinar listas Así

es que lo que vamos a hacer ahora es

crear una lista dos Aquí vamos a

renombrar esta por lista 1 y vamos a

aprovechar de comentar estas dos líneas

y aquí lista dos va a ser igual a otra

lista que va a tener 5 6 y eso vamos a

cambiar nuestra tupla por otra lista y

ahora lo que vamos a hacer es generar

una lista combinada que se va a llamar

combinada y Esto va a ser igual a una

lista operador de desempaquetamiento

lista 1 coma espacio asterisco

nuevamente lista 2 y ahora si es que

nosotros imprimimos combinada vamos a

ver que tenemos una nueva lista que

contiene absolutamente todos los

elementos de la lista 1 y también de la

lista dos Nosotros también por supuesto

Podemos agregar elementos al comienzo

por ejemplo vamos a agregar acá Hola

entremedio de lista 1 y lista dos vamos

a agregar mundo y al final vamos a

agregar el String de Chanchito ahora

vamos a guardar y vamos a volver a

ejecutar y acá nosotros tenemos Hola

tenemos nuestra lista 1 después tenemos

mundo tenemos nuestra lista 2 y después

tenemos Chanchito ahora este operador

también lo podemos utilizar con los

diccionarios la única diferencia Es que

la sintaxis va a ser similar a esta en

lugar de utilizar un asterisco va a

utilizar dos les voy a mostrar ahora

cómo se abría eso vamos a crear acá

nuestro punto 1 y Esto va a ser igual a

x y su valor va a ser 19 vamos tener un

punto 2 el cual va a tener un y su valor

va a ser 15 ahora vamos a guardar y

vamos a generar un nuevo punto y esto

vamos a decir que va a ser igual

nuevamente a un diccionario pero aquí

nosotros vamos a utilizar el operador de

desempaquetamiento para los diccionarios

y este se hace con dos asteriscos acá

nosotros colocamos punto 1 coma

nuevamente dos asteriscos y punto 2

ahora vamos a guardar y vamos a ejecutar

aquí nosotros vemos ahora que no nos

muestra nada porque nos falta colocar un

print volvemos a ejecutar y acá nosotros

tenemos un nuevo diccionario creado con

las propiedades de ambos diccionarios

las de punto uno y también las

propiedades de Punto 2 y esto se

encuentran dentro de nuevo punto ahora

qué es lo que ocurriría si nosotros

además de Esto colocáramos justamente en

punto 1 nuevamente la propiedad de y le

asignáramos el valor por ejemplo de Hola

qué creen que pasaría Bueno vamos a

verlo en este caso vamos a ejecutarlo Y

tenemos nuevamente el valor de 19 y

también el de 15 para Y qué es lo que

está ocurriendo la forma de asignar las

propiedades es desde la derecha hacia la

izquierda quiere decir esto Si es que

acá yo tengo una propiedad x y acá yo

también tengo una propiedad x esta

propiedad x va a ser reemplazada por la

que se encuentra en la derecha pero si

es que esta propiedad x no se encuentra

en la izquierda lo que va a hacer es que

va a venir y se va a asignar a este

diccionario que se encuentra en la

izquierda ahora Nosotros también lo que

podemos hacer es agregarle más llaves

con valores a este diccionario vamos a

agregar ahora Z y Esto va a ser igual a

mundo guardamos volvemos a ejecutar y

aquí nosotros vemos que hemos creado un

nuevo diccionario que contiene Z que

contiene y que también contiene X ahora

podremos hacer esto entre medio por

supuesto que sí Vamos a intentarlo acá

vamos a colocar una nueva propiedad que

se va a llamar Lala y esta Va a ser

igual a Hola mundo y vamos a separar por

una coma y vamos a ver ahora qué es lo

que ocurre y vemos ahora que tenemos

este nuevo diccionario y que la

propiedad de X viene de punto 1 la

propiedad de y viene de Punto 2 la

propiedad del ala nosotros la agregamos

justamente entre medio de punto uno y

punto 2 mientras estábamos haciendo uso

del creador de desempaquetamiento y al

final volvemos a agregar una nueva

propiedad la cual es Z y su valor es

mundo

[Música]

